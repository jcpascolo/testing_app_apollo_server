{
  "_from": "sequelize",
  "_id": "sequelize@5.1.0",
  "_inBundle": false,
  "_integrity": "sha512-LmjEAedMTItkIx0mcBfXVmdkkIQOc+1reuv+UpqSADGvQofZ4Sn9ElUBE8egLgCK4oWjy1Ybsju+YDAJpCv1ww==",
  "_location": "/sequelize",
  "_phantomChildren": {},
  "_requested": {
    "escapedName": "sequelize",
    "fetchSpec": "latest",
    "name": "sequelize",
    "raw": "sequelize",
    "rawSpec": "",
    "registry": true,
    "saveSpec": null,
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/sequelize/-/sequelize-5.1.0.tgz",
  "_shasum": "b0f4edfd6dd1a1aaa7cf7e9febd0685475d18c97",
  "_shrinkwrap": null,
  "_spec": "sequelize",
  "_where": "/home/jcgp/Escritorio/apolloServer1",
  "author": {
    "email": "sascha@depold.com",
    "name": "Sascha Depold"
  },
  "bugs": {
    "url": "https://github.com/sequelize/sequelize/issues"
  },
  "bundleDependencies": false,
  "commitlint": {
    "extends": [
      "@commitlint/config-angular"
    ]
  },
  "contributors": [
    {
      "name": "Sascha Depold",
      "email": "sascha@depold.com"
    },
    {
      "name": "Jan Aagaard Meier",
      "email": "janzeh@gmail.com"
    },
    {
      "name": "Daniel Durante",
      "email": "me@danieldurante.com"
    },
    {
      "name": "Mick Hansen",
      "email": "mick.kasper.hansen@gmail.com"
    },
    {
      "name": "Sushant Dhiman",
      "email": "sushantdhiman@outlook.com"
    }
  ],
  "dependencies": {
    "bluebird": "^3.5.0",
    "cls-bluebird": "^2.1.0",
    "debug": "^4.1.1",
    "depd": "^2.0.0",
    "dottie": "^2.0.0",
    "inflection": "1.12.0",
    "lodash": "^4.17.11",
    "moment": "^2.24.0",
    "moment-timezone": "^0.5.21",
    "retry-as-promised": "^3.1.0",
    "semver": "^5.6.0",
    "sequelize-pool": "^1.0.2",
    "toposort-class": "^1.0.1",
    "uuid": "^3.2.1",
    "validator": "^10.11.0",
    "wkx": "^0.4.6"
  },
  "deprecated": false,
  "description": "Multi dialect ORM for Node.JS",
  "devDependencies": {
    "@commitlint/cli": "^7.3.2",
    "@commitlint/config-angular": "^7.3.1",
    "@types/bluebird": "^3.5.26",
    "@types/node": "^10.12.27",
    "@types/validator": "^10.9.0",
    "big-integer": "^1.6.42",
    "chai": "^4.x",
    "chai-as-promised": "^7.x",
    "chai-datetime": "^1.x",
    "chai-spies": "^1.x",
    "continuation-local-storage": "^3.x",
    "cross-env": "^5.2.0",
    "env-cmd": "^8.0.0",
    "esdoc": "^1.1.0",
    "esdoc-inject-style-plugin": "^1.0.0",
    "esdoc-standard-plugin": "^1.0.0",
    "eslint": "^5.15.0",
    "eslint-plugin-jsdoc": "^4.1.1",
    "eslint-plugin-mocha": "^5.2.1",
    "husky": "^1.3.1",
    "js-combinatorics": "^0.5.4",
    "lcov-result-merger": "^3.0.0",
    "lint-staged": "^8.1.5",
    "mariadb": "^2.0.3",
    "mocha": "^6.0.2",
    "mysql2": "^1.6.5",
    "nyc": "^13.3.0",
    "pg": "^7.8.1",
    "pg-hstore": "^2.x",
    "pg-types": "^2.0.0",
    "rimraf": "^2.6.3",
    "sinon": "^7.2.6",
    "sinon-chai": "^3.2.0",
    "sqlite3": "^4.0.6",
    "tedious": "^6.0.0",
    "typescript": "^3.3.3333"
  },
  "engines": {
    "node": ">=6.0.0"
  },
  "files": [
    "lib",
    "types/index.d.ts",
    "types/lib"
  ],
  "homepage": "http://docs.sequelizejs.com/",
  "husky": {
    "hooks": {
      "commit-msg": "commitlint -E HUSKY_GIT_PARAMS",
      "pre-commit": "lint-staged"
    }
  },
  "keywords": [
    "mariadb",
    "mssql",
    "mysql",
    "nodejs",
    "object relational mapper",
    "orm",
    "postgres",
    "postgresql",
    "sqlite"
  ],
  "license": "MIT",
  "lint-staged": {
    "*.js": "eslint"
  },
  "main": "index.js",
  "name": "sequelize",
  "optionalDependencies": {},
  "options": {
    "env_cmd": "./test/config/.docker.env"
  },
  "readme": "# Sequelize\n\n[![npm version](https://img.shields.io/npm/v/sequelize.svg)](https://www.npmjs.com/package/sequelize)\n[![Build Status](https://travis-ci.org/sequelize/sequelize.svg?branch=master)](https://travis-ci.org/sequelize/sequelize)\n[![Windows Build status](https://ci.appveyor.com/api/projects/status/9l1ypgwsp5ij46m3/branch/master?svg=true)](https://ci.appveyor.com/project/sushantdhiman/sequelize/branch/master)\n[![codecov](https://codecov.io/gh/sequelize/sequelize/branch/master/graph/badge.svg)](https://codecov.io/gh/sequelize/sequelize)\n[![Bountysource](https://www.bountysource.com/badge/team?team_id=955&style=bounties_received)](https://www.bountysource.com/teams/sequelize/issues?utm_source=Sequelize&utm_medium=shield&utm_campaign=bounties_received)\n[![Slack Status](http://sequelize-slack.herokuapp.com/badge.svg)](http://sequelize-slack.herokuapp.com/)\n[![npm downloads](https://img.shields.io/npm/dm/sequelize.svg?maxAge=2592000)](https://www.npmjs.com/package/sequelize)\n![node](https://img.shields.io/node/v/sequelize.svg)\n[![License](https://img.shields.io/npm/l/sequelize.svg?maxAge=2592000?style=plastic)](https://github.com/sequelize/sequelize/blob/master/LICENSE)\n[![semantic-release](https://img.shields.io/badge/%20%20%F0%9F%93%A6%F0%9F%9A%80-semantic--release-e10079.svg)](https://github.com/semantic-release/semantic-release)\n\nSequelize is a promise-based Node.js ORM for Postgres, MySQL, MariaDB, SQLite and Microsoft SQL Server. It features solid transaction support, relations, read replication and more.\n\n## v5 Release\n\nYou can find upgrade guide and changelog [here](https://github.com/sequelize/sequelize/blob/master/docs/upgrade-to-v5.md)\n\n```bash\nnpm install --save sequelize # will install v5\n```\n\n## Table of Contents\n- [Installation](#installation)\n- [Documentation](#documentation)\n- [Responsible disclosure](#responsible-disclosure)\n- [Resources](#resources)\n\n## Installation\n\n```bash\n$ npm install --save sequelize\n\n# And one of the following:\n$ npm install --save pg pg-hstore\n$ npm install --save mysql2\n$ npm install --save mariadb\n$ npm install --save sqlite3\n$ npm install --save tedious # MSSQL\n```\n\nSequelize follows [SEMVER](http://semver.org). Supports Node v6 and above to use ES6 features.\n\n## Documentation\n- [v5 Documentation](http://docs.sequelizejs.com)\n- [v4 Documentation](https://github.com/sequelize/sequelize/blob/v4/docs)\n- [v3 Documentation](https://sequelize.readthedocs.io/en/v3/)\n- [Contributing](https://github.com/sequelize/sequelize/blob/master/CONTRIBUTING.md)\n\n## Responsible disclosure\nIf you have any security issue to report, contact project maintainers privately. You can find contact information [here](https://github.com/sequelize/sequelize/blob/master/CONTACT.md)\n\n## Resources\n\n- [Changelog](https://github.com/sequelize/sequelize/releases)\n- [Slack](http://sequelize-slack.herokuapp.com/)\n\n### Tools\n- [Sequelize & TypeScript](https://github.com/RobinBuschmann/sequelize-typescript)\n- [Sequelize & GraphQL](https://github.com/mickhansen/graphql-sequelize)\n- [Add-ons & Plugins](https://github.com/sequelize/sequelize/wiki/Add-ons-&-Plugins)\n- [Sequelize CLI](https://github.com/sequelize/cli)\n\n### Learning\n- [Getting Started](http://docs.sequelizejs.com/manual/getting-started)\n- [Express Example](https://github.com/sequelize/express-example)\n\n### Translations\n- [English v5](http://docs.sequelizejs.com) (OFFICIAL)\n- [中文文档 v4](https://github.com/demopark/sequelize-docs-Zh-CN) (UNOFFICIAL)",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/sequelize/sequelize.git"
  },
  "scripts": {
    "cover": "rimraf coverage && npm run teaser && npm run cover-integration && npm run cover-unit && npm run merge-coverage",
    "cover-integration": "cross-env COVERAGE=true nyc --reporter=lcovonly mocha --require scripts/mocha-bootload -t 30000 --exit \"test/integration/**/*.test.js\" && node -e \"require('fs').renameSync('coverage/lcov.info', 'coverage/integration.info')\"",
    "cover-unit": "cross-env COVERAGE=true nyc --reporter=lcovonly mocha --require scripts/mocha-bootload -t 30000 --exit \"test/unit/**/*.test.js\" && node -e \"require('fs').renameSync('coverage/lcov.info', 'coverage/unit.info')\"",
    "docs": "esdoc && cp docs/ROUTER esdoc/ROUTER && cp docs/favicon.ico esdoc/favicon.ico",
    "lint": "eslint lib test --quiet",
    "merge-coverage": "lcov-result-merger \"coverage/*.info\" \"coverage/lcov.info\"",
    "setup-mssql": "env-cmd $npm_package_options_env_cmd ./scripts/setup-mssql",
    "sscce": "env-cmd $npm_package_options_env_cmd node sscce.js",
    "sscce-mariadb": "cross-env DIALECT=mariadb npm run sscce",
    "sscce-mssql": "cross-env DIALECT=mssql npm run sscce",
    "sscce-mysql": "cross-env DIALECT=mysql npm run sscce",
    "sscce-postgres": "cross-env DIALECT=postgres npm run sscce",
    "sscce-sqlite": "cross-env DIALECT=sqlite npm run sscce",
    "teaser": "node scripts/teaser",
    "test": "npm run teaser && npm run test-unit && npm run test-integration",
    "test-all": "npm run test-mariadb && npm run test-mysql && npm run test-sqlite && npm run test-postgres && npm run test-postgres-native && npm run test-mssql",
    "test-docker": "npm run test-docker-unit && npm run test-docker-integration",
    "test-docker-integration": "env-cmd $npm_package_options_env_cmd npm run test-integration",
    "test-docker-unit": "npm run test-unit",
    "test-integration": "mocha --require scripts/mocha-bootload --globals setImmediate,clearImmediate --exit --check-leaks --colors -t 30000 --reporter spec \"test/integration/**/*.test.js\"",
    "test-integration-all": "npm run test-integration-mariadb && npm run test-integration-mysql && npm run test-integration-postgres && npm run test-integration-postgres-native && npm run test-integration-mssql && npm run test-integration-sqlite",
    "test-integration-mariadb": "cross-env DIALECT=mariadb npm run test-integration",
    "test-integration-mssql": "cross-env DIALECT=mssql npm run test-integration",
    "test-integration-mysql": "cross-env DIALECT=mysql npm run test-integration",
    "test-integration-postgres": "cross-env DIALECT=postgres npm run test-integration",
    "test-integration-postgres-native": "cross-env DIALECT=postgres-native npm run test-integration",
    "test-integration-sqlite": "cross-env DIALECT=sqlite npm run test-integration",
    "test-mariadb": "cross-env DIALECT=mariadb npm test",
    "test-mssql": "cross-env DIALECT=mssql npm test",
    "test-mysql": "cross-env DIALECT=mysql npm test",
    "test-pgsql": "npm run test-postgres",
    "test-postgres": "cross-env DIALECT=postgres npm test",
    "test-postgres-native": "cross-env DIALECT=postgres-native npm test",
    "test-postgresn": "npm run test-postgres-native",
    "test-sqlite": "cross-env DIALECT=sqlite npm test",
    "test-typings": "tsc -b types/tsconfig.json && tsc -b types/test/tsconfig.json",
    "test-unit": "mocha --require scripts/mocha-bootload --globals setImmediate,clearImmediate --exit --check-leaks --colors -t 30000 --reporter spec \"test/unit/**/*.js\"",
    "test-unit-all": "npm run test-unit-mariadb && npm run test-unit-mysql && npm run test-unit-postgres && npm run test-unit-postgres-native && npm run test-unit-mssql && npm run test-unit-sqlite",
    "test-unit-mariadb": "cross-env DIALECT=mariadb npm run test-unit",
    "test-unit-mssql": "cross-env DIALECT=mssql npm run test-unit",
    "test-unit-mysql": "cross-env DIALECT=mysql npm run test-unit",
    "test-unit-postgres": "cross-env DIALECT=postgres npm run test-unit",
    "test-unit-postgres-native": "cross-env DIALECT=postgres-native npm run test-unit",
    "test-unit-sqlite": "cross-env DIALECT=sqlite npm run test-unit"
  },
  "types": "types",
  "version": "5.1.0"
}
