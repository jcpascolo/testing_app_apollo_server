{
  "{\"sourceRoot\":\"/home/bruno/git_workspace/testing_app_apollo_server\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/bruno/git_workspace/testing_app_apollo_server\",\"filename\":\"/home/bruno/git_workspace/testing_app_apollo_server/index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/bruno/git_workspace/testing_app_apollo_server\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/bruno/git_workspace/testing_app_apollo_server",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/bruno/git_workspace/testing_app_apollo_server",
      "filename": "/home/bruno/git_workspace/testing_app_apollo_server/index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/bruno/git_workspace/testing_app_apollo_server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/bruno/git_workspace/testing_app_apollo_server/index.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/home/bruno/git_workspace/testing_app_apollo_server/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/bruno/git_workspace/testing_app_apollo_server",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _http = _interopRequireDefault(require(\"http\"));\n\nvar _schemas = _interopRequireDefault(require(\"./schemas/schemas\"));\n\nvar _resolvers = _interopRequireDefault(require(\"./resolvers/resolvers\"));\n\nvar _models = _interopRequireWildcard(require(\"./models/models\"));\n\nvar _jsonwebtoken = _interopRequireDefault(require(\"jsonwebtoken\"));\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n//https://knexjs.org/\n//docker exec -it postgres psql -U postgres tododb\nvar express = require('express');\n\nvar _require = require('apollo-server-express'),\n    ApolloServer = _require.ApolloServer;\n\nvar app = express();\nvar JWT_KEY = 'supersecret123';\nvar EXPIRE_TOKEN = \"7d\";\n\nvar authentication =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee(reqHeader) {\n    var token;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (reqHeader.req == undefined) {\n              token = reqHeader.connection.context['x-token'];\n            } else {\n              token = reqHeader.req.headers['x-token'];\n            }\n\n            if (!token) {\n              _context.next = 13;\n              break;\n            }\n\n            _context.prev = 2;\n            _context.next = 5;\n            return _jsonwebtoken.default.verify(token, JWT_KEY);\n\n          case 5:\n            return _context.abrupt(\"return\", _context.sent);\n\n          case 8:\n            _context.prev = 8;\n            _context.t0 = _context[\"catch\"](2);\n            return _context.abrupt(\"return\", false);\n\n          case 11:\n            _context.next = 14;\n            break;\n\n          case 13:\n            return _context.abrupt(\"return\", false);\n\n          case 14:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[2, 8]]);\n  }));\n\n  return function authentication(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nvar server = new ApolloServer({\n  typeDefs: _schemas.default,\n  resolvers: _resolvers.default,\n  context: function () {\n    var _context2 = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee2(reqHeader) {\n      return regeneratorRuntime.wrap(function _callee2$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.t0 = _models.default;\n              _context3.t1 = JWT_KEY;\n              _context3.t2 = EXPIRE_TOKEN;\n              _context3.next = 5;\n              return authentication(reqHeader);\n\n            case 5:\n              _context3.t3 = _context3.sent;\n              return _context3.abrupt(\"return\", {\n                models: _context3.t0,\n                JWT_KEY: _context3.t1,\n                EXPIRE_TOKEN: _context3.t2,\n                auth: _context3.t3\n              });\n\n            case 7:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    function context(_x2) {\n      return _context2.apply(this, arguments);\n    }\n\n    return context;\n  }()\n});\nserver.applyMiddleware({\n  app: app\n});\n\nvar httpServer = _http.default.createServer(app);\n\nserver.installSubscriptionHandlers(httpServer);\n\n_models.sequelize.sync().then(\n/*#__PURE__*/\n_asyncToGenerator(\n/*#__PURE__*/\nregeneratorRuntime.mark(function _callee3() {\n  return regeneratorRuntime.wrap(function _callee3$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          httpServer.listen({\n            port: 4000\n          }, function () {\n            console.log('Apollo Server on http://localhost:4000/graphql');\n          });\n\n        case 1:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _callee3);\n})));\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbImV4cHJlc3MiLCJyZXF1aXJlIiwiQXBvbGxvU2VydmVyIiwiYXBwIiwiSldUX0tFWSIsIkVYUElSRV9UT0tFTiIsImF1dGhlbnRpY2F0aW9uIiwicmVxSGVhZGVyIiwicmVxIiwidW5kZWZpbmVkIiwidG9rZW4iLCJjb25uZWN0aW9uIiwiY29udGV4dCIsImhlYWRlcnMiLCJqd3QiLCJ2ZXJpZnkiLCJzZXJ2ZXIiLCJ0eXBlRGVmcyIsInNjaGVtYSIsInJlc29sdmVycyIsIm1vZGVscyIsImF1dGgiLCJhcHBseU1pZGRsZXdhcmUiLCJodHRwU2VydmVyIiwiaHR0cCIsImNyZWF0ZVNlcnZlciIsImluc3RhbGxTdWJzY3JpcHRpb25IYW5kbGVycyIsInNlcXVlbGl6ZSIsInN5bmMiLCJ0aGVuIiwibGlzdGVuIiwicG9ydCIsImNvbnNvbGUiLCJsb2ciXSwibWFwcGluZ3MiOiI7O0FBUUE7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7Ozs7Ozs7Ozs7QUFaQTtBQUNBO0FBR0EsSUFBTUEsT0FBTyxHQUFHQyxPQUFPLENBQUMsU0FBRCxDQUF2Qjs7ZUFDeUJBLE9BQU8sQ0FBQyx1QkFBRCxDO0lBQXhCQyxZLFlBQUFBLFk7O0FBVVIsSUFBTUMsR0FBRyxHQUFHSCxPQUFPLEVBQW5CO0FBRUEsSUFBTUksT0FBTyxHQUFHLGdCQUFoQjtBQUNBLElBQU1DLFlBQVksR0FBRyxJQUFyQjs7QUFHQSxJQUFNQyxjQUFjO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSwwQkFBRyxpQkFBT0MsU0FBUDtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFHckIsZ0JBQUdBLFNBQVMsQ0FBQ0MsR0FBVixJQUFpQkMsU0FBcEIsRUFBK0I7QUFDN0JDLGNBQUFBLEtBQUssR0FBR0gsU0FBUyxDQUFDSSxVQUFWLENBQXFCQyxPQUFyQixDQUE2QixTQUE3QixDQUFSO0FBQ0QsYUFGRCxNQUdLO0FBQ0hGLGNBQUFBLEtBQUssR0FBR0gsU0FBUyxDQUFDQyxHQUFWLENBQWNLLE9BQWQsQ0FBc0IsU0FBdEIsQ0FBUjtBQUNEOztBQVJvQixpQkFVbEJILEtBVmtCO0FBQUE7QUFBQTtBQUFBOztBQUFBO0FBQUE7QUFBQSxtQkFZSkksc0JBQUlDLE1BQUosQ0FBV0wsS0FBWCxFQUFrQk4sT0FBbEIsQ0FaSTs7QUFBQTtBQUFBOztBQUFBO0FBQUE7QUFBQTtBQUFBLDZDQWVWLEtBZlU7O0FBQUE7QUFBQTtBQUFBOztBQUFBO0FBQUEsNkNBb0JaLEtBcEJZOztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLEdBQUg7O0FBQUEsa0JBQWRFLGNBQWM7QUFBQTtBQUFBO0FBQUEsR0FBcEI7O0FBeUJBLElBQU1VLE1BQU0sR0FBRyxJQUFJZCxZQUFKLENBQWlCO0FBQzlCZSxFQUFBQSxRQUFRLEVBQUVDLGdCQURvQjtBQUU5QkMsRUFBQUEsU0FBUyxFQUFUQSxrQkFGOEI7QUFHOUJQLEVBQUFBLE9BQU87QUFBQTtBQUFBO0FBQUEsNEJBQUUsa0JBQU9MLFNBQVA7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLDZCQUVMYSxlQUZLO0FBQUEsNkJBR0xoQixPQUhLO0FBQUEsNkJBSUxDLFlBSks7QUFBQTtBQUFBLHFCQUtPQyxjQUFjLENBQUNDLFNBQUQsQ0FMckI7O0FBQUE7QUFBQTtBQUFBO0FBRUxhLGdCQUFBQSxNQUZLO0FBR0xoQixnQkFBQUEsT0FISztBQUlMQyxnQkFBQUEsWUFKSztBQUtMZ0IsZ0JBQUFBLElBTEs7QUFBQTs7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxLQUFGOztBQUFBO0FBQUE7QUFBQTs7QUFBQTtBQUFBO0FBSHVCLENBQWpCLENBQWY7QUFZQUwsTUFBTSxDQUFDTSxlQUFQLENBQXVCO0FBQUVuQixFQUFBQSxHQUFHLEVBQUhBO0FBQUYsQ0FBdkI7O0FBRUEsSUFBTW9CLFVBQVUsR0FBR0MsY0FBS0MsWUFBTCxDQUFrQnRCLEdBQWxCLENBQW5COztBQUNBYSxNQUFNLENBQUNVLDJCQUFQLENBQW1DSCxVQUFuQzs7QUFFQUksa0JBQVVDLElBQVYsR0FDQ0MsSUFERDtBQUFBO0FBQUE7QUFBQTtBQUFBLHdCQUNPO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFFTE4sVUFBQUEsVUFBVSxDQUFDTyxNQUFYLENBQWtCO0FBQUVDLFlBQUFBLElBQUksRUFBRTtBQUFSLFdBQWxCLEVBQWtDLFlBQU07QUFDdENDLFlBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLGdEQUFaO0FBQ0QsV0FGRDs7QUFGSztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxDQURQIiwic291cmNlUm9vdCI6Ii9ob21lL2JydW5vL2dpdF93b3Jrc3BhY2UvdGVzdGluZ19hcHBfYXBvbGxvX3NlcnZlciIsInNvdXJjZXNDb250ZW50IjpbIi8vaHR0cHM6Ly9rbmV4anMub3JnL1xuLy9kb2NrZXIgZXhlYyAtaXQgcG9zdGdyZXMgcHNxbCAtVSBwb3N0Z3JlcyB0b2RvZGJcblxuXG5jb25zdCBleHByZXNzID0gcmVxdWlyZSgnZXhwcmVzcycpXG5jb25zdCB7IEFwb2xsb1NlcnZlciB9ID0gcmVxdWlyZSgnYXBvbGxvLXNlcnZlci1leHByZXNzJyk7XG5cblxuaW1wb3J0IGh0dHAgZnJvbSAnaHR0cCc7XG5pbXBvcnQgc2NoZW1hIGZyb20gJy4vc2NoZW1hcy9zY2hlbWFzJztcbmltcG9ydCByZXNvbHZlcnMgZnJvbSAnLi9yZXNvbHZlcnMvcmVzb2x2ZXJzJztcbmltcG9ydCBtb2RlbHMsIHsgc2VxdWVsaXplIH0gZnJvbSAnLi9tb2RlbHMvbW9kZWxzJztcbmltcG9ydCBqd3QgZnJvbSAnanNvbndlYnRva2VuJztcblxuXG5jb25zdCBhcHAgPSBleHByZXNzKCk7XG5cbmNvbnN0IEpXVF9LRVkgPSAnc3VwZXJzZWNyZXQxMjMnO1xuY29uc3QgRVhQSVJFX1RPS0VOID0gXCI3ZFwiO1xuXG5cbmNvbnN0IGF1dGhlbnRpY2F0aW9uID0gYXN5bmMgKHJlcUhlYWRlcikgPT4ge1xuICBsZXQgdG9rZW47XG5cbiAgaWYocmVxSGVhZGVyLnJlcSA9PSB1bmRlZmluZWQpIHtcbiAgICB0b2tlbiA9IHJlcUhlYWRlci5jb25uZWN0aW9uLmNvbnRleHRbJ3gtdG9rZW4nXVxuICB9XG4gIGVsc2Uge1xuICAgIHRva2VuID0gcmVxSGVhZGVyLnJlcS5oZWFkZXJzWyd4LXRva2VuJ107XG4gIH1cbiAgXG4gIGlmKHRva2VuKXtcbiAgICB0cnl7XG4gICAgICByZXR1cm4gYXdhaXQgand0LnZlcmlmeSh0b2tlbiwgSldUX0tFWSk7XG4gICAgfVxuICAgIGNhdGNoKGVycil7XG4gICAgICByZXR1cm4gZmFsc2VcbiAgICAgIC8vdGhyb3cgbmV3IEF1dGhlbnRpY2F0aW9uRXJyb3IoJ1VzdWFyaW8gbm8gYXV0ZW50aWNhZG8sIHBvciBmYXZvciBsb2dnZWVzZScpO1xuICAgIH1cbiAgfVxuICBlbHNle1xuICAgIHJldHVybiBmYWxzZTtcbiAgICAvL3Rocm93IG5ldyBBdXRoZW50aWNhdGlvbkVycm9yKCdVc3VhcmlvIG5vIGF1dGVudGljYWRvJylcbiAgfVxufVxuXG5jb25zdCBzZXJ2ZXIgPSBuZXcgQXBvbGxvU2VydmVyKHsgXG4gIHR5cGVEZWZzOiBzY2hlbWEsXG4gIHJlc29sdmVycyxcbiAgY29udGV4dDogYXN5bmMgKHJlcUhlYWRlcikgPT4ge1xuICAgIHJldHVybiB7XG4gICAgICBtb2RlbHMsXG4gICAgICBKV1RfS0VZLFxuICAgICAgRVhQSVJFX1RPS0VOLFxuICAgICAgYXV0aDogYXdhaXQgYXV0aGVudGljYXRpb24ocmVxSGVhZGVyKSxcbiAgICB9XG4gIH0sIFxufSk7XG5zZXJ2ZXIuYXBwbHlNaWRkbGV3YXJlKHsgYXBwIH0pO1xuXG5jb25zdCBodHRwU2VydmVyID0gaHR0cC5jcmVhdGVTZXJ2ZXIoYXBwKTtcbnNlcnZlci5pbnN0YWxsU3Vic2NyaXB0aW9uSGFuZGxlcnMoaHR0cFNlcnZlcik7XG5cbnNlcXVlbGl6ZS5zeW5jKClcbi50aGVuKCBhc3luYyAoKSA9PiB7XG5cbiAgaHR0cFNlcnZlci5saXN0ZW4oeyBwb3J0OiA0MDAwIH0sICgpID0+IHtcbiAgICBjb25zb2xlLmxvZygnQXBvbGxvIFNlcnZlciBvbiBodHRwOi8vbG9jYWxob3N0OjQwMDAvZ3JhcGhxbCcpO1xuICB9KTtcblxufSlcblxuXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "express",
        "require",
        "ApolloServer",
        "app",
        "JWT_KEY",
        "EXPIRE_TOKEN",
        "authentication",
        "reqHeader",
        "req",
        "undefined",
        "token",
        "connection",
        "context",
        "headers",
        "jwt",
        "verify",
        "server",
        "typeDefs",
        "schema",
        "resolvers",
        "models",
        "auth",
        "applyMiddleware",
        "httpServer",
        "http",
        "createServer",
        "installSubscriptionHandlers",
        "sequelize",
        "sync",
        "then",
        "listen",
        "port",
        "console",
        "log"
      ],
      "mappings": ";;AAQA;;AACA;;AACA;;AACA;;AACA;;;;;;;;;;AAZA;AACA;AAGA,IAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;eACyBA,OAAO,CAAC,uBAAD,C;IAAxBC,Y,YAAAA,Y;;AAUR,IAAMC,GAAG,GAAGH,OAAO,EAAnB;AAEA,IAAMI,OAAO,GAAG,gBAAhB;AACA,IAAMC,YAAY,GAAG,IAArB;;AAGA,IAAMC,cAAc;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAG,iBAAOC,SAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAGrB,gBAAGA,SAAS,CAACC,GAAV,IAAiBC,SAApB,EAA+B;AAC7BC,cAAAA,KAAK,GAAGH,SAAS,CAACI,UAAV,CAAqBC,OAArB,CAA6B,SAA7B,CAAR;AACD,aAFD,MAGK;AACHF,cAAAA,KAAK,GAAGH,SAAS,CAACC,GAAV,CAAcK,OAAd,CAAsB,SAAtB,CAAR;AACD;;AARoB,iBAUlBH,KAVkB;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,mBAYJI,sBAAIC,MAAJ,CAAWL,KAAX,EAAkBN,OAAlB,CAZI;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA,6CAeV,KAfU;;AAAA;AAAA;AAAA;;AAAA;AAAA,6CAoBZ,KApBY;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAdE,cAAc;AAAA;AAAA;AAAA,GAApB;;AAyBA,IAAMU,MAAM,GAAG,IAAId,YAAJ,CAAiB;AAC9Be,EAAAA,QAAQ,EAAEC,gBADoB;AAE9BC,EAAAA,SAAS,EAATA,kBAF8B;AAG9BP,EAAAA,OAAO;AAAA;AAAA;AAAA,4BAAE,kBAAOL,SAAP;AAAA;AAAA;AAAA;AAAA;AAAA,6BAELa,eAFK;AAAA,6BAGLhB,OAHK;AAAA,6BAILC,YAJK;AAAA;AAAA,qBAKOC,cAAc,CAACC,SAAD,CALrB;;AAAA;AAAA;AAAA;AAELa,gBAAAA,MAFK;AAGLhB,gBAAAA,OAHK;AAILC,gBAAAA,YAJK;AAKLgB,gBAAAA,IALK;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAHuB,CAAjB,CAAf;AAYAL,MAAM,CAACM,eAAP,CAAuB;AAAEnB,EAAAA,GAAG,EAAHA;AAAF,CAAvB;;AAEA,IAAMoB,UAAU,GAAGC,cAAKC,YAAL,CAAkBtB,GAAlB,CAAnB;;AACAa,MAAM,CAACU,2BAAP,CAAmCH,UAAnC;;AAEAI,kBAAUC,IAAV,GACCC,IADD;AAAA;AAAA;AAAA;AAAA,wBACO;AAAA;AAAA;AAAA;AAAA;AAELN,UAAAA,UAAU,CAACO,MAAX,CAAkB;AAAEC,YAAAA,IAAI,EAAE;AAAR,WAAlB,EAAkC,YAAM;AACtCC,YAAAA,OAAO,CAACC,GAAR,CAAY,gDAAZ;AACD,WAFD;;AAFK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CADP",
      "sourceRoot": "/home/bruno/git_workspace/testing_app_apollo_server",
      "sourcesContent": [
        "//https://knexjs.org/\n//docker exec -it postgres psql -U postgres tododb\n\n\nconst express = require('express')\nconst { ApolloServer } = require('apollo-server-express');\n\n\nimport http from 'http';\nimport schema from './schemas/schemas';\nimport resolvers from './resolvers/resolvers';\nimport models, { sequelize } from './models/models';\nimport jwt from 'jsonwebtoken';\n\n\nconst app = express();\n\nconst JWT_KEY = 'supersecret123';\nconst EXPIRE_TOKEN = \"7d\";\n\n\nconst authentication = async (reqHeader) => {\n  let token;\n\n  if(reqHeader.req == undefined) {\n    token = reqHeader.connection.context['x-token']\n  }\n  else {\n    token = reqHeader.req.headers['x-token'];\n  }\n  \n  if(token){\n    try{\n      return await jwt.verify(token, JWT_KEY);\n    }\n    catch(err){\n      return false\n      //throw new AuthenticationError('Usuario no autenticado, por favor loggeese');\n    }\n  }\n  else{\n    return false;\n    //throw new AuthenticationError('Usuario no autenticado')\n  }\n}\n\nconst server = new ApolloServer({ \n  typeDefs: schema,\n  resolvers,\n  context: async (reqHeader) => {\n    return {\n      models,\n      JWT_KEY,\n      EXPIRE_TOKEN,\n      auth: await authentication(reqHeader),\n    }\n  }, \n});\nserver.applyMiddleware({ app });\n\nconst httpServer = http.createServer(app);\nserver.installSubscriptionHandlers(httpServer);\n\nsequelize.sync()\n.then( async () => {\n\n  httpServer.listen({ port: 4000 }, () => {\n    console.log('Apollo Server on http://localhost:4000/graphql');\n  });\n\n})\n\n\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1553870493879
  },
  "{\"sourceRoot\":\"/home/bruno/git_workspace/testing_app_apollo_server/schemas\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/bruno/git_workspace/testing_app_apollo_server\",\"filename\":\"/home/bruno/git_workspace/testing_app_apollo_server/schemas/schemas.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/bruno/git_workspace/testing_app_apollo_server\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/bruno/git_workspace/testing_app_apollo_server/schemas",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/bruno/git_workspace/testing_app_apollo_server",
      "filename": "/home/bruno/git_workspace/testing_app_apollo_server/schemas/schemas.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/bruno/git_workspace/testing_app_apollo_server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/bruno/git_workspace/testing_app_apollo_server/schemas/schemas.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/home/bruno/git_workspace/testing_app_apollo_server/schemas/schemas.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/bruno/git_workspace/testing_app_apollo_server/schemas",
        "sourceFileName": "schemas.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _apolloServerExpress = require(\"apollo-server-express\");\n\nvar _list_schema = _interopRequireDefault(require(\"./list_schema.js\"));\n\nvar _task_schema = _interopRequireDefault(require(\"./task_schema.js\"));\n\nvar _user_schema = _interopRequireDefault(require(\"./user_schema\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  type Query {\\n    _: Boolean\\n  }\\n\\n  type Mutation {\\n    _: Boolean\\n  }\\n\\n  type Subscription {\\n    _: Boolean\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }\n\nvar linkSchema = (0, _apolloServerExpress.gql)(_templateObject());\nvar _default = [linkSchema, _list_schema.default, _task_schema.default, _user_schema.default];\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNjaGVtYXMuanMiXSwibmFtZXMiOlsibGlua1NjaGVtYSIsImdxbCIsImxpc3RTY2hlbWEiLCJ0YXNrU2NoZW1hIiwidXNlclNjaGVtYSJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUlBOztBQUVBOztBQUNBOztBQUNBOzs7Ozs7Ozs7Ozs7Ozs7O0FBRUEsSUFBTUEsVUFBVSxPQUFHQyx3QkFBSCxvQkFBaEI7ZUFjZSxDQUFDRCxVQUFELEVBQWFFLG9CQUFiLEVBQXlCQyxvQkFBekIsRUFBcUNDLG9CQUFyQyxDIiwic291cmNlUm9vdCI6Ii9ob21lL2JydW5vL2dpdF93b3Jrc3BhY2UvdGVzdGluZ19hcHBfYXBvbGxvX3NlcnZlci9zY2hlbWFzIiwic291cmNlc0NvbnRlbnQiOlsiXG4vLyBUeXBlIGRlZmluaXRpb25zIGRlZmluZSB0aGUgXCJzaGFwZVwiIG9mIHlvdXIgZGF0YSBhbmQgc3BlY2lmeVxuLy8gd2hpY2ggd2F5cyB0aGUgZGF0YSBjYW4gYmUgZmV0Y2hlZCBmcm9tIHRoZSBHcmFwaFFMIHNlcnZlci5cblxuaW1wb3J0IHsgZ3FsIH0gZnJvbSAnYXBvbGxvLXNlcnZlci1leHByZXNzJztcblxuaW1wb3J0IGxpc3RTY2hlbWEgZnJvbSAnLi9saXN0X3NjaGVtYS5qcyc7XG5pbXBvcnQgdGFza1NjaGVtYSBmcm9tICcuL3Rhc2tfc2NoZW1hLmpzJztcbmltcG9ydCB1c2VyU2NoZW1hIGZyb20gJy4vdXNlcl9zY2hlbWEnO1xuXG5jb25zdCBsaW5rU2NoZW1hID0gZ3FsYFxuICB0eXBlIFF1ZXJ5IHtcbiAgICBfOiBCb29sZWFuXG4gIH1cblxuICB0eXBlIE11dGF0aW9uIHtcbiAgICBfOiBCb29sZWFuXG4gIH1cblxuICB0eXBlIFN1YnNjcmlwdGlvbiB7XG4gICAgXzogQm9vbGVhblxuICB9XG5gO1xuXG5leHBvcnQgZGVmYXVsdCBbbGlua1NjaGVtYSwgbGlzdFNjaGVtYSwgdGFza1NjaGVtYSwgdXNlclNjaGVtYV07XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "schemas.js"
      ],
      "names": [
        "linkSchema",
        "gql",
        "listSchema",
        "taskSchema",
        "userSchema"
      ],
      "mappings": ";;;;;;;AAIA;;AAEA;;AACA;;AACA;;;;;;;;;;;;;;;;AAEA,IAAMA,UAAU,OAAGC,wBAAH,oBAAhB;eAce,CAACD,UAAD,EAAaE,oBAAb,EAAyBC,oBAAzB,EAAqCC,oBAArC,C",
      "sourceRoot": "/home/bruno/git_workspace/testing_app_apollo_server/schemas",
      "sourcesContent": [
        "\n// Type definitions define the \"shape\" of your data and specify\n// which ways the data can be fetched from the GraphQL server.\n\nimport { gql } from 'apollo-server-express';\n\nimport listSchema from './list_schema.js';\nimport taskSchema from './task_schema.js';\nimport userSchema from './user_schema';\n\nconst linkSchema = gql`\n  type Query {\n    _: Boolean\n  }\n\n  type Mutation {\n    _: Boolean\n  }\n\n  type Subscription {\n    _: Boolean\n  }\n`;\n\nexport default [linkSchema, listSchema, taskSchema, userSchema];\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1553852098295
  },
  "{\"sourceRoot\":\"/home/bruno/git_workspace/testing_app_apollo_server/schemas\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/bruno/git_workspace/testing_app_apollo_server\",\"filename\":\"/home/bruno/git_workspace/testing_app_apollo_server/schemas/list_schema.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/bruno/git_workspace/testing_app_apollo_server\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/bruno/git_workspace/testing_app_apollo_server/schemas",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/bruno/git_workspace/testing_app_apollo_server",
      "filename": "/home/bruno/git_workspace/testing_app_apollo_server/schemas/list_schema.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/bruno/git_workspace/testing_app_apollo_server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/bruno/git_workspace/testing_app_apollo_server/schemas/list_schema.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/home/bruno/git_workspace/testing_app_apollo_server/schemas/list_schema.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/bruno/git_workspace/testing_app_apollo_server/schemas",
        "sourceFileName": "list_schema.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _apolloServerExpress = require(\"apollo-server-express\");\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    # Comments in GraphQL are defined with the hash (#) symbol.\\n\\n    type List {\\n        id: ID!\\n        name: String!\\n        tasks: [Task!]\\n        userId: ID!\\n        public: Boolean!\\n    }\\n\\n    # The \\\"Query\\\" type is the root of all GraphQL queries.\\n    extend type Query {\\n        lists: [List]\\n        list(id: ID!): List\\n    }\\n\\n    extend type Mutation {\\n        addList(name: String!, public: Boolean!): List!\\n        deleteList(id: ID!): String!\\n    }\\n\\n    enum allowedListAction {\\n        CREATE\\n        DESTROY\\n    }\\n\\n    type ListResponse {\\n        list: List\\n        action: allowedListAction\\n    }\\n\\n    extend type Subscription{\\n        listSub: ListResponse\\n    }\\n\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }\n\nvar _default = (0, _apolloServerExpress.gql)(_templateObject());\n\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpc3Rfc2NoZW1hLmpzIl0sIm5hbWVzIjpbImdxbCJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOzs7Ozs7Ozs7Ozs7OzttQkFFZUEsd0IiLCJzb3VyY2VSb290IjoiL2hvbWUvYnJ1bm8vZ2l0X3dvcmtzcGFjZS90ZXN0aW5nX2FwcF9hcG9sbG9fc2VydmVyL3NjaGVtYXMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBncWwgfSBmcm9tICdhcG9sbG8tc2VydmVyLWV4cHJlc3MnXG5cbmV4cG9ydCBkZWZhdWx0IGdxbGBcbiAgICAjIENvbW1lbnRzIGluIEdyYXBoUUwgYXJlIGRlZmluZWQgd2l0aCB0aGUgaGFzaCAoIykgc3ltYm9sLlxuXG4gICAgdHlwZSBMaXN0IHtcbiAgICAgICAgaWQ6IElEIVxuICAgICAgICBuYW1lOiBTdHJpbmchXG4gICAgICAgIHRhc2tzOiBbVGFzayFdXG4gICAgICAgIHVzZXJJZDogSUQhXG4gICAgICAgIHB1YmxpYzogQm9vbGVhbiFcbiAgICB9XG5cbiAgICAjIFRoZSBcIlF1ZXJ5XCIgdHlwZSBpcyB0aGUgcm9vdCBvZiBhbGwgR3JhcGhRTCBxdWVyaWVzLlxuICAgIGV4dGVuZCB0eXBlIFF1ZXJ5IHtcbiAgICAgICAgbGlzdHM6IFtMaXN0XVxuICAgICAgICBsaXN0KGlkOiBJRCEpOiBMaXN0XG4gICAgfVxuXG4gICAgZXh0ZW5kIHR5cGUgTXV0YXRpb24ge1xuICAgICAgICBhZGRMaXN0KG5hbWU6IFN0cmluZyEsIHB1YmxpYzogQm9vbGVhbiEpOiBMaXN0IVxuICAgICAgICBkZWxldGVMaXN0KGlkOiBJRCEpOiBTdHJpbmchXG4gICAgfVxuXG4gICAgZW51bSBhbGxvd2VkTGlzdEFjdGlvbiB7XG4gICAgICAgIENSRUFURVxuICAgICAgICBERVNUUk9ZXG4gICAgfVxuXG4gICAgdHlwZSBMaXN0UmVzcG9uc2Uge1xuICAgICAgICBsaXN0OiBMaXN0XG4gICAgICAgIGFjdGlvbjogYWxsb3dlZExpc3RBY3Rpb25cbiAgICB9XG5cbiAgICBleHRlbmQgdHlwZSBTdWJzY3JpcHRpb257XG4gICAgICAgIGxpc3RTdWI6IExpc3RSZXNwb25zZVxuICAgIH1cblxuYDsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "list_schema.js"
      ],
      "names": [
        "gql"
      ],
      "mappings": ";;;;;;;AAAA;;;;;;;;;;;;;;mBAEeA,wB",
      "sourceRoot": "/home/bruno/git_workspace/testing_app_apollo_server/schemas",
      "sourcesContent": [
        "import { gql } from 'apollo-server-express'\n\nexport default gql`\n    # Comments in GraphQL are defined with the hash (#) symbol.\n\n    type List {\n        id: ID!\n        name: String!\n        tasks: [Task!]\n        userId: ID!\n        public: Boolean!\n    }\n\n    # The \"Query\" type is the root of all GraphQL queries.\n    extend type Query {\n        lists: [List]\n        list(id: ID!): List\n    }\n\n    extend type Mutation {\n        addList(name: String!, public: Boolean!): List!\n        deleteList(id: ID!): String!\n    }\n\n    enum allowedListAction {\n        CREATE\n        DESTROY\n    }\n\n    type ListResponse {\n        list: List\n        action: allowedListAction\n    }\n\n    extend type Subscription{\n        listSub: ListResponse\n    }\n\n`;"
      ]
    },
    "sourceType": "script",
    "mtime": 1553768538711
  },
  "{\"sourceRoot\":\"/home/bruno/git_workspace/testing_app_apollo_server/schemas\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/bruno/git_workspace/testing_app_apollo_server\",\"filename\":\"/home/bruno/git_workspace/testing_app_apollo_server/schemas/task_schema.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/bruno/git_workspace/testing_app_apollo_server\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/bruno/git_workspace/testing_app_apollo_server/schemas",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/bruno/git_workspace/testing_app_apollo_server",
      "filename": "/home/bruno/git_workspace/testing_app_apollo_server/schemas/task_schema.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/bruno/git_workspace/testing_app_apollo_server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/bruno/git_workspace/testing_app_apollo_server/schemas/task_schema.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/home/bruno/git_workspace/testing_app_apollo_server/schemas/task_schema.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/bruno/git_workspace/testing_app_apollo_server/schemas",
        "sourceFileName": "task_schema.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _apolloServerExpress = require(\"apollo-server-express\");\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    # Comments in GraphQL are defined with the hash (#) symbol.\\n    \\n    type Task {\\n        id: ID!\\n        list: List!\\n        text: String!\\n        done: Boolean!\\n        listId: ID!\\n        userId: ID!\\n    }\\n\\n    # The \\\"Query\\\" type is the root of all GraphQL queries.\\n    extend type Query {\\n        tasks(listId: ID!): [Task]\\n        task(id: ID!): Task\\n    }\\n\\n    extend type Mutation {\\n        addTask(listId: ID!, text: String!): Task\\n        deleteTasks(id: ID!, inPublicList: Boolean!): String\\n        #deleteMultipleTasks(id_array: [ID!]!): String\\n        markDone(id: ID!, done: Boolean!): Boolean\\n    }\\n\\n    enum allowedTaskAction {\\n        CREATE\\n        ISDONE\\n    }\\n\\n    type TaskResponse {\\n        task: Task\\n        action: allowedTaskAction\\n    }\\n\\n    type deleteResponse {\\n        id: ID!\\n        userId: ID!\\n        inPublicList: Boolean!\\n    }\\n\\n    extend type Subscription{\\n        updateSub: TaskResponse\\n        deleteSub: deleteResponse\\n    }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }\n\nvar _default = (0, _apolloServerExpress.gql)(_templateObject());\n\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRhc2tfc2NoZW1hLmpzIl0sIm5hbWVzIjpbImdxbCJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOzs7Ozs7Ozs7Ozs7OzttQkFFZUEsd0IiLCJzb3VyY2VSb290IjoiL2hvbWUvYnJ1bm8vZ2l0X3dvcmtzcGFjZS90ZXN0aW5nX2FwcF9hcG9sbG9fc2VydmVyL3NjaGVtYXMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBncWwgfSBmcm9tICdhcG9sbG8tc2VydmVyLWV4cHJlc3MnXG5cbmV4cG9ydCBkZWZhdWx0IGdxbGBcbiAgICAjIENvbW1lbnRzIGluIEdyYXBoUUwgYXJlIGRlZmluZWQgd2l0aCB0aGUgaGFzaCAoIykgc3ltYm9sLlxuICAgIFxuICAgIHR5cGUgVGFzayB7XG4gICAgICAgIGlkOiBJRCFcbiAgICAgICAgbGlzdDogTGlzdCFcbiAgICAgICAgdGV4dDogU3RyaW5nIVxuICAgICAgICBkb25lOiBCb29sZWFuIVxuICAgICAgICBsaXN0SWQ6IElEIVxuICAgICAgICB1c2VySWQ6IElEIVxuICAgIH1cblxuICAgICMgVGhlIFwiUXVlcnlcIiB0eXBlIGlzIHRoZSByb290IG9mIGFsbCBHcmFwaFFMIHF1ZXJpZXMuXG4gICAgZXh0ZW5kIHR5cGUgUXVlcnkge1xuICAgICAgICB0YXNrcyhsaXN0SWQ6IElEISk6IFtUYXNrXVxuICAgICAgICB0YXNrKGlkOiBJRCEpOiBUYXNrXG4gICAgfVxuXG4gICAgZXh0ZW5kIHR5cGUgTXV0YXRpb24ge1xuICAgICAgICBhZGRUYXNrKGxpc3RJZDogSUQhLCB0ZXh0OiBTdHJpbmchKTogVGFza1xuICAgICAgICBkZWxldGVUYXNrcyhpZDogSUQhLCBpblB1YmxpY0xpc3Q6IEJvb2xlYW4hKTogU3RyaW5nXG4gICAgICAgICNkZWxldGVNdWx0aXBsZVRhc2tzKGlkX2FycmF5OiBbSUQhXSEpOiBTdHJpbmdcbiAgICAgICAgbWFya0RvbmUoaWQ6IElEISwgZG9uZTogQm9vbGVhbiEpOiBCb29sZWFuXG4gICAgfVxuXG4gICAgZW51bSBhbGxvd2VkVGFza0FjdGlvbiB7XG4gICAgICAgIENSRUFURVxuICAgICAgICBJU0RPTkVcbiAgICB9XG5cbiAgICB0eXBlIFRhc2tSZXNwb25zZSB7XG4gICAgICAgIHRhc2s6IFRhc2tcbiAgICAgICAgYWN0aW9uOiBhbGxvd2VkVGFza0FjdGlvblxuICAgIH1cblxuICAgIHR5cGUgZGVsZXRlUmVzcG9uc2Uge1xuICAgICAgICBpZDogSUQhXG4gICAgICAgIHVzZXJJZDogSUQhXG4gICAgICAgIGluUHVibGljTGlzdDogQm9vbGVhbiFcbiAgICB9XG5cbiAgICBleHRlbmQgdHlwZSBTdWJzY3JpcHRpb257XG4gICAgICAgIHVwZGF0ZVN1YjogVGFza1Jlc3BvbnNlXG4gICAgICAgIGRlbGV0ZVN1YjogZGVsZXRlUmVzcG9uc2VcbiAgICB9XG5gOyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "task_schema.js"
      ],
      "names": [
        "gql"
      ],
      "mappings": ";;;;;;;AAAA;;;;;;;;;;;;;;mBAEeA,wB",
      "sourceRoot": "/home/bruno/git_workspace/testing_app_apollo_server/schemas",
      "sourcesContent": [
        "import { gql } from 'apollo-server-express'\n\nexport default gql`\n    # Comments in GraphQL are defined with the hash (#) symbol.\n    \n    type Task {\n        id: ID!\n        list: List!\n        text: String!\n        done: Boolean!\n        listId: ID!\n        userId: ID!\n    }\n\n    # The \"Query\" type is the root of all GraphQL queries.\n    extend type Query {\n        tasks(listId: ID!): [Task]\n        task(id: ID!): Task\n    }\n\n    extend type Mutation {\n        addTask(listId: ID!, text: String!): Task\n        deleteTasks(id: ID!, inPublicList: Boolean!): String\n        #deleteMultipleTasks(id_array: [ID!]!): String\n        markDone(id: ID!, done: Boolean!): Boolean\n    }\n\n    enum allowedTaskAction {\n        CREATE\n        ISDONE\n    }\n\n    type TaskResponse {\n        task: Task\n        action: allowedTaskAction\n    }\n\n    type deleteResponse {\n        id: ID!\n        userId: ID!\n        inPublicList: Boolean!\n    }\n\n    extend type Subscription{\n        updateSub: TaskResponse\n        deleteSub: deleteResponse\n    }\n`;"
      ]
    },
    "sourceType": "script",
    "mtime": 1553870493883
  },
  "{\"sourceRoot\":\"/home/bruno/git_workspace/testing_app_apollo_server/schemas\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/bruno/git_workspace/testing_app_apollo_server\",\"filename\":\"/home/bruno/git_workspace/testing_app_apollo_server/schemas/user_schema.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/bruno/git_workspace/testing_app_apollo_server\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/bruno/git_workspace/testing_app_apollo_server/schemas",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/bruno/git_workspace/testing_app_apollo_server",
      "filename": "/home/bruno/git_workspace/testing_app_apollo_server/schemas/user_schema.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/bruno/git_workspace/testing_app_apollo_server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/bruno/git_workspace/testing_app_apollo_server/schemas/user_schema.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/home/bruno/git_workspace/testing_app_apollo_server/schemas/user_schema.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/bruno/git_workspace/testing_app_apollo_server/schemas",
        "sourceFileName": "user_schema.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _apolloServerExpress = require(\"apollo-server-express\");\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n\\n    type User {\\n        id: ID!\\n        username: String!\\n        email: String!\\n        password: String!\\n    }\\n\\n    extend type Query{\\n        users: [User]\\n        user(id: ID!): User\\n    }\\n\\n    type Token {\\n        username: String!\\n        token: String!\\n    }\\n\\n    extend type Mutation {\\n        addUser(username: String!, email: String!, password: String!): Token!\\n        logIn(email: String!, password: String!): Token!\\n        deleteUser(id: ID!): String!\\n    }\\n\\n    type UserResponse {\\n        user: User!\\n        action: Boolean!\\n    }\\n\\n    extend type Subscription {\\n        userSub: UserResponse\\n    }\\n\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }\n\nvar _default = (0, _apolloServerExpress.gql)(_templateObject());\n\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVzZXJfc2NoZW1hLmpzIl0sIm5hbWVzIjpbImdxbCJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOzs7Ozs7Ozs7Ozs7OzttQkFFZUEsd0IiLCJzb3VyY2VSb290IjoiL2hvbWUvYnJ1bm8vZ2l0X3dvcmtzcGFjZS90ZXN0aW5nX2FwcF9hcG9sbG9fc2VydmVyL3NjaGVtYXMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBncWwgfSBmcm9tICdhcG9sbG8tc2VydmVyLWV4cHJlc3MnO1xuXG5leHBvcnQgZGVmYXVsdCBncWxgXG5cbiAgICB0eXBlIFVzZXIge1xuICAgICAgICBpZDogSUQhXG4gICAgICAgIHVzZXJuYW1lOiBTdHJpbmchXG4gICAgICAgIGVtYWlsOiBTdHJpbmchXG4gICAgICAgIHBhc3N3b3JkOiBTdHJpbmchXG4gICAgfVxuXG4gICAgZXh0ZW5kIHR5cGUgUXVlcnl7XG4gICAgICAgIHVzZXJzOiBbVXNlcl1cbiAgICAgICAgdXNlcihpZDogSUQhKTogVXNlclxuICAgIH1cblxuICAgIHR5cGUgVG9rZW4ge1xuICAgICAgICB1c2VybmFtZTogU3RyaW5nIVxuICAgICAgICB0b2tlbjogU3RyaW5nIVxuICAgIH1cblxuICAgIGV4dGVuZCB0eXBlIE11dGF0aW9uIHtcbiAgICAgICAgYWRkVXNlcih1c2VybmFtZTogU3RyaW5nISwgZW1haWw6IFN0cmluZyEsIHBhc3N3b3JkOiBTdHJpbmchKTogVG9rZW4hXG4gICAgICAgIGxvZ0luKGVtYWlsOiBTdHJpbmchLCBwYXNzd29yZDogU3RyaW5nISk6IFRva2VuIVxuICAgICAgICBkZWxldGVVc2VyKGlkOiBJRCEpOiBTdHJpbmchXG4gICAgfVxuXG4gICAgdHlwZSBVc2VyUmVzcG9uc2Uge1xuICAgICAgICB1c2VyOiBVc2VyIVxuICAgICAgICBhY3Rpb246IEJvb2xlYW4hXG4gICAgfVxuXG4gICAgZXh0ZW5kIHR5cGUgU3Vic2NyaXB0aW9uIHtcbiAgICAgICAgdXNlclN1YjogVXNlclJlc3BvbnNlXG4gICAgfVxuXG5gOyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "user_schema.js"
      ],
      "names": [
        "gql"
      ],
      "mappings": ";;;;;;;AAAA;;;;;;;;;;;;;;mBAEeA,wB",
      "sourceRoot": "/home/bruno/git_workspace/testing_app_apollo_server/schemas",
      "sourcesContent": [
        "import { gql } from 'apollo-server-express';\n\nexport default gql`\n\n    type User {\n        id: ID!\n        username: String!\n        email: String!\n        password: String!\n    }\n\n    extend type Query{\n        users: [User]\n        user(id: ID!): User\n    }\n\n    type Token {\n        username: String!\n        token: String!\n    }\n\n    extend type Mutation {\n        addUser(username: String!, email: String!, password: String!): Token!\n        logIn(email: String!, password: String!): Token!\n        deleteUser(id: ID!): String!\n    }\n\n    type UserResponse {\n        user: User!\n        action: Boolean!\n    }\n\n    extend type Subscription {\n        userSub: UserResponse\n    }\n\n`;"
      ]
    },
    "sourceType": "script",
    "mtime": 1553700055302
  },
  "{\"sourceRoot\":\"/home/bruno/git_workspace/testing_app_apollo_server/resolvers\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/bruno/git_workspace/testing_app_apollo_server\",\"filename\":\"/home/bruno/git_workspace/testing_app_apollo_server/resolvers/resolvers.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/bruno/git_workspace/testing_app_apollo_server\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/bruno/git_workspace/testing_app_apollo_server/resolvers",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/bruno/git_workspace/testing_app_apollo_server",
      "filename": "/home/bruno/git_workspace/testing_app_apollo_server/resolvers/resolvers.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/bruno/git_workspace/testing_app_apollo_server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/bruno/git_workspace/testing_app_apollo_server/resolvers/resolvers.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/home/bruno/git_workspace/testing_app_apollo_server/resolvers/resolvers.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/bruno/git_workspace/testing_app_apollo_server/resolvers",
        "sourceFileName": "resolvers.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _list_resolver = _interopRequireDefault(require(\"./list_resolver.js\"));\n\nvar _task_resolver = _interopRequireDefault(require(\"./task_resolver.js\"));\n\nvar _user_resolver = _interopRequireDefault(require(\"./user_resolver.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// Resolvers define the technique for fetching the types in the\n// schema.  We'll retrieve books from the \"books\" array above.\nvar _default = [_list_resolver.default, _task_resolver.default, _user_resolver.default];\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJlc29sdmVycy5qcyJdLCJuYW1lcyI6WyJsaXN0UmVzb2x2ZXIiLCJ0YXNrUmVzb2x2ZXIiLCJ1c2VyUmVzb2x2ZXIiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFHQTs7QUFDQTs7QUFDQTs7OztBQUxBO0FBQ0E7ZUFNZSxDQUFDQSxzQkFBRCxFQUFlQyxzQkFBZixFQUE2QkMsc0JBQTdCLEMiLCJzb3VyY2VSb290IjoiL2hvbWUvYnJ1bm8vZ2l0X3dvcmtzcGFjZS90ZXN0aW5nX2FwcF9hcG9sbG9fc2VydmVyL3Jlc29sdmVycyIsInNvdXJjZXNDb250ZW50IjpbIi8vIFJlc29sdmVycyBkZWZpbmUgdGhlIHRlY2huaXF1ZSBmb3IgZmV0Y2hpbmcgdGhlIHR5cGVzIGluIHRoZVxuLy8gc2NoZW1hLiAgV2UnbGwgcmV0cmlldmUgYm9va3MgZnJvbSB0aGUgXCJib29rc1wiIGFycmF5IGFib3ZlLlxuXG5pbXBvcnQgbGlzdFJlc29sdmVyIGZyb20gJy4vbGlzdF9yZXNvbHZlci5qcyc7XG5pbXBvcnQgdGFza1Jlc29sdmVyIGZyb20gJy4vdGFza19yZXNvbHZlci5qcyc7XG5pbXBvcnQgdXNlclJlc29sdmVyIGZyb20gJy4vdXNlcl9yZXNvbHZlci5qcyc7XG5cbmV4cG9ydCBkZWZhdWx0IFtsaXN0UmVzb2x2ZXIsIHRhc2tSZXNvbHZlciwgdXNlclJlc29sdmVyXTsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "resolvers.js"
      ],
      "names": [
        "listResolver",
        "taskResolver",
        "userResolver"
      ],
      "mappings": ";;;;;;;AAGA;;AACA;;AACA;;;;AALA;AACA;eAMe,CAACA,sBAAD,EAAeC,sBAAf,EAA6BC,sBAA7B,C",
      "sourceRoot": "/home/bruno/git_workspace/testing_app_apollo_server/resolvers",
      "sourcesContent": [
        "// Resolvers define the technique for fetching the types in the\n// schema.  We'll retrieve books from the \"books\" array above.\n\nimport listResolver from './list_resolver.js';\nimport taskResolver from './task_resolver.js';\nimport userResolver from './user_resolver.js';\n\nexport default [listResolver, taskResolver, userResolver];"
      ]
    },
    "sourceType": "script",
    "mtime": 1553700055302
  },
  "{\"sourceRoot\":\"/home/bruno/git_workspace/testing_app_apollo_server/resolvers\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/bruno/git_workspace/testing_app_apollo_server\",\"filename\":\"/home/bruno/git_workspace/testing_app_apollo_server/resolvers/list_resolver.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/bruno/git_workspace/testing_app_apollo_server\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/bruno/git_workspace/testing_app_apollo_server/resolvers",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/bruno/git_workspace/testing_app_apollo_server",
      "filename": "/home/bruno/git_workspace/testing_app_apollo_server/resolvers/list_resolver.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/bruno/git_workspace/testing_app_apollo_server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/bruno/git_workspace/testing_app_apollo_server/resolvers/list_resolver.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/home/bruno/git_workspace/testing_app_apollo_server/resolvers/list_resolver.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/bruno/git_workspace/testing_app_apollo_server/resolvers",
        "sourceFileName": "list_resolver.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _graphqlRedisSubscriptions = require(\"graphql-redis-subscriptions\");\n\nvar _ioredis = _interopRequireDefault(require(\"ioredis\"));\n\nvar _graphqlResolvers = require(\"graphql-resolvers\");\n\nvar _auth_resolver = require(\"./auth_resolver.js\");\n\nvar _sequelize = _interopRequireDefault(require(\"sequelize\"));\n\nvar _apolloServer = require(\"apollo-server\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar options = {\n  host: '127.0.0.1',\n  port: 6379\n};\nvar pubsub = new _graphqlRedisSubscriptions.RedisPubSub({\n  publisher: new _ioredis.default(options),\n  subscriber: new _ioredis.default(options)\n}); //subscription list\n\nvar SUB_LIST = 'SUB_LIST';\nvar ADD = 1;\nvar DELETE = 2;\nvar Op = _sequelize.default.Op;\nvar _default = {\n  allowedListAction: {\n    CREATE: ADD,\n    DESTROY: DELETE\n  },\n  Query: {\n    //lists: [List]  => return all lists\n    lists: function () {\n      var _lists = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee(parent, args, _ref) {\n        var models, auth, result;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                models = _ref.models, auth = _ref.auth;\n                _context.prev = 1;\n                result = [];\n\n                if (!auth) {\n                  _context.next = 9;\n                  break;\n                }\n\n                _context.next = 6;\n                return models.List.findAll({\n                  where: _defineProperty({}, Op.or, [{\n                    public: true\n                  }, {\n                    userId: auth.id\n                  }])\n                });\n\n              case 6:\n                result = _context.sent;\n                _context.next = 12;\n                break;\n\n              case 9:\n                _context.next = 11;\n                return models.List.findAll({\n                  where: {\n                    public: true\n                  }\n                });\n\n              case 11:\n                result = _context.sent;\n\n              case 12:\n                return _context.abrupt(\"return\", result);\n\n              case 15:\n                _context.prev = 15;\n                _context.t0 = _context[\"catch\"](1);\n                throw new Error(\"Error al listar todas las listas\" + _context.t0.message);\n\n              case 18:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[1, 15]]);\n      }));\n\n      function lists(_x, _x2, _x3) {\n        return _lists.apply(this, arguments);\n      }\n\n      return lists;\n    }(),\n    //list(id: ID!): List  => return the data of a specific list\n    list: function () {\n      var _list = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee2(parent, args, _ref2) {\n        var models;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                models = _ref2.models;\n                _context2.prev = 1;\n                _context2.next = 4;\n                return models.List.findOne({\n                  where: {\n                    id: args.id\n                  }\n                });\n\n              case 4:\n                return _context2.abrupt(\"return\", _context2.sent);\n\n              case 7:\n                _context2.prev = 7;\n                _context2.t0 = _context2[\"catch\"](1);\n                throw new Error(\"Error al listar una lista concreto\");\n\n              case 10:\n                ;\n\n              case 11:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, null, [[1, 7]]);\n      }));\n\n      function list(_x4, _x5, _x6) {\n        return _list.apply(this, arguments);\n      }\n\n      return list;\n    }()\n  },\n  Mutation: {\n    //addList(name: String!, public: Boolean!): List!\n    addList: (0, _graphqlResolvers.combineResolvers)(_auth_resolver.isAuthenticated,\n    /*#__PURE__*/\n    function () {\n      var _ref4 = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee3(parent, args, _ref3) {\n        var models, auth, _ref5, dataValues, rest;\n\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                models = _ref3.models, auth = _ref3.auth;\n                _context3.prev = 1;\n                _context3.next = 4;\n                return models.List.create({\n                  name: args.name,\n                  public: args.public,\n                  userId: auth.id\n                });\n\n              case 4:\n                _ref5 = _context3.sent;\n                dataValues = _ref5.dataValues;\n                rest = _objectWithoutProperties(_ref5, [\"dataValues\"]);\n                pubsub.publish(SUB_LIST, {\n                  listSub: {\n                    list: dataValues,\n                    action: ADD\n                  }\n                });\n                return _context3.abrupt(\"return\", dataValues);\n\n              case 11:\n                _context3.prev = 11;\n                _context3.t0 = _context3[\"catch\"](1);\n                throw new Error(\"Error al crear una lista\");\n\n              case 14:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, null, [[1, 11]]);\n      }));\n\n      return function (_x7, _x8, _x9) {\n        return _ref4.apply(this, arguments);\n      };\n    }()),\n    //deleteList(id: ID!): String!\n    deleteList: (0, _graphqlResolvers.combineResolvers)(_auth_resolver.isListOwner,\n    /*#__PURE__*/\n    function () {\n      var _ref7 = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee4(parent, args, _ref6) {\n        var models, auth;\n        return regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                models = _ref6.models, auth = _ref6.auth;\n                _context4.prev = 1;\n                _context4.next = 4;\n                return models.List.destroy({\n                  where: {\n                    id: args.id\n                  }\n                });\n\n              case 4:\n                pubsub.publish(SUB_LIST, {\n                  listSub: {\n                    list: {\n                      id: args.id,\n                      name: \"\",\n                      userId: auth.id,\n                      public: false\n                    },\n                    action: DELETE\n                  }\n                });\n                return _context4.abrupt(\"return\", \"The List has been destroyed successfuly\");\n\n              case 8:\n                _context4.prev = 8;\n                _context4.t0 = _context4[\"catch\"](1);\n                throw new Error(\"Error al borrar la lista\");\n\n              case 11:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, null, [[1, 8]]);\n      }));\n\n      return function (_x10, _x11, _x12) {\n        return _ref7.apply(this, arguments);\n      };\n    }())\n  },\n  Subscription: {\n    listSub: {\n      subscribe: (0, _apolloServer.withFilter)(function () {\n        return pubsub.asyncIterator([SUB_LIST]);\n      }, function (payload, args, _ref8) {\n        var auth = _ref8.auth;\n\n        if (payload.listSub.list.userId == auth.id || payload.listSub.list.public == true) {\n          return true;\n        } else {\n          return false;\n        }\n      })\n    }\n  },\n  List: {\n    tasks: function () {\n      var _tasks = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee5(parent, arg, _ref9) {\n        var models, result;\n        return regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                models = _ref9.models;\n                _context5.prev = 1;\n                _context5.next = 4;\n                return models.Task.findAll({\n                  where: {\n                    listId: parent.id\n                  }\n                });\n\n              case 4:\n                result = _context5.sent;\n                return _context5.abrupt(\"return\", result);\n\n              case 8:\n                _context5.prev = 8;\n                _context5.t0 = _context5[\"catch\"](1);\n                throw new Error(\"No se han podido cargar las tareas de la lista\");\n\n              case 11:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, null, [[1, 8]]);\n      }));\n\n      function tasks(_x13, _x14, _x15) {\n        return _tasks.apply(this, arguments);\n      }\n\n      return tasks;\n    }()\n  }\n};\n/*\nexport default {    \n    Query: {\n        todo: async () => {\n            //return new Promise((resolve, reject) => {\n            //client.query('SELECT * FROM task').then((result) => resolve(result.rows))\n            //})\n    \n            const result = await client.query('select * from task');\n            console.log(result)\n            return result.rows\n        },\n    },\n    \n    Mutation: {\n        addTask: async (parent, arg) => {\n            console.log(arg)\n            const result = await client.query(`update task set tasks = array_cat(tasks, '{${arg.task}}') where id=${arg.id}`)\n            console.log(result)\n            //return result\n            return \"cachi\"\n        },\n    },\n    \n    Todo: {\n        tareas: (todo) => {\n            console.log(todo.tasks)\n            return todo.tasks\n        }\n    },\n    \n};*/\n\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpc3RfcmVzb2x2ZXIuanMiXSwibmFtZXMiOlsib3B0aW9ucyIsImhvc3QiLCJwb3J0IiwicHVic3ViIiwiUmVkaXNQdWJTdWIiLCJwdWJsaXNoZXIiLCJSZWRpcyIsInN1YnNjcmliZXIiLCJTVUJfTElTVCIsIkFERCIsIkRFTEVURSIsIk9wIiwiU2VxdWVsaXplIiwiYWxsb3dlZExpc3RBY3Rpb24iLCJDUkVBVEUiLCJERVNUUk9ZIiwiUXVlcnkiLCJsaXN0cyIsInBhcmVudCIsImFyZ3MiLCJtb2RlbHMiLCJhdXRoIiwicmVzdWx0IiwiTGlzdCIsImZpbmRBbGwiLCJ3aGVyZSIsIm9yIiwicHVibGljIiwidXNlcklkIiwiaWQiLCJFcnJvciIsIm1lc3NhZ2UiLCJsaXN0IiwiZmluZE9uZSIsIk11dGF0aW9uIiwiYWRkTGlzdCIsImlzQXV0aGVudGljYXRlZCIsImNyZWF0ZSIsIm5hbWUiLCJkYXRhVmFsdWVzIiwicmVzdCIsInB1Ymxpc2giLCJsaXN0U3ViIiwiYWN0aW9uIiwiZGVsZXRlTGlzdCIsImlzTGlzdE93bmVyIiwiZGVzdHJveSIsIlN1YnNjcmlwdGlvbiIsInN1YnNjcmliZSIsImFzeW5jSXRlcmF0b3IiLCJwYXlsb2FkIiwidGFza3MiLCJhcmciLCJUYXNrIiwibGlzdElkIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBQ0E7O0FBRUE7O0FBQ0E7O0FBa0JBOztBQUNBOzs7Ozs7Ozs7Ozs7OztBQWpCQSxJQUFNQSxPQUFPLEdBQUc7QUFDWkMsRUFBQUEsSUFBSSxFQUFFLFdBRE07QUFFWkMsRUFBQUEsSUFBSSxFQUFFO0FBRk0sQ0FBaEI7QUFLQSxJQUFNQyxNQUFNLEdBQUcsSUFBSUMsc0NBQUosQ0FBZ0I7QUFDM0JDLEVBQUFBLFNBQVMsRUFBRSxJQUFJQyxnQkFBSixDQUFVTixPQUFWLENBRGdCO0FBRTNCTyxFQUFBQSxVQUFVLEVBQUUsSUFBSUQsZ0JBQUosQ0FBVU4sT0FBVjtBQUZlLENBQWhCLENBQWYsQyxDQUtBOztBQUNBLElBQU1RLFFBQVEsR0FBRyxVQUFqQjtBQUVBLElBQU1DLEdBQUcsR0FBRyxDQUFaO0FBQ0EsSUFBTUMsTUFBTSxHQUFHLENBQWY7QUFJQSxJQUFNQyxFQUFFLEdBQUdDLG1CQUFVRCxFQUFyQjtlQUVjO0FBQ1ZFLEVBQUFBLGlCQUFpQixFQUFFO0FBQ2ZDLElBQUFBLE1BQU0sRUFBRUwsR0FETztBQUVmTSxJQUFBQSxPQUFPLEVBQUVMO0FBRk0sR0FEVDtBQU1WTSxFQUFBQSxLQUFLLEVBQUU7QUFDSDtBQUNBQyxJQUFBQSxLQUFLO0FBQUE7QUFBQTtBQUFBLDhCQUFFLGlCQUFPQyxNQUFQLEVBQWVDLElBQWY7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQXVCQyxnQkFBQUEsTUFBdkIsUUFBdUJBLE1BQXZCLEVBQStCQyxJQUEvQixRQUErQkEsSUFBL0I7QUFBQTtBQUVLQyxnQkFBQUEsTUFGTCxHQUVjLEVBRmQ7O0FBQUEscUJBR0lELElBSEo7QUFBQTtBQUFBO0FBQUE7O0FBQUE7QUFBQSx1QkFJb0JELE1BQU0sQ0FBQ0csSUFBUCxDQUFZQyxPQUFaLENBQW9CO0FBQy9CQyxrQkFBQUEsS0FBSyxzQkFDQWQsRUFBRSxDQUFDZSxFQURILEVBQ1EsQ0FBQztBQUFDQyxvQkFBQUEsTUFBTSxFQUFFO0FBQVQsbUJBQUQsRUFBaUI7QUFBQ0Msb0JBQUFBLE1BQU0sRUFBRVAsSUFBSSxDQUFDUTtBQUFkLG1CQUFqQixDQURSO0FBRDBCLGlCQUFwQixDQUpwQjs7QUFBQTtBQUlLUCxnQkFBQUEsTUFKTDtBQUFBO0FBQUE7O0FBQUE7QUFBQTtBQUFBLHVCQVdxQkYsTUFBTSxDQUFDRyxJQUFQLENBQVlDLE9BQVosQ0FBb0I7QUFDL0JDLGtCQUFBQSxLQUFLLEVBQUU7QUFDSEUsb0JBQUFBLE1BQU0sRUFBRTtBQURMO0FBRHdCLGlCQUFwQixDQVhyQjs7QUFBQTtBQVdNTCxnQkFBQUEsTUFYTjs7QUFBQTtBQUFBLGlEQWlCUUEsTUFqQlI7O0FBQUE7QUFBQTtBQUFBO0FBQUEsc0JBb0JPLElBQUlRLEtBQUosQ0FBVSxxQ0FBcUMsWUFBSUMsT0FBbkQsQ0FwQlA7O0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsT0FBRjs7QUFBQTtBQUFBO0FBQUE7O0FBQUE7QUFBQSxPQUZGO0FBMkJIO0FBQ0FDLElBQUFBLElBQUk7QUFBQTtBQUFBO0FBQUEsOEJBQUUsa0JBQU9kLE1BQVAsRUFBZUMsSUFBZjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBdUJDLGdCQUFBQSxNQUF2QixTQUF1QkEsTUFBdkI7QUFBQTtBQUFBO0FBQUEsdUJBRWVBLE1BQU0sQ0FBQ0csSUFBUCxDQUFZVSxPQUFaLENBQW9CO0FBQzdCUixrQkFBQUEsS0FBSyxFQUFFO0FBQ0hJLG9CQUFBQSxFQUFFLEVBQUVWLElBQUksQ0FBQ1U7QUFETjtBQURzQixpQkFBcEIsQ0FGZjs7QUFBQTtBQUFBOztBQUFBO0FBQUE7QUFBQTtBQUFBLHNCQVNRLElBQUlDLEtBQUosQ0FBVSxvQ0FBVixDQVRSOztBQUFBO0FBV0Y7O0FBWEU7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsT0FBRjs7QUFBQTtBQUFBO0FBQUE7O0FBQUE7QUFBQTtBQTVCRCxHQU5HO0FBaURWSSxFQUFBQSxRQUFRLEVBQUU7QUFDTjtBQUNBQyxJQUFBQSxPQUFPLEVBQUUsd0NBQ0xDLDhCQURLO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSw4QkFFTCxrQkFBT2xCLE1BQVAsRUFBZUMsSUFBZjtBQUFBOztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQXVCQyxnQkFBQUEsTUFBdkIsU0FBdUJBLE1BQXZCLEVBQStCQyxJQUEvQixTQUErQkEsSUFBL0I7QUFBQTtBQUFBO0FBQUEsdUJBRTBDRCxNQUFNLENBQUNHLElBQVAsQ0FBWWMsTUFBWixDQUFtQjtBQUNqREMsa0JBQUFBLElBQUksRUFBRW5CLElBQUksQ0FBQ21CLElBRHNDO0FBRWpEWCxrQkFBQUEsTUFBTSxFQUFFUixJQUFJLENBQUNRLE1BRm9DO0FBR2pEQyxrQkFBQUEsTUFBTSxFQUFFUCxJQUFJLENBQUNRO0FBSG9DLGlCQUFuQixDQUYxQzs7QUFBQTtBQUFBO0FBRWFVLGdCQUFBQSxVQUZiLFNBRWFBLFVBRmI7QUFFNEJDLGdCQUFBQSxJQUY1QjtBQVFRckMsZ0JBQUFBLE1BQU0sQ0FBQ3NDLE9BQVAsQ0FBZWpDLFFBQWYsRUFBeUI7QUFBRWtDLGtCQUFBQSxPQUFPLEVBQUU7QUFBQ1Ysb0JBQUFBLElBQUksRUFBRU8sVUFBUDtBQUFtQkksb0JBQUFBLE1BQU0sRUFBRWxDO0FBQTNCO0FBQVgsaUJBQXpCO0FBUlIsa0RBU2U4QixVQVRmOztBQUFBO0FBQUE7QUFBQTtBQUFBLHNCQVljLElBQUlULEtBQUosQ0FBVSwwQkFBVixDQVpkOztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLE9BRks7O0FBQUE7QUFBQTtBQUFBO0FBQUEsUUFGSDtBQXFCTjtBQUNBYyxJQUFBQSxVQUFVLEVBQUUsd0NBQ1JDLDBCQURRO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSw4QkFFUixrQkFBTzNCLE1BQVAsRUFBZUMsSUFBZjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBdUJDLGdCQUFBQSxNQUF2QixTQUF1QkEsTUFBdkIsRUFBK0JDLElBQS9CLFNBQStCQSxJQUEvQjtBQUFBO0FBQUE7QUFBQSx1QkFHY0QsTUFBTSxDQUFDRyxJQUFQLENBQVl1QixPQUFaLENBQW9CO0FBQ3RCckIsa0JBQUFBLEtBQUssRUFBRTtBQUNISSxvQkFBQUEsRUFBRSxFQUFFVixJQUFJLENBQUNVO0FBRE47QUFEZSxpQkFBcEIsQ0FIZDs7QUFBQTtBQVVRMUIsZ0JBQUFBLE1BQU0sQ0FBQ3NDLE9BQVAsQ0FBZWpDLFFBQWYsRUFBeUI7QUFBRWtDLGtCQUFBQSxPQUFPLEVBQUU7QUFBQ1Ysb0JBQUFBLElBQUksRUFBRTtBQUFDSCxzQkFBQUEsRUFBRSxFQUFFVixJQUFJLENBQUNVLEVBQVY7QUFBY1Msc0JBQUFBLElBQUksRUFBRSxFQUFwQjtBQUF3QlYsc0JBQUFBLE1BQU0sRUFBRVAsSUFBSSxDQUFDUSxFQUFyQztBQUF5Q0Ysc0JBQUFBLE1BQU0sRUFBRTtBQUFqRCxxQkFBUDtBQUFpRWdCLG9CQUFBQSxNQUFNLEVBQUVqQztBQUF6RTtBQUFYLGlCQUF6QjtBQVZSLGtEQVllLHlDQVpmOztBQUFBO0FBQUE7QUFBQTtBQUFBLHNCQWVjLElBQUlvQixLQUFKLENBQVUsMEJBQVYsQ0FmZDs7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxPQUZROztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBdEJOLEdBakRBO0FBZ0dWaUIsRUFBQUEsWUFBWSxFQUFFO0FBQ1ZMLElBQUFBLE9BQU8sRUFBRTtBQUNMTSxNQUFBQSxTQUFTLEVBQUUsOEJBQ1AsWUFBTTtBQUNGLGVBQU83QyxNQUFNLENBQUM4QyxhQUFQLENBQXFCLENBQUN6QyxRQUFELENBQXJCLENBQVA7QUFDSCxPQUhNLEVBS1AsVUFBQzBDLE9BQUQsRUFBVS9CLElBQVYsU0FBNkI7QUFBQSxZQUFYRSxJQUFXLFNBQVhBLElBQVc7O0FBQ3pCLFlBQUk2QixPQUFPLENBQUNSLE9BQVIsQ0FBZ0JWLElBQWhCLENBQXFCSixNQUFyQixJQUErQlAsSUFBSSxDQUFDUSxFQUFyQyxJQUE2Q3FCLE9BQU8sQ0FBQ1IsT0FBUixDQUFnQlYsSUFBaEIsQ0FBcUJMLE1BQXJCLElBQStCLElBQS9FLEVBQXFGO0FBQ2pGLGlCQUFPLElBQVA7QUFDSCxTQUZELE1BR0k7QUFDQSxpQkFBTyxLQUFQO0FBQ0g7QUFFSixPQWJNO0FBRE47QUFEQyxHQWhHSjtBQW9IVkosRUFBQUEsSUFBSSxFQUFFO0FBQ0Y0QixJQUFBQSxLQUFLO0FBQUE7QUFBQTtBQUFBLDhCQUFFLGtCQUFPakMsTUFBUCxFQUFla0MsR0FBZjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBcUJoQyxnQkFBQUEsTUFBckIsU0FBcUJBLE1BQXJCO0FBQUE7QUFBQTtBQUFBLHVCQUVvQkEsTUFBTSxDQUFDaUMsSUFBUCxDQUFZN0IsT0FBWixDQUFvQjtBQUNuQ0Msa0JBQUFBLEtBQUssRUFBRTtBQUNINkIsb0JBQUFBLE1BQU0sRUFBRXBDLE1BQU0sQ0FBQ1c7QUFEWjtBQUQ0QixpQkFBcEIsQ0FGcEI7O0FBQUE7QUFFS1AsZ0JBQUFBLE1BRkw7QUFBQSxrREFPUUEsTUFQUjs7QUFBQTtBQUFBO0FBQUE7QUFBQSxzQkFVTyxJQUFJUSxLQUFKLENBQVUsZ0RBQVYsQ0FWUDs7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxPQUFGOztBQUFBO0FBQUE7QUFBQTs7QUFBQTtBQUFBO0FBREg7QUFwSEksQztBQTJJZCIsInNvdXJjZVJvb3QiOiIvaG9tZS9icnVuby9naXRfd29ya3NwYWNlL3Rlc3RpbmdfYXBwX2Fwb2xsb19zZXJ2ZXIvcmVzb2x2ZXJzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUmVkaXNQdWJTdWIgfSBmcm9tICdncmFwaHFsLXJlZGlzLXN1YnNjcmlwdGlvbnMnO1xuaW1wb3J0IFJlZGlzIGZyb20gJ2lvcmVkaXMnO1xuXG5pbXBvcnQgeyBjb21iaW5lUmVzb2x2ZXJzIH0gZnJvbSAnZ3JhcGhxbC1yZXNvbHZlcnMnO1xuaW1wb3J0IHsgaXNMaXN0T3duZXIsIGlzQXV0aGVudGljYXRlZCB9IGZyb20gJy4vYXV0aF9yZXNvbHZlci5qcyc7XG5cbmNvbnN0IG9wdGlvbnMgPSB7XG4gICAgaG9zdDogJzEyNy4wLjAuMScsXG4gICAgcG9ydDogNjM3OVxufVxuXG5jb25zdCBwdWJzdWIgPSBuZXcgUmVkaXNQdWJTdWIoe1xuICAgIHB1Ymxpc2hlcjogbmV3IFJlZGlzKG9wdGlvbnMpLFxuICAgIHN1YnNjcmliZXI6IG5ldyBSZWRpcyhvcHRpb25zKVxufSk7XG5cbi8vc3Vic2NyaXB0aW9uIGxpc3RcbmNvbnN0IFNVQl9MSVNUID0gJ1NVQl9MSVNUJztcblxuY29uc3QgQUREID0gMTtcbmNvbnN0IERFTEVURSA9IDI7XG5cbmltcG9ydCBTZXF1ZWxpemUgZnJvbSAnc2VxdWVsaXplJztcbmltcG9ydCB7IHdpdGhGaWx0ZXIgfSBmcm9tICdhcG9sbG8tc2VydmVyJztcbmNvbnN0IE9wID0gU2VxdWVsaXplLk9wO1xuXG5leHBvcnQgZGVmYXVsdHtcbiAgICBhbGxvd2VkTGlzdEFjdGlvbjoge1xuICAgICAgICBDUkVBVEU6IEFERCxcbiAgICAgICAgREVTVFJPWTogREVMRVRFLFxuICAgIH0sXG5cbiAgICBRdWVyeToge1xuICAgICAgICAvL2xpc3RzOiBbTGlzdF0gID0+IHJldHVybiBhbGwgbGlzdHNcbiAgICAgICAgbGlzdHM6IGFzeW5jIChwYXJlbnQsIGFyZ3MsIHsgbW9kZWxzLCBhdXRoIH0pID0+IHtcbiAgICAgICAgICAgIHRyeXtcbiAgICAgICAgICAgICAgICBsZXQgcmVzdWx0ID0gW107XG4gICAgICAgICAgICAgICAgaWYoYXV0aCl7XG4gICAgICAgICAgICAgICAgICAgIHJlc3VsdCA9IGF3YWl0IG1vZGVscy5MaXN0LmZpbmRBbGwoe1xuICAgICAgICAgICAgICAgICAgICAgICAgd2hlcmU6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBbT3Aub3JdOiBbe3B1YmxpYzogdHJ1ZX0sIHt1c2VySWQ6IGF1dGguaWR9XSxcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2V7XG4gICAgICAgICAgICAgICAgICAgICByZXN1bHQgPSBhd2FpdCBtb2RlbHMuTGlzdC5maW5kQWxsKHtcbiAgICAgICAgICAgICAgICAgICAgICAgICB3aGVyZToge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwdWJsaWM6IHRydWUsXG4gICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHJldHVybiByZXN1bHRcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNhdGNoKGVycil7XG4gICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiRXJyb3IgYWwgbGlzdGFyIHRvZGFzIGxhcyBsaXN0YXNcIiArIGVyci5tZXNzYWdlKVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgXG4gICAgICAgIH0sXG5cbiAgICAgICAgLy9saXN0KGlkOiBJRCEpOiBMaXN0ICA9PiByZXR1cm4gdGhlIGRhdGEgb2YgYSBzcGVjaWZpYyBsaXN0XG4gICAgICAgIGxpc3Q6IGFzeW5jIChwYXJlbnQsIGFyZ3MsIHsgbW9kZWxzIH0pID0+IHtcbiAgICAgICAgICAgIHRyeXtcbiAgICAgICAgICAgICAgICByZXR1cm4gYXdhaXQgbW9kZWxzLkxpc3QuZmluZE9uZSh7XG4gICAgICAgICAgICAgICAgICAgIHdoZXJlOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZDogYXJncy5pZCxcbiAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNhdGNoKGVycil7XG4gICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiRXJyb3IgYWwgbGlzdGFyIHVuYSBsaXN0YSBjb25jcmV0b1wiKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIDtcbiAgICAgICAgfSxcbiAgICB9LFxuXG4gICAgTXV0YXRpb246IHtcbiAgICAgICAgLy9hZGRMaXN0KG5hbWU6IFN0cmluZyEsIHB1YmxpYzogQm9vbGVhbiEpOiBMaXN0IVxuICAgICAgICBhZGRMaXN0OiBjb21iaW5lUmVzb2x2ZXJzKFxuICAgICAgICAgICAgaXNBdXRoZW50aWNhdGVkLFxuICAgICAgICAgICAgYXN5bmMgKHBhcmVudCwgYXJncywgeyBtb2RlbHMsIGF1dGggfSkgPT4ge1xuICAgICAgICAgICAgICAgIHRyeXtcbiAgICAgICAgICAgICAgICAgICAgbGV0IHtkYXRhVmFsdWVzLCAuLi5yZXN0fSA9IGF3YWl0IG1vZGVscy5MaXN0LmNyZWF0ZSh7XG4gICAgICAgICAgICAgICAgICAgICAgICBuYW1lOiBhcmdzLm5hbWUsXG4gICAgICAgICAgICAgICAgICAgICAgICBwdWJsaWM6IGFyZ3MucHVibGljLFxuICAgICAgICAgICAgICAgICAgICAgICAgdXNlcklkOiBhdXRoLmlkLFxuICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgIHB1YnN1Yi5wdWJsaXNoKFNVQl9MSVNULCB7IGxpc3RTdWI6IHtsaXN0OiBkYXRhVmFsdWVzLCBhY3Rpb246IEFERH19KVxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gZGF0YVZhbHVlc1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBjYXRjaChlcnIpe1xuICAgICAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJFcnJvciBhbCBjcmVhciB1bmEgbGlzdGFcIik7XG4gICAgICAgICAgICAgICAgfSAgICAgICAgICAgIFxuICAgICAgICAgICAgfSxcbiAgICAgICAgKSxcblxuICAgICAgICAvL2RlbGV0ZUxpc3QoaWQ6IElEISk6IFN0cmluZyFcbiAgICAgICAgZGVsZXRlTGlzdDogY29tYmluZVJlc29sdmVycyhcbiAgICAgICAgICAgIGlzTGlzdE93bmVyLFxuICAgICAgICAgICAgYXN5bmMgKHBhcmVudCwgYXJncywgeyBtb2RlbHMsIGF1dGggfSkgPT4ge1xuICAgICAgICAgICAgICAgIHRyeXtcbiAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgIGF3YWl0IG1vZGVscy5MaXN0LmRlc3Ryb3koe1xuICAgICAgICAgICAgICAgICAgICAgICAgd2hlcmU6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZDogYXJncy5pZCxcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICBcblxuICAgICAgICAgICAgICAgICAgICBwdWJzdWIucHVibGlzaChTVUJfTElTVCwgeyBsaXN0U3ViOiB7bGlzdDoge2lkOiBhcmdzLmlkLCBuYW1lOiBcIlwiLCB1c2VySWQ6IGF1dGguaWQsIHB1YmxpYzogZmFsc2UgfSwgYWN0aW9uOiBERUxFVEV9fSk7XG5cbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIFwiVGhlIExpc3QgaGFzIGJlZW4gZGVzdHJveWVkIHN1Y2Nlc3NmdWx5XCI7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGNhdGNoKGVycil7XG4gICAgICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcIkVycm9yIGFsIGJvcnJhciBsYSBsaXN0YVwiKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICB9LFxuICAgICAgICApXG4gICAgICAgIFxuICAgIH0sXG5cbiAgICBTdWJzY3JpcHRpb246IHtcbiAgICAgICAgbGlzdFN1Yjoge1xuICAgICAgICAgICAgc3Vic2NyaWJlOiB3aXRoRmlsdGVyKFxuICAgICAgICAgICAgICAgICgpID0+IHsgXG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBwdWJzdWIuYXN5bmNJdGVyYXRvcihbU1VCX0xJU1RdKTsgXG4gICAgICAgICAgICAgICAgfSxcblxuICAgICAgICAgICAgICAgIChwYXlsb2FkLCBhcmdzLCB7IGF1dGggfSkgPT4ge1xuICAgICAgICAgICAgICAgICAgICBpZigocGF5bG9hZC5saXN0U3ViLmxpc3QudXNlcklkID09IGF1dGguaWQpIHx8IChwYXlsb2FkLmxpc3RTdWIubGlzdC5wdWJsaWMgPT0gdHJ1ZSkpe1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRydWVcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBlbHNle1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlXG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgKVxuICAgICAgICB9XG4gICAgfSxcblxuICAgIExpc3Q6IHtcbiAgICAgICAgdGFza3M6IGFzeW5jIChwYXJlbnQsIGFyZywge21vZGVsc30pID0+IHtcbiAgICAgICAgICAgIHRyeXtcbiAgICAgICAgICAgICAgICBsZXQgcmVzdWx0ID0gYXdhaXQgbW9kZWxzLlRhc2suZmluZEFsbCh7XG4gICAgICAgICAgICAgICAgICAgIHdoZXJlOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICBsaXN0SWQ6IHBhcmVudC5pZCxcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAgICAgcmV0dXJuIHJlc3VsdFxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY2F0Y2goZXJyKXtcbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJObyBzZSBoYW4gcG9kaWRvIGNhcmdhciBsYXMgdGFyZWFzIGRlIGxhIGxpc3RhXCIpXG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBcbiAgICAgICAgfVxuICAgIH1cbn07XG5cblxuXG5cblxuXG4vKlxuZXhwb3J0IGRlZmF1bHQgeyAgICBcbiAgICBRdWVyeToge1xuICAgICAgICB0b2RvOiBhc3luYyAoKSA9PiB7XG4gICAgICAgICAgICAvL3JldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XG4gICAgICAgICAgICAvL2NsaWVudC5xdWVyeSgnU0VMRUNUICogRlJPTSB0YXNrJykudGhlbigocmVzdWx0KSA9PiByZXNvbHZlKHJlc3VsdC5yb3dzKSlcbiAgICAgICAgICAgIC8vfSlcbiAgICBcbiAgICAgICAgICAgIGNvbnN0IHJlc3VsdCA9IGF3YWl0IGNsaWVudC5xdWVyeSgnc2VsZWN0ICogZnJvbSB0YXNrJyk7XG4gICAgICAgICAgICBjb25zb2xlLmxvZyhyZXN1bHQpXG4gICAgICAgICAgICByZXR1cm4gcmVzdWx0LnJvd3NcbiAgICAgICAgfSxcbiAgICB9LFxuICAgIFxuICAgIE11dGF0aW9uOiB7XG4gICAgICAgIGFkZFRhc2s6IGFzeW5jIChwYXJlbnQsIGFyZykgPT4ge1xuICAgICAgICAgICAgY29uc29sZS5sb2coYXJnKVxuICAgICAgICAgICAgY29uc3QgcmVzdWx0ID0gYXdhaXQgY2xpZW50LnF1ZXJ5KGB1cGRhdGUgdGFzayBzZXQgdGFza3MgPSBhcnJheV9jYXQodGFza3MsICd7JHthcmcudGFza319Jykgd2hlcmUgaWQ9JHthcmcuaWR9YClcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKHJlc3VsdClcbiAgICAgICAgICAgIC8vcmV0dXJuIHJlc3VsdFxuICAgICAgICAgICAgcmV0dXJuIFwiY2FjaGlcIlxuICAgICAgICB9LFxuICAgIH0sXG4gICAgXG4gICAgVG9kbzoge1xuICAgICAgICB0YXJlYXM6ICh0b2RvKSA9PiB7XG4gICAgICAgICAgICBjb25zb2xlLmxvZyh0b2RvLnRhc2tzKVxuICAgICAgICAgICAgcmV0dXJuIHRvZG8udGFza3NcbiAgICAgICAgfVxuICAgIH0sXG4gICAgXG59OyovIl19",
    "map": {
      "version": 3,
      "sources": [
        "list_resolver.js"
      ],
      "names": [
        "options",
        "host",
        "port",
        "pubsub",
        "RedisPubSub",
        "publisher",
        "Redis",
        "subscriber",
        "SUB_LIST",
        "ADD",
        "DELETE",
        "Op",
        "Sequelize",
        "allowedListAction",
        "CREATE",
        "DESTROY",
        "Query",
        "lists",
        "parent",
        "args",
        "models",
        "auth",
        "result",
        "List",
        "findAll",
        "where",
        "or",
        "public",
        "userId",
        "id",
        "Error",
        "message",
        "list",
        "findOne",
        "Mutation",
        "addList",
        "isAuthenticated",
        "create",
        "name",
        "dataValues",
        "rest",
        "publish",
        "listSub",
        "action",
        "deleteList",
        "isListOwner",
        "destroy",
        "Subscription",
        "subscribe",
        "asyncIterator",
        "payload",
        "tasks",
        "arg",
        "Task",
        "listId"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AAEA;;AACA;;AAkBA;;AACA;;;;;;;;;;;;;;AAjBA,IAAMA,OAAO,GAAG;AACZC,EAAAA,IAAI,EAAE,WADM;AAEZC,EAAAA,IAAI,EAAE;AAFM,CAAhB;AAKA,IAAMC,MAAM,GAAG,IAAIC,sCAAJ,CAAgB;AAC3BC,EAAAA,SAAS,EAAE,IAAIC,gBAAJ,CAAUN,OAAV,CADgB;AAE3BO,EAAAA,UAAU,EAAE,IAAID,gBAAJ,CAAUN,OAAV;AAFe,CAAhB,CAAf,C,CAKA;;AACA,IAAMQ,QAAQ,GAAG,UAAjB;AAEA,IAAMC,GAAG,GAAG,CAAZ;AACA,IAAMC,MAAM,GAAG,CAAf;AAIA,IAAMC,EAAE,GAAGC,mBAAUD,EAArB;eAEc;AACVE,EAAAA,iBAAiB,EAAE;AACfC,IAAAA,MAAM,EAAEL,GADO;AAEfM,IAAAA,OAAO,EAAEL;AAFM,GADT;AAMVM,EAAAA,KAAK,EAAE;AACH;AACAC,IAAAA,KAAK;AAAA;AAAA;AAAA,8BAAE,iBAAOC,MAAP,EAAeC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuBC,gBAAAA,MAAvB,QAAuBA,MAAvB,EAA+BC,IAA/B,QAA+BA,IAA/B;AAAA;AAEKC,gBAAAA,MAFL,GAEc,EAFd;;AAAA,qBAGID,IAHJ;AAAA;AAAA;AAAA;;AAAA;AAAA,uBAIoBD,MAAM,CAACG,IAAP,CAAYC,OAAZ,CAAoB;AAC/BC,kBAAAA,KAAK,sBACAd,EAAE,CAACe,EADH,EACQ,CAAC;AAACC,oBAAAA,MAAM,EAAE;AAAT,mBAAD,EAAiB;AAACC,oBAAAA,MAAM,EAAEP,IAAI,CAACQ;AAAd,mBAAjB,CADR;AAD0B,iBAApB,CAJpB;;AAAA;AAIKP,gBAAAA,MAJL;AAAA;AAAA;;AAAA;AAAA;AAAA,uBAWqBF,MAAM,CAACG,IAAP,CAAYC,OAAZ,CAAoB;AAC/BC,kBAAAA,KAAK,EAAE;AACHE,oBAAAA,MAAM,EAAE;AADL;AADwB,iBAApB,CAXrB;;AAAA;AAWML,gBAAAA,MAXN;;AAAA;AAAA,iDAiBQA,MAjBR;;AAAA;AAAA;AAAA;AAAA,sBAoBO,IAAIQ,KAAJ,CAAU,qCAAqC,YAAIC,OAAnD,CApBP;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA,OAFF;AA2BH;AACAC,IAAAA,IAAI;AAAA;AAAA;AAAA,8BAAE,kBAAOd,MAAP,EAAeC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuBC,gBAAAA,MAAvB,SAAuBA,MAAvB;AAAA;AAAA;AAAA,uBAEeA,MAAM,CAACG,IAAP,CAAYU,OAAZ,CAAoB;AAC7BR,kBAAAA,KAAK,EAAE;AACHI,oBAAAA,EAAE,EAAEV,IAAI,CAACU;AADN;AADsB,iBAApB,CAFf;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA,sBASQ,IAAIC,KAAJ,CAAU,oCAAV,CATR;;AAAA;AAWF;;AAXE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA;AA5BD,GANG;AAiDVI,EAAAA,QAAQ,EAAE;AACN;AACAC,IAAAA,OAAO,EAAE,wCACLC,8BADK;AAAA;AAAA;AAAA;AAAA;AAAA,8BAEL,kBAAOlB,MAAP,EAAeC,IAAf;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAuBC,gBAAAA,MAAvB,SAAuBA,MAAvB,EAA+BC,IAA/B,SAA+BA,IAA/B;AAAA;AAAA;AAAA,uBAE0CD,MAAM,CAACG,IAAP,CAAYc,MAAZ,CAAmB;AACjDC,kBAAAA,IAAI,EAAEnB,IAAI,CAACmB,IADsC;AAEjDX,kBAAAA,MAAM,EAAER,IAAI,CAACQ,MAFoC;AAGjDC,kBAAAA,MAAM,EAAEP,IAAI,CAACQ;AAHoC,iBAAnB,CAF1C;;AAAA;AAAA;AAEaU,gBAAAA,UAFb,SAEaA,UAFb;AAE4BC,gBAAAA,IAF5B;AAQQrC,gBAAAA,MAAM,CAACsC,OAAP,CAAejC,QAAf,EAAyB;AAAEkC,kBAAAA,OAAO,EAAE;AAACV,oBAAAA,IAAI,EAAEO,UAAP;AAAmBI,oBAAAA,MAAM,EAAElC;AAA3B;AAAX,iBAAzB;AARR,kDASe8B,UATf;;AAAA;AAAA;AAAA;AAAA,sBAYc,IAAIT,KAAJ,CAAU,0BAAV,CAZd;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAFK;;AAAA;AAAA;AAAA;AAAA,QAFH;AAqBN;AACAc,IAAAA,UAAU,EAAE,wCACRC,0BADQ;AAAA;AAAA;AAAA;AAAA;AAAA,8BAER,kBAAO3B,MAAP,EAAeC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuBC,gBAAAA,MAAvB,SAAuBA,MAAvB,EAA+BC,IAA/B,SAA+BA,IAA/B;AAAA;AAAA;AAAA,uBAGcD,MAAM,CAACG,IAAP,CAAYuB,OAAZ,CAAoB;AACtBrB,kBAAAA,KAAK,EAAE;AACHI,oBAAAA,EAAE,EAAEV,IAAI,CAACU;AADN;AADe,iBAApB,CAHd;;AAAA;AAUQ1B,gBAAAA,MAAM,CAACsC,OAAP,CAAejC,QAAf,EAAyB;AAAEkC,kBAAAA,OAAO,EAAE;AAACV,oBAAAA,IAAI,EAAE;AAACH,sBAAAA,EAAE,EAAEV,IAAI,CAACU,EAAV;AAAcS,sBAAAA,IAAI,EAAE,EAApB;AAAwBV,sBAAAA,MAAM,EAAEP,IAAI,CAACQ,EAArC;AAAyCF,sBAAAA,MAAM,EAAE;AAAjD,qBAAP;AAAiEgB,oBAAAA,MAAM,EAAEjC;AAAzE;AAAX,iBAAzB;AAVR,kDAYe,yCAZf;;AAAA;AAAA;AAAA;AAAA,sBAec,IAAIoB,KAAJ,CAAU,0BAAV,CAfd;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAFQ;;AAAA;AAAA;AAAA;AAAA;AAtBN,GAjDA;AAgGViB,EAAAA,YAAY,EAAE;AACVL,IAAAA,OAAO,EAAE;AACLM,MAAAA,SAAS,EAAE,8BACP,YAAM;AACF,eAAO7C,MAAM,CAAC8C,aAAP,CAAqB,CAACzC,QAAD,CAArB,CAAP;AACH,OAHM,EAKP,UAAC0C,OAAD,EAAU/B,IAAV,SAA6B;AAAA,YAAXE,IAAW,SAAXA,IAAW;;AACzB,YAAI6B,OAAO,CAACR,OAAR,CAAgBV,IAAhB,CAAqBJ,MAArB,IAA+BP,IAAI,CAACQ,EAArC,IAA6CqB,OAAO,CAACR,OAAR,CAAgBV,IAAhB,CAAqBL,MAArB,IAA+B,IAA/E,EAAqF;AACjF,iBAAO,IAAP;AACH,SAFD,MAGI;AACA,iBAAO,KAAP;AACH;AAEJ,OAbM;AADN;AADC,GAhGJ;AAoHVJ,EAAAA,IAAI,EAAE;AACF4B,IAAAA,KAAK;AAAA;AAAA;AAAA,8BAAE,kBAAOjC,MAAP,EAAekC,GAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAqBhC,gBAAAA,MAArB,SAAqBA,MAArB;AAAA;AAAA;AAAA,uBAEoBA,MAAM,CAACiC,IAAP,CAAY7B,OAAZ,CAAoB;AACnCC,kBAAAA,KAAK,EAAE;AACH6B,oBAAAA,MAAM,EAAEpC,MAAM,CAACW;AADZ;AAD4B,iBAApB,CAFpB;;AAAA;AAEKP,gBAAAA,MAFL;AAAA,kDAOQA,MAPR;;AAAA;AAAA;AAAA;AAAA,sBAUO,IAAIQ,KAAJ,CAAU,gDAAV,CAVP;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA;AADH;AApHI,C;AA2Id",
      "sourceRoot": "/home/bruno/git_workspace/testing_app_apollo_server/resolvers",
      "sourcesContent": [
        "import { RedisPubSub } from 'graphql-redis-subscriptions';\nimport Redis from 'ioredis';\n\nimport { combineResolvers } from 'graphql-resolvers';\nimport { isListOwner, isAuthenticated } from './auth_resolver.js';\n\nconst options = {\n    host: '127.0.0.1',\n    port: 6379\n}\n\nconst pubsub = new RedisPubSub({\n    publisher: new Redis(options),\n    subscriber: new Redis(options)\n});\n\n//subscription list\nconst SUB_LIST = 'SUB_LIST';\n\nconst ADD = 1;\nconst DELETE = 2;\n\nimport Sequelize from 'sequelize';\nimport { withFilter } from 'apollo-server';\nconst Op = Sequelize.Op;\n\nexport default{\n    allowedListAction: {\n        CREATE: ADD,\n        DESTROY: DELETE,\n    },\n\n    Query: {\n        //lists: [List]  => return all lists\n        lists: async (parent, args, { models, auth }) => {\n            try{\n                let result = [];\n                if(auth){\n                    result = await models.List.findAll({\n                        where: {\n                            [Op.or]: [{public: true}, {userId: auth.id}],\n                        }\n                    });\n                }\n                else{\n                     result = await models.List.findAll({\n                         where: {\n                             public: true,\n                         }\n                     });\n                }\n                return result\n            }\n            catch(err){\n                throw new Error(\"Error al listar todas las listas\" + err.message)\n            }\n            \n        },\n\n        //list(id: ID!): List  => return the data of a specific list\n        list: async (parent, args, { models }) => {\n            try{\n                return await models.List.findOne({\n                    where: {\n                        id: args.id,\n                    },\n                });\n            }\n            catch(err){\n                throw new Error(\"Error al listar una lista concreto\");\n            }\n            ;\n        },\n    },\n\n    Mutation: {\n        //addList(name: String!, public: Boolean!): List!\n        addList: combineResolvers(\n            isAuthenticated,\n            async (parent, args, { models, auth }) => {\n                try{\n                    let {dataValues, ...rest} = await models.List.create({\n                        name: args.name,\n                        public: args.public,\n                        userId: auth.id,\n                    });\n                    \n                    pubsub.publish(SUB_LIST, { listSub: {list: dataValues, action: ADD}})\n                    return dataValues\n                }\n                catch(err){\n                    throw new Error(\"Error al crear una lista\");\n                }            \n            },\n        ),\n\n        //deleteList(id: ID!): String!\n        deleteList: combineResolvers(\n            isListOwner,\n            async (parent, args, { models, auth }) => {\n                try{\n                    \n                    await models.List.destroy({\n                        where: {\n                            id: args.id,\n                        },\n                    });\n                    \n\n                    pubsub.publish(SUB_LIST, { listSub: {list: {id: args.id, name: \"\", userId: auth.id, public: false }, action: DELETE}});\n\n                    return \"The List has been destroyed successfuly\";\n                }\n                catch(err){\n                    throw new Error(\"Error al borrar la lista\");\n                }\n                \n            },\n        )\n        \n    },\n\n    Subscription: {\n        listSub: {\n            subscribe: withFilter(\n                () => { \n                    return pubsub.asyncIterator([SUB_LIST]); \n                },\n\n                (payload, args, { auth }) => {\n                    if((payload.listSub.list.userId == auth.id) || (payload.listSub.list.public == true)){\n                        return true\n                    }\n                    else{\n                        return false\n                    }\n                    \n                }\n            )\n        }\n    },\n\n    List: {\n        tasks: async (parent, arg, {models}) => {\n            try{\n                let result = await models.Task.findAll({\n                    where: {\n                        listId: parent.id,\n                    }\n                })\n                return result\n            }\n            catch(err){\n                throw new Error(\"No se han podido cargar las tareas de la lista\")\n            }\n            \n        }\n    }\n};\n\n\n\n\n\n\n/*\nexport default {    \n    Query: {\n        todo: async () => {\n            //return new Promise((resolve, reject) => {\n            //client.query('SELECT * FROM task').then((result) => resolve(result.rows))\n            //})\n    \n            const result = await client.query('select * from task');\n            console.log(result)\n            return result.rows\n        },\n    },\n    \n    Mutation: {\n        addTask: async (parent, arg) => {\n            console.log(arg)\n            const result = await client.query(`update task set tasks = array_cat(tasks, '{${arg.task}}') where id=${arg.id}`)\n            console.log(result)\n            //return result\n            return \"cachi\"\n        },\n    },\n    \n    Todo: {\n        tareas: (todo) => {\n            console.log(todo.tasks)\n            return todo.tasks\n        }\n    },\n    \n};*/"
      ]
    },
    "sourceType": "script",
    "mtime": 1553870493883
  },
  "{\"sourceRoot\":\"/home/bruno/git_workspace/testing_app_apollo_server/resolvers\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/bruno/git_workspace/testing_app_apollo_server\",\"filename\":\"/home/bruno/git_workspace/testing_app_apollo_server/resolvers/auth_resolver.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/bruno/git_workspace/testing_app_apollo_server\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/bruno/git_workspace/testing_app_apollo_server/resolvers",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/bruno/git_workspace/testing_app_apollo_server",
      "filename": "/home/bruno/git_workspace/testing_app_apollo_server/resolvers/auth_resolver.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/bruno/git_workspace/testing_app_apollo_server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/bruno/git_workspace/testing_app_apollo_server/resolvers/auth_resolver.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/home/bruno/git_workspace/testing_app_apollo_server/resolvers/auth_resolver.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/bruno/git_workspace/testing_app_apollo_server/resolvers",
        "sourceFileName": "auth_resolver.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.permitedTaskDelete = exports.isListOwner = exports.isAuthenticated = void 0;\n\nvar _apolloServer = require(\"apollo-server\");\n\nvar _graphqlResolvers = require(\"graphql-resolvers\");\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar isAuthenticated = function isAuthenticated(parent, args, _ref) {\n  var auth = _ref.auth;\n\n  if (auth) {\n    _graphqlResolvers.skip;\n  } else {\n    throw new _apolloServer.ForbiddenError('Usuario no identificado');\n  }\n};\n\nexports.isAuthenticated = isAuthenticated;\n\nvar isListOwner =\n/*#__PURE__*/\nfunction () {\n  var _ref3 = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee(parent, args, _ref2) {\n    var models, auth, result;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            models = _ref2.models, auth = _ref2.auth;\n\n            if (!auth) {\n              _context.next = 12;\n              break;\n            }\n\n            _context.next = 4;\n            return models.List.findOne({\n              where: {\n                id: args.id\n              }\n            });\n\n          case 4:\n            result = _context.sent;\n\n            if (!(result.userId == auth.id)) {\n              _context.next = 9;\n              break;\n            }\n\n            _graphqlResolvers.skip;\n            _context.next = 10;\n            break;\n\n          case 9:\n            throw new _apolloServer.ForbiddenError('Usuario no valido, no es usted el dueño de la lista');\n\n          case 10:\n            _context.next = 13;\n            break;\n\n          case 12:\n            throw new _apolloServer.ForbiddenError('Usuario no identificado');\n\n          case 13:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function isListOwner(_x, _x2, _x3) {\n    return _ref3.apply(this, arguments);\n  };\n}();\n\nexports.isListOwner = isListOwner;\n\nvar permitedTaskDelete =\n/*#__PURE__*/\nfunction () {\n  var _ref5 = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee2(parent, args, _ref4) {\n    var models, auth, result;\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            models = _ref4.models, auth = _ref4.auth;\n\n            if (!args.inPublicList) {\n              _context2.next = 5;\n              break;\n            }\n\n            _graphqlResolvers.skip;\n            _context2.next = 17;\n            break;\n\n          case 5:\n            if (!auth) {\n              _context2.next = 16;\n              break;\n            }\n\n            _context2.next = 8;\n            return models.Task.findOne({\n              where: {\n                id: args.id\n              }\n            });\n\n          case 8:\n            result = _context2.sent;\n\n            if (!(result.userId == auth.id)) {\n              _context2.next = 13;\n              break;\n            }\n\n            _graphqlResolvers.skip;\n            _context2.next = 14;\n            break;\n\n          case 13:\n            throw new _apolloServer.ForbiddenError('Usuario no valido, no es usted el dueño de la lista');\n\n          case 14:\n            _context2.next = 17;\n            break;\n\n          case 16:\n            throw new _apolloServer.ForbiddenError('Usuario no identificado');\n\n          case 17:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function permitedTaskDelete(_x4, _x5, _x6) {\n    return _ref5.apply(this, arguments);\n  };\n}();\n\nexports.permitedTaskDelete = permitedTaskDelete;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImF1dGhfcmVzb2x2ZXIuanMiXSwibmFtZXMiOlsiaXNBdXRoZW50aWNhdGVkIiwicGFyZW50IiwiYXJncyIsImF1dGgiLCJza2lwIiwiRm9yYmlkZGVuRXJyb3IiLCJpc0xpc3RPd25lciIsIm1vZGVscyIsIkxpc3QiLCJmaW5kT25lIiwid2hlcmUiLCJpZCIsInJlc3VsdCIsInVzZXJJZCIsInBlcm1pdGVkVGFza0RlbGV0ZSIsImluUHVibGljTGlzdCIsIlRhc2siXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7QUFDQTs7Ozs7O0FBRU8sSUFBTUEsZUFBZSxHQUFHLFNBQWxCQSxlQUFrQixDQUFDQyxNQUFELEVBQVNDLElBQVQsUUFBMEI7QUFBQSxNQUFWQyxJQUFVLFFBQVZBLElBQVU7O0FBQ3JELE1BQUdBLElBQUgsRUFBUTtBQUNKQztBQUNILEdBRkQsTUFHSTtBQUNBLFVBQU0sSUFBSUMsNEJBQUosQ0FBbUIseUJBQW5CLENBQU47QUFDSDtBQUNKLENBUE07Ozs7QUFTQSxJQUFNQyxXQUFXO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSwwQkFBRyxpQkFBT0wsTUFBUCxFQUFlQyxJQUFmO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFzQkssWUFBQUEsTUFBdEIsU0FBc0JBLE1BQXRCLEVBQThCSixJQUE5QixTQUE4QkEsSUFBOUI7O0FBQUEsaUJBQ3BCQSxJQURvQjtBQUFBO0FBQUE7QUFBQTs7QUFBQTtBQUFBLG1CQUVFSSxNQUFNLENBQUNDLElBQVAsQ0FBWUMsT0FBWixDQUFvQjtBQUNyQ0MsY0FBQUEsS0FBSyxFQUFDO0FBQ0ZDLGdCQUFBQSxFQUFFLEVBQUVULElBQUksQ0FBQ1M7QUFEUDtBQUQrQixhQUFwQixDQUZGOztBQUFBO0FBRWJDLFlBQUFBLE1BRmE7O0FBQUEsa0JBUWhCQSxNQUFNLENBQUNDLE1BQVAsSUFBaUJWLElBQUksQ0FBQ1EsRUFSTjtBQUFBO0FBQUE7QUFBQTs7QUFTZlA7QUFUZTtBQUFBOztBQUFBO0FBQUEsa0JBWVQsSUFBSUMsNEJBQUosQ0FBbUIscURBQW5CLENBWlM7O0FBQUE7QUFBQTtBQUFBOztBQUFBO0FBQUEsa0JBZ0JiLElBQUlBLDRCQUFKLENBQW1CLHlCQUFuQixDQWhCYTs7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxHQUFIOztBQUFBLGtCQUFYQyxXQUFXO0FBQUE7QUFBQTtBQUFBLEdBQWpCOzs7O0FBc0JBLElBQU1RLGtCQUFrQjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsMEJBQUcsa0JBQU9iLE1BQVAsRUFBZUMsSUFBZjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBc0JLLFlBQUFBLE1BQXRCLFNBQXNCQSxNQUF0QixFQUE4QkosSUFBOUIsU0FBOEJBLElBQTlCOztBQUFBLGlCQUMzQkQsSUFBSSxDQUFDYSxZQURzQjtBQUFBO0FBQUE7QUFBQTs7QUFFMUJYO0FBRjBCO0FBQUE7O0FBQUE7QUFBQSxpQkFLdkJELElBTHVCO0FBQUE7QUFBQTtBQUFBOztBQUFBO0FBQUEsbUJBTURJLE1BQU0sQ0FBQ1MsSUFBUCxDQUFZUCxPQUFaLENBQW9CO0FBQ3JDQyxjQUFBQSxLQUFLLEVBQUM7QUFDRkMsZ0JBQUFBLEVBQUUsRUFBRVQsSUFBSSxDQUFDUztBQURQO0FBRCtCLGFBQXBCLENBTkM7O0FBQUE7QUFNaEJDLFlBQUFBLE1BTmdCOztBQUFBLGtCQVluQkEsTUFBTSxDQUFDQyxNQUFQLElBQWlCVixJQUFJLENBQUNRLEVBWkg7QUFBQTtBQUFBO0FBQUE7O0FBYWxCUDtBQWJrQjtBQUFBOztBQUFBO0FBQUEsa0JBZ0JaLElBQUlDLDRCQUFKLENBQW1CLHFEQUFuQixDQWhCWTs7QUFBQTtBQUFBO0FBQUE7O0FBQUE7QUFBQSxrQkFvQmhCLElBQUlBLDRCQUFKLENBQW1CLHlCQUFuQixDQXBCZ0I7O0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsR0FBSDs7QUFBQSxrQkFBbEJTLGtCQUFrQjtBQUFBO0FBQUE7QUFBQSxHQUF4QiIsInNvdXJjZVJvb3QiOiIvaG9tZS9icnVuby9naXRfd29ya3NwYWNlL3Rlc3RpbmdfYXBwX2Fwb2xsb19zZXJ2ZXIvcmVzb2x2ZXJzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRm9yYmlkZGVuRXJyb3IgfSBmcm9tICdhcG9sbG8tc2VydmVyJztcbmltcG9ydCB7IHNraXAgfSBmcm9tICdncmFwaHFsLXJlc29sdmVycyc7XG5cbmV4cG9ydCBjb25zdCBpc0F1dGhlbnRpY2F0ZWQgPSAocGFyZW50LCBhcmdzLCB7YXV0aH0pID0+IHtcbiAgICBpZihhdXRoKXtcbiAgICAgICAgc2tpcFxuICAgIH1cbiAgICBlbHNle1xuICAgICAgICB0aHJvdyBuZXcgRm9yYmlkZGVuRXJyb3IoJ1VzdWFyaW8gbm8gaWRlbnRpZmljYWRvJylcbiAgICB9XG59O1xuXG5leHBvcnQgY29uc3QgaXNMaXN0T3duZXIgPSBhc3luYyAocGFyZW50LCBhcmdzLCB7bW9kZWxzLCBhdXRofSkgPT4ge1xuICAgIGlmKGF1dGgpe1xuICAgICAgICBjb25zdCByZXN1bHQgPSBhd2FpdCBtb2RlbHMuTGlzdC5maW5kT25lKHtcbiAgICAgICAgICAgIHdoZXJlOntcbiAgICAgICAgICAgICAgICBpZDogYXJncy5pZCxcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgXG4gICAgICAgIGlmKHJlc3VsdC51c2VySWQgPT0gYXV0aC5pZCl7XG4gICAgICAgICAgICBza2lwXG4gICAgICAgIH1cbiAgICAgICAgZWxzZXtcbiAgICAgICAgICAgIHRocm93IG5ldyBGb3JiaWRkZW5FcnJvcignVXN1YXJpbyBubyB2YWxpZG8sIG5vIGVzIHVzdGVkIGVsIGR1ZcOxbyBkZSBsYSBsaXN0YScpXG4gICAgICAgIH1cbiAgICB9XG4gICAgZWxzZXtcbiAgICAgICAgdGhyb3cgbmV3IEZvcmJpZGRlbkVycm9yKCdVc3VhcmlvIG5vIGlkZW50aWZpY2FkbycpXG4gICAgfVxuICAgIFxufVxuXG5cbmV4cG9ydCBjb25zdCBwZXJtaXRlZFRhc2tEZWxldGUgPSBhc3luYyAocGFyZW50LCBhcmdzLCB7bW9kZWxzLCBhdXRofSkgPT4ge1xuICAgIGlmKGFyZ3MuaW5QdWJsaWNMaXN0KXtcbiAgICAgICAgc2tpcFxuICAgIH1cbiAgICBlbHNle1xuICAgICAgICBpZihhdXRoKXtcbiAgICAgICAgICAgIGNvbnN0IHJlc3VsdCA9IGF3YWl0IG1vZGVscy5UYXNrLmZpbmRPbmUoe1xuICAgICAgICAgICAgICAgIHdoZXJlOntcbiAgICAgICAgICAgICAgICAgICAgaWQ6IGFyZ3MuaWQsXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG4gICAgICAgIFxuICAgICAgICAgICAgaWYocmVzdWx0LnVzZXJJZCA9PSBhdXRoLmlkKXtcbiAgICAgICAgICAgICAgICBza2lwXG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNle1xuICAgICAgICAgICAgICAgIHRocm93IG5ldyBGb3JiaWRkZW5FcnJvcignVXN1YXJpbyBubyB2YWxpZG8sIG5vIGVzIHVzdGVkIGVsIGR1ZcOxbyBkZSBsYSBsaXN0YScpXG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgZWxzZXtcbiAgICAgICAgICAgIHRocm93IG5ldyBGb3JiaWRkZW5FcnJvcignVXN1YXJpbyBubyBpZGVudGlmaWNhZG8nKVxuICAgICAgICB9XG4gICAgfVxuICAgIFxuICAgIFxufVxuXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "auth_resolver.js"
      ],
      "names": [
        "isAuthenticated",
        "parent",
        "args",
        "auth",
        "skip",
        "ForbiddenError",
        "isListOwner",
        "models",
        "List",
        "findOne",
        "where",
        "id",
        "result",
        "userId",
        "permitedTaskDelete",
        "inPublicList",
        "Task"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;;;;;AAEO,IAAMA,eAAe,GAAG,SAAlBA,eAAkB,CAACC,MAAD,EAASC,IAAT,QAA0B;AAAA,MAAVC,IAAU,QAAVA,IAAU;;AACrD,MAAGA,IAAH,EAAQ;AACJC;AACH,GAFD,MAGI;AACA,UAAM,IAAIC,4BAAJ,CAAmB,yBAAnB,CAAN;AACH;AACJ,CAPM;;;;AASA,IAAMC,WAAW;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAG,iBAAOL,MAAP,EAAeC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAsBK,YAAAA,MAAtB,SAAsBA,MAAtB,EAA8BJ,IAA9B,SAA8BA,IAA9B;;AAAA,iBACpBA,IADoB;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAEEI,MAAM,CAACC,IAAP,CAAYC,OAAZ,CAAoB;AACrCC,cAAAA,KAAK,EAAC;AACFC,gBAAAA,EAAE,EAAET,IAAI,CAACS;AADP;AAD+B,aAApB,CAFF;;AAAA;AAEbC,YAAAA,MAFa;;AAAA,kBAQhBA,MAAM,CAACC,MAAP,IAAiBV,IAAI,CAACQ,EARN;AAAA;AAAA;AAAA;;AASfP;AATe;AAAA;;AAAA;AAAA,kBAYT,IAAIC,4BAAJ,CAAmB,qDAAnB,CAZS;;AAAA;AAAA;AAAA;;AAAA;AAAA,kBAgBb,IAAIA,4BAAJ,CAAmB,yBAAnB,CAhBa;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAXC,WAAW;AAAA;AAAA;AAAA,GAAjB;;;;AAsBA,IAAMQ,kBAAkB;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAG,kBAAOb,MAAP,EAAeC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAsBK,YAAAA,MAAtB,SAAsBA,MAAtB,EAA8BJ,IAA9B,SAA8BA,IAA9B;;AAAA,iBAC3BD,IAAI,CAACa,YADsB;AAAA;AAAA;AAAA;;AAE1BX;AAF0B;AAAA;;AAAA;AAAA,iBAKvBD,IALuB;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAMDI,MAAM,CAACS,IAAP,CAAYP,OAAZ,CAAoB;AACrCC,cAAAA,KAAK,EAAC;AACFC,gBAAAA,EAAE,EAAET,IAAI,CAACS;AADP;AAD+B,aAApB,CANC;;AAAA;AAMhBC,YAAAA,MANgB;;AAAA,kBAYnBA,MAAM,CAACC,MAAP,IAAiBV,IAAI,CAACQ,EAZH;AAAA;AAAA;AAAA;;AAalBP;AAbkB;AAAA;;AAAA;AAAA,kBAgBZ,IAAIC,4BAAJ,CAAmB,qDAAnB,CAhBY;;AAAA;AAAA;AAAA;;AAAA;AAAA,kBAoBhB,IAAIA,4BAAJ,CAAmB,yBAAnB,CApBgB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAlBS,kBAAkB;AAAA;AAAA;AAAA,GAAxB",
      "sourceRoot": "/home/bruno/git_workspace/testing_app_apollo_server/resolvers",
      "sourcesContent": [
        "import { ForbiddenError } from 'apollo-server';\nimport { skip } from 'graphql-resolvers';\n\nexport const isAuthenticated = (parent, args, {auth}) => {\n    if(auth){\n        skip\n    }\n    else{\n        throw new ForbiddenError('Usuario no identificado')\n    }\n};\n\nexport const isListOwner = async (parent, args, {models, auth}) => {\n    if(auth){\n        const result = await models.List.findOne({\n            where:{\n                id: args.id,\n            }\n        });\n    \n        if(result.userId == auth.id){\n            skip\n        }\n        else{\n            throw new ForbiddenError('Usuario no valido, no es usted el dueño de la lista')\n        }\n    }\n    else{\n        throw new ForbiddenError('Usuario no identificado')\n    }\n    \n}\n\n\nexport const permitedTaskDelete = async (parent, args, {models, auth}) => {\n    if(args.inPublicList){\n        skip\n    }\n    else{\n        if(auth){\n            const result = await models.Task.findOne({\n                where:{\n                    id: args.id,\n                }\n            });\n        \n            if(result.userId == auth.id){\n                skip\n            }\n            else{\n                throw new ForbiddenError('Usuario no valido, no es usted el dueño de la lista')\n            }\n        }\n        else{\n            throw new ForbiddenError('Usuario no identificado')\n        }\n    }\n    \n    \n}\n\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1553870493883
  },
  "{\"sourceRoot\":\"/home/bruno/git_workspace/testing_app_apollo_server/resolvers\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/bruno/git_workspace/testing_app_apollo_server\",\"filename\":\"/home/bruno/git_workspace/testing_app_apollo_server/resolvers/task_resolver.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/bruno/git_workspace/testing_app_apollo_server\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/bruno/git_workspace/testing_app_apollo_server/resolvers",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/bruno/git_workspace/testing_app_apollo_server",
      "filename": "/home/bruno/git_workspace/testing_app_apollo_server/resolvers/task_resolver.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/bruno/git_workspace/testing_app_apollo_server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/bruno/git_workspace/testing_app_apollo_server/resolvers/task_resolver.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/home/bruno/git_workspace/testing_app_apollo_server/resolvers/task_resolver.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/bruno/git_workspace/testing_app_apollo_server/resolvers",
        "sourceFileName": "task_resolver.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _graphqlRedisSubscriptions = require(\"graphql-redis-subscriptions\");\n\nvar _ioredis = _interopRequireDefault(require(\"ioredis\"));\n\nvar _graphqlResolvers = require(\"graphql-resolvers\");\n\nvar _auth_resolver = require(\"./auth_resolver.js\");\n\nvar _apolloServer = require(\"apollo-server\");\n\nvar _models = require(\"../models/models.js\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar options = {\n  host: '127.0.0.1',\n  port: 6379\n};\nvar pubsub = new _graphqlRedisSubscriptions.RedisPubSub({\n  publisher: new _ioredis.default(options),\n  subscriber: new _ioredis.default(options)\n});\n//subscription task\nvar SUB_UPDATE_TASK = 'SUB_UPDATE_TASK';\nvar SUB_DELETE_TASK = 'SUB_DELETE_TASK';\nvar ADD = 1;\nvar DELETE = 2;\nvar UPDATE = 3;\nvar _default = {\n  allowedTaskAction: {\n    CREATE: ADD,\n    ISDONE: UPDATE\n  },\n  Query: {\n    //tasks(listId: ID!): [Task]\n    tasks: function () {\n      var _tasks = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee(parent, args, _ref) {\n        var models;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                models = _ref.models;\n                _context.prev = 1;\n                _context.next = 4;\n                return models.Task.findAll({\n                  where: {\n                    listId: args.listId\n                  }\n                });\n\n              case 4:\n                return _context.abrupt(\"return\", _context.sent);\n\n              case 7:\n                _context.prev = 7;\n                _context.t0 = _context[\"catch\"](1);\n                console.log(_context.t0.errors[0].type);\n                throw new Error('Error al buscar todas las tareas');\n\n              case 11:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[1, 7]]);\n      }));\n\n      function tasks(_x, _x2, _x3) {\n        return _tasks.apply(this, arguments);\n      }\n\n      return tasks;\n    }(),\n    //task(id: ID!): Task\n    task: function () {\n      var _task = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee2(parent, args, _ref2) {\n        var models;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                models = _ref2.models;\n                _context2.prev = 1;\n                _context2.next = 4;\n                return models.Task.findOne({\n                  where: {\n                    id: args.id\n                  }\n                });\n\n              case 4:\n                return _context2.abrupt(\"return\", _context2.sent);\n\n              case 7:\n                _context2.prev = 7;\n                _context2.t0 = _context2[\"catch\"](1);\n                console.log(_context2.t0.errors[0].type);\n                throw new Error('Error al buscar una tarea');\n\n              case 11:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, null, [[1, 7]]);\n      }));\n\n      function task(_x4, _x5, _x6) {\n        return _task.apply(this, arguments);\n      }\n\n      return task;\n    }()\n  },\n  Mutation: {\n    //addTask(listId: ID!, text: String!): Task\n    addTask: (0, _graphqlResolvers.combineResolvers)(_auth_resolver.isAuthenticated,\n    /*#__PURE__*/\n    function () {\n      var _ref4 = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee3(parent, args, _ref3) {\n        var models, auth, result, datavalues;\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                models = _ref3.models, auth = _ref3.auth;\n                _context3.prev = 1;\n                _context3.next = 4;\n                return models.Task.create({\n                  listId: args.listId,\n                  text: args.text,\n                  userId: auth.id\n                });\n\n              case 4:\n                result = _context3.sent;\n                //publicamos la nueva tarea\n                datavalues = result.dataValues;\n                pubsub.publish(SUB_UPDATE_TASK, {\n                  updateSub: {\n                    task: datavalues,\n                    action: ADD\n                  }\n                });\n                return _context3.abrupt(\"return\", result.dataValues);\n\n              case 10:\n                _context3.prev = 10;\n                _context3.t0 = _context3[\"catch\"](1);\n                console.log(_context3.t0.errors[0].type);\n                throw new Error('Error al añadir una tarea. ' + _context3.t0.errors[0].message);\n\n              case 14:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, null, [[1, 10]]);\n      }));\n\n      return function (_x7, _x8, _x9) {\n        return _ref4.apply(this, arguments);\n      };\n    }()),\n    //deleteTask(id: ID!, inPublicList: Boolean!): String\n    deleteTasks: (0, _graphqlResolvers.combineResolvers)(_auth_resolver.permitedTaskDelete,\n    /*#__PURE__*/\n    function () {\n      var _ref6 = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee4(parent, args, _ref5) {\n        var models, result, number_of_destroy;\n        return regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                models = _ref5.models;\n                _context4.prev = 1;\n                _context4.next = 4;\n                return models.Task.findOne({\n                  where: {\n                    id: args.id\n                  }\n                });\n\n              case 4:\n                result = _context4.sent;\n                _context4.next = 7;\n                return models.Task.destroy({\n                  where: {\n                    id: args.id\n                  }\n                });\n\n              case 7:\n                number_of_destroy = _context4.sent;\n                //publicamos la tarea borrada\n                console.log(\"vamos a la publicacion\");\n                pubsub.publish(SUB_DELETE_TASK, {\n                  deleteSub: {\n                    id: args.id,\n                    userId: result.userId,\n                    inPublicList: args.inPublicList\n                  }\n                });\n                console.log(\"pasó la publicacion\");\n                return _context4.abrupt(\"return\", number_of_destroy);\n\n              case 14:\n                _context4.prev = 14;\n                _context4.t0 = _context4[\"catch\"](1);\n                console.log(_context4.t0.errors[0].type);\n                throw new Error(_context4.t0.errors[0].message);\n\n              case 18:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, null, [[1, 14]]);\n      }));\n\n      return function (_x10, _x11, _x12) {\n        return _ref6.apply(this, arguments);\n      };\n    }()),\n    //deleteMultipleTasks(id_array: [ID!]!): String\n\n    /*deleteMultipleTasks: async (parent, args, {models}) => {\n        try{\n            await models.Task.destroy({\n                where:{\n                    id: args.id_array,\n                }\n            });\n             pubsub.publish(SUB_TASK, {taskSub: { task: null , action: DELETE}});\n            return \"Se han borrado todas las tareas perfectamente\"\n        }\n        catch(err){\n            throw new Error(\"Error al borrar multiples tareas\");\n        }\n    },*/\n    //markDone(id: ID!, done: Boolean!): Boolean\n    markDone: (0, _graphqlResolvers.combineResolvers)(_auth_resolver.isAuthenticated,\n    /*#__PURE__*/\n    function () {\n      var _ref8 = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee5(parent, args, _ref7) {\n        var models, result, modified_task;\n        return regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                models = _ref7.models;\n                _context5.prev = 1;\n                _context5.next = 4;\n                return models.Task.update({\n                  done: args.done\n                }, {\n                  where: {\n                    id: args.id\n                  }\n                });\n\n              case 4:\n                result = _context5.sent;\n                _context5.next = 7;\n                return models.Task.findOne({\n                  where: {\n                    id: args.id\n                  }\n                });\n\n              case 7:\n                modified_task = _context5.sent;\n                //publicamos la tarea modificada\n                pubsub.publish(SUB_UPDATE_TASK, {\n                  updateSub: {\n                    task: modified_task,\n                    action: UPDATE\n                  }\n                });\n\n                if (!(result == 0)) {\n                  _context5.next = 13;\n                  break;\n                }\n\n                return _context5.abrupt(\"return\", false);\n\n              case 13:\n                return _context5.abrupt(\"return\", true);\n\n              case 14:\n                _context5.next = 20;\n                break;\n\n              case 16:\n                _context5.prev = 16;\n                _context5.t0 = _context5[\"catch\"](1);\n                console.log(err.errors[0].type);\n                throw new Error(err.errors[0].message);\n\n              case 20:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, null, [[1, 16]]);\n      }));\n\n      return function (_x13, _x14, _x15) {\n        return _ref8.apply(this, arguments);\n      };\n    }())\n  },\n  Subscription: {\n    updateSub: {\n      subscribe: function subscribe() {\n        return pubsub.asyncIterator([SUB_UPDATE_TASK]);\n      }\n    },\n    deleteSub: {\n      subscribe: (0, _apolloServer.withFilter)(function () {\n        return pubsub.asyncIterator([SUB_DELETE_TASK]);\n      }, function (payload, args, _ref9) {\n        var models = _ref9.models,\n            auth = _ref9.auth;\n\n        if (payload.deleteSub.inPublicList == true) {\n          return true;\n        } else {\n          if (payload.deleteSub.userId == auth.id) {\n            return true;\n          } else {\n            return false;\n          }\n        }\n      })\n    }\n  },\n  Task: {\n    list: function () {\n      var _list = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee6(parent, args, _ref10) {\n        var models, result;\n        return regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                models = _ref10.models;\n                _context6.prev = 1;\n                _context6.next = 4;\n                return models.List.findOne({\n                  where: {\n                    id: parent.listId\n                  }\n                });\n\n              case 4:\n                result = _context6.sent;\n                return _context6.abrupt(\"return\", result);\n\n              case 8:\n                _context6.prev = 8;\n                _context6.t0 = _context6[\"catch\"](1);\n                console.log(_context6.t0.errors[0].type);\n                throw new Error(_context6.t0.errors[0].message);\n\n              case 12:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, null, [[1, 8]]);\n      }));\n\n      function list(_x16, _x17, _x18) {\n        return _list.apply(this, arguments);\n      }\n\n      return list;\n    }()\n  }\n};\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "task_resolver.js"
      ],
      "names": [
        "options",
        "host",
        "port",
        "pubsub",
        "RedisPubSub",
        "publisher",
        "Redis",
        "subscriber",
        "SUB_UPDATE_TASK",
        "SUB_DELETE_TASK",
        "ADD",
        "DELETE",
        "UPDATE",
        "allowedTaskAction",
        "CREATE",
        "ISDONE",
        "Query",
        "tasks",
        "parent",
        "args",
        "models",
        "Task",
        "findAll",
        "where",
        "listId",
        "console",
        "log",
        "errors",
        "type",
        "Error",
        "task",
        "findOne",
        "id",
        "Mutation",
        "addTask",
        "isAuthenticated",
        "auth",
        "create",
        "text",
        "userId",
        "result",
        "datavalues",
        "dataValues",
        "publish",
        "updateSub",
        "action",
        "message",
        "deleteTasks",
        "permitedTaskDelete",
        "destroy",
        "number_of_destroy",
        "deleteSub",
        "inPublicList",
        "markDone",
        "update",
        "done",
        "modified_task",
        "err",
        "Subscription",
        "subscribe",
        "asyncIterator",
        "payload",
        "list",
        "List"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AAEA;;AACA;;AAYA;;AACA;;;;;;;;AAXA,IAAMA,OAAO,GAAG;AACZC,EAAAA,IAAI,EAAE,WADM;AAEZC,EAAAA,IAAI,EAAE;AAFM,CAAhB;AAKA,IAAMC,MAAM,GAAG,IAAIC,sCAAJ,CAAgB;AAC3BC,EAAAA,SAAS,EAAE,IAAIC,gBAAJ,CAAUN,OAAV,CADgB;AAE3BO,EAAAA,UAAU,EAAE,IAAID,gBAAJ,CAAUN,OAAV;AAFe,CAAhB,CAAf;AAQA;AACA,IAAMQ,eAAe,GAAG,iBAAxB;AACA,IAAMC,eAAe,GAAG,iBAAxB;AAEA,IAAMC,GAAG,GAAG,CAAZ;AACA,IAAMC,MAAM,GAAG,CAAf;AACA,IAAMC,MAAM,GAAG,CAAf;eAEc;AACVC,EAAAA,iBAAiB,EAAE;AACfC,IAAAA,MAAM,EAAEJ,GADO;AAEfK,IAAAA,MAAM,EAAEH;AAFO,GADT;AAMVI,EAAAA,KAAK,EAAE;AACH;AACAC,IAAAA,KAAK;AAAA;AAAA;AAAA,8BAAE,iBAAOC,MAAP,EAAeC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAsBC,gBAAAA,MAAtB,QAAsBA,MAAtB;AAAA;AAAA;AAAA,uBAEcA,MAAM,CAACC,IAAP,CAAYC,OAAZ,CAAoB;AAC7BC,kBAAAA,KAAK,EAAE;AACHC,oBAAAA,MAAM,EAAEL,IAAI,CAACK;AADV;AADsB,iBAApB,CAFd;;AAAA;AAAA;;AAAA;AAAA;AAAA;AASCC,gBAAAA,OAAO,CAACC,GAAR,CAAY,YAAIC,MAAJ,CAAW,CAAX,EAAcC,IAA1B;AATD,sBAUO,IAAIC,KAAJ,CAAU,kCAAV,CAVP;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA,OAFF;AAiBH;AACAC,IAAAA,IAAI;AAAA;AAAA;AAAA,8BAAE,kBAAOZ,MAAP,EAAeC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAsBC,gBAAAA,MAAtB,SAAsBA,MAAtB;AAAA;AAAA;AAAA,uBAEeA,MAAM,CAACC,IAAP,CAAYU,OAAZ,CAAoB;AAC7BR,kBAAAA,KAAK,EAAE;AACHS,oBAAAA,EAAE,EAAEb,IAAI,CAACa;AADN;AADsB,iBAApB,CAFf;;AAAA;AAAA;;AAAA;AAAA;AAAA;AASEP,gBAAAA,OAAO,CAACC,GAAR,CAAY,aAAIC,MAAJ,CAAW,CAAX,EAAcC,IAA1B;AATF,sBAUQ,IAAIC,KAAJ,CAAU,2BAAV,CAVR;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAlBD,GANG;AAyCVI,EAAAA,QAAQ,EAAE;AACN;AACAC,IAAAA,OAAO,EAAE,wCACLC,8BADK;AAAA;AAAA;AAAA;AAAA;AAAA,8BAEL,kBAAOjB,MAAP,EAAeC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAsBC,gBAAAA,MAAtB,SAAsBA,MAAtB,EAA8BgB,IAA9B,SAA8BA,IAA9B;AAAA;AAAA;AAAA,uBAE2BhB,MAAM,CAACC,IAAP,CAAYgB,MAAZ,CAAmB;AAClCb,kBAAAA,MAAM,EAAEL,IAAI,CAACK,MADqB;AAElCc,kBAAAA,IAAI,EAAEnB,IAAI,CAACmB,IAFuB;AAGlCC,kBAAAA,MAAM,EAAEH,IAAI,CAACJ;AAHqB,iBAAnB,CAF3B;;AAAA;AAEYQ,gBAAAA,MAFZ;AAQQ;AACIC,gBAAAA,UATZ,GASyBD,MAAM,CAACE,UAThC;AAUQvC,gBAAAA,MAAM,CAACwC,OAAP,CAAenC,eAAf,EAAgC;AAAEoC,kBAAAA,SAAS,EAAE;AACzCd,oBAAAA,IAAI,EAAEW,UADmC;AAEzCI,oBAAAA,MAAM,EAAEnC;AAFiC;AAAb,iBAAhC;AAVR,kDAee8B,MAAM,CAACE,UAftB;;AAAA;AAAA;AAAA;AAkBQjB,gBAAAA,OAAO,CAACC,GAAR,CAAY,aAAIC,MAAJ,CAAW,CAAX,EAAcC,IAA1B;AAlBR,sBAmBc,IAAIC,KAAJ,CAAU,gCAAgC,aAAIF,MAAJ,CAAW,CAAX,EAAcmB,OAAxD,CAnBd;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAFK;;AAAA;AAAA;AAAA;AAAA,QAFH;AA6BN;AACAC,IAAAA,WAAW,EAAE,wCACTC,iCADS;AAAA;AAAA;AAAA;AAAA;AAAA,8BAET,kBAAO9B,MAAP,EAAeC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAsBC,gBAAAA,MAAtB,SAAsBA,MAAtB;AAAA;AAAA;AAAA,uBAG6BA,MAAM,CAACC,IAAP,CAAYU,OAAZ,CAAoB;AACrCR,kBAAAA,KAAK,EAAE;AACHS,oBAAAA,EAAE,EAAEb,IAAI,CAACa;AADN;AAD8B,iBAApB,CAH7B;;AAAA;AAGcQ,gBAAAA,MAHd;AAAA;AAAA,uBAQwCpB,MAAM,CAACC,IAAP,CAAY4B,OAAZ,CAAoB;AAChD1B,kBAAAA,KAAK,EAAC;AACFS,oBAAAA,EAAE,EAAEb,IAAI,CAACa;AADP;AAD0C,iBAApB,CARxC;;AAAA;AAQckB,gBAAAA,iBARd;AAcQ;AAEAzB,gBAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ;AACAvB,gBAAAA,MAAM,CAACwC,OAAP,CAAelC,eAAf,EAAgC;AAAE0C,kBAAAA,SAAS,EAAE;AAAEnB,oBAAAA,EAAE,EAAEb,IAAI,CAACa,EAAX;AAAeO,oBAAAA,MAAM,EAAEC,MAAM,CAACD,MAA9B;AAAsCa,oBAAAA,YAAY,EAAEjC,IAAI,CAACiC;AAAzD;AAAb,iBAAhC;AACA3B,gBAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AAlBR,kDAmBewB,iBAnBf;;AAAA;AAAA;AAAA;AAuBQzB,gBAAAA,OAAO,CAACC,GAAR,CAAY,aAAIC,MAAJ,CAAW,CAAX,EAAcC,IAA1B;AAvBR,sBAwBc,IAAIC,KAAJ,CAAU,aAAIF,MAAJ,CAAW,CAAX,EAAcmB,OAAxB,CAxBd;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAFS;;AAAA;AAAA;AAAA;AAAA,QA9BP;AA+DN;;AACA;;;;;;;;;;;;;;AAgBA;AACAO,IAAAA,QAAQ,EAAE,wCACNlB,8BADM;AAAA;AAAA;AAAA;AAAA;AAAA,8BAEN,kBAAOjB,MAAP,EAAeC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAsBC,gBAAAA,MAAtB,SAAsBA,MAAtB;AAAA;AAAA;AAAA,uBAE2BA,MAAM,CAACC,IAAP,CAAYiC,MAAZ,CACf;AAAEC,kBAAAA,IAAI,EAAEpC,IAAI,CAACoC;AAAb,iBADe,EAEf;AAAEhC,kBAAAA,KAAK,EACH;AAAES,oBAAAA,EAAE,EAAEb,IAAI,CAACa;AAAX;AADJ,iBAFe,CAF3B;;AAAA;AAEYQ,gBAAAA,MAFZ;AAAA;AAAA,uBASkCpB,MAAM,CAACC,IAAP,CAAYU,OAAZ,CAAoB;AAC1CR,kBAAAA,KAAK,EAAE;AACHS,oBAAAA,EAAE,EAAEb,IAAI,CAACa;AADN;AADmC,iBAApB,CATlC;;AAAA;AASYwB,gBAAAA,aATZ;AAeQ;AACArD,gBAAAA,MAAM,CAACwC,OAAP,CAAenC,eAAf,EAAgC;AAAEoC,kBAAAA,SAAS,EAAE;AAAEd,oBAAAA,IAAI,EAAE0B,aAAR;AAAwBX,oBAAAA,MAAM,EAAEjC;AAAhC;AAAb,iBAAhC;;AAhBR,sBAiBW4B,MAAM,IAAI,CAjBrB;AAAA;AAAA;AAAA;;AAAA,kDAkBmB,KAlBnB;;AAAA;AAAA,kDAqBmB,IArBnB;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAyBQf,gBAAAA,OAAO,CAACC,GAAR,CAAY+B,GAAG,CAAC9B,MAAJ,CAAW,CAAX,EAAcC,IAA1B;AAzBR,sBA0Bc,IAAIC,KAAJ,CAAU4B,GAAG,CAAC9B,MAAJ,CAAW,CAAX,EAAcmB,OAAxB,CA1Bd;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAFM;;AAAA;AAAA;AAAA;AAAA;AAjFJ,GAzCA;AA4JVY,EAAAA,YAAY,EAAE;AACVd,IAAAA,SAAS,EAAE;AACPe,MAAAA,SAAS,EAAE,qBAAM;AACb,eAAOxD,MAAM,CAACyD,aAAP,CAAqB,CAACpD,eAAD,CAArB,CAAP;AACH;AAHM,KADD;AAOV2C,IAAAA,SAAS,EAAC;AACNQ,MAAAA,SAAS,EAAE,8BACP,YAAM;AACF,eAAOxD,MAAM,CAACyD,aAAP,CAAqB,CAACnD,eAAD,CAArB,CAAP;AACH,OAHM,EAKP,UAACoD,OAAD,EAAU1C,IAAV,SAAqC;AAAA,YAAnBC,MAAmB,SAAnBA,MAAmB;AAAA,YAAXgB,IAAW,SAAXA,IAAW;;AACjC,YAAIyB,OAAO,CAACV,SAAR,CAAkBC,YAAlB,IAAkC,IAAtC,EAA4C;AACxC,iBAAO,IAAP;AACH,SAFD,MAGI;AACA,cAAGS,OAAO,CAACV,SAAR,CAAkBZ,MAAlB,IAA4BH,IAAI,CAACJ,EAApC,EAAuC;AACnC,mBAAO,IAAP;AACH,WAFD,MAGI;AACA,mBAAO,KAAP;AACH;AACJ;AACJ,OAjBM;AADL;AAPA,GA5JJ;AA2LVX,EAAAA,IAAI,EAAE;AACFyC,IAAAA,IAAI;AAAA;AAAA;AAAA,8BAAE,kBAAO5C,MAAP,EAAeC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuBC,gBAAAA,MAAvB,UAAuBA,MAAvB;AAAA;AAAA;AAAA,uBAEqBA,MAAM,CAAC2C,IAAP,CAAYhC,OAAZ,CAAoB;AACnCR,kBAAAA,KAAK,EAAE;AACHS,oBAAAA,EAAE,EAAEd,MAAM,CAACM;AADR;AAD4B,iBAApB,CAFrB;;AAAA;AAEMgB,gBAAAA,MAFN;AAAA,kDAOSA,MAPT;;AAAA;AAAA;AAAA;AAUEf,gBAAAA,OAAO,CAACC,GAAR,CAAY,aAAIC,MAAJ,CAAW,CAAX,EAAcC,IAA1B;AAVF,sBAWQ,IAAIC,KAAJ,CAAU,aAAIF,MAAJ,CAAW,CAAX,EAAcmB,OAAxB,CAXR;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA;AADF;AA3LI,C",
      "sourceRoot": "/home/bruno/git_workspace/testing_app_apollo_server/resolvers",
      "sourcesContent": [
        "import { RedisPubSub } from 'graphql-redis-subscriptions';\nimport Redis from 'ioredis';\n\nimport { combineResolvers } from 'graphql-resolvers';\nimport { isAuthenticated, permitedTaskDelete } from './auth_resolver.js';\n\nconst options = {\n    host: '127.0.0.1',\n    port: 6379\n}\n\nconst pubsub = new RedisPubSub({\n    publisher: new Redis(options),\n    subscriber: new Redis(options)\n});\n\nimport { withFilter } from 'apollo-server';\nimport { sequelize } from '../models/models.js';\n\n//subscription task\nconst SUB_UPDATE_TASK = 'SUB_UPDATE_TASK';\nconst SUB_DELETE_TASK = 'SUB_DELETE_TASK';\n\nconst ADD = 1;\nconst DELETE = 2;\nconst UPDATE = 3;\n\nexport default{\n    allowedTaskAction: {\n        CREATE: ADD,\n        ISDONE: UPDATE,\n    },\n\n    Query: {\n        //tasks(listId: ID!): [Task]\n        tasks: async (parent, args, {models}) => {\n            try{\n                return await models.Task.findAll({\n                    where: {\n                        listId: args.listId,\n                    },\n                });\n            }\n            catch(err){\n                console.log(err.errors[0].type)\n                throw new Error('Error al buscar todas las tareas');\n            }\n            \n        },\n\n        //task(id: ID!): Task\n        task: async (parent, args, {models}) => {\n            try{\n                return await models.Task.findOne({\n                    where: {\n                        id: args.id,\n                    },\n                });\n            }\n            catch(err){\n                console.log(err.errors[0].type)\n                throw new Error('Error al buscar una tarea');\n            }\n            \n        },\n    },\n\n\n    Mutation: {\n        //addTask(listId: ID!, text: String!): Task\n        addTask: combineResolvers(\n            isAuthenticated,\n            async (parent, args, {models, auth}) => {\n                try{\n                    let result = await models.Task.create({\n                        listId: args.listId,\n                        text: args.text,\n                        userId: auth.id,\n                    });    \n        \n                    //publicamos la nueva tarea\n                    let datavalues = result.dataValues\n                    pubsub.publish(SUB_UPDATE_TASK, { updateSub: { \n                        task: datavalues,\n                        action: ADD\n                    }});\n        \n                    return result.dataValues\n                }\n                catch(err){\n                    console.log(err.errors[0].type)\n                    throw new Error('Error al añadir una tarea. ' + err.errors[0].message);\n                }\n            }\n        ),\n\n\n        //deleteTask(id: ID!, inPublicList: Boolean!): String\n        deleteTasks: combineResolvers(\n            permitedTaskDelete,\n            async (parent, args, {models}) => {\n                try{\n                    \n                    const result = await models.Task.findOne({\n                        where: {\n                            id: args.id,\n                        }\n                    });\n                    const number_of_destroy = await models.Task.destroy({\n                        where:{\n                            id: args.id,\n                        }\n                    });\n                    \n                    //publicamos la tarea borrada\n                    \n                    console.log(\"vamos a la publicacion\")\n                    pubsub.publish(SUB_DELETE_TASK, { deleteSub: { id: args.id, userId: result.userId, inPublicList: args.inPublicList }});\n                    console.log(\"pasó la publicacion\")\n                    return number_of_destroy\n                    \n                }\n                catch(err){\n                    console.log(err.errors[0].type)\n                    throw new Error(err.errors[0].message);\n                }                \n            },\n        ),\n        \n\n\n        //deleteMultipleTasks(id_array: [ID!]!): String\n        /*deleteMultipleTasks: async (parent, args, {models}) => {\n            try{\n                await models.Task.destroy({\n                    where:{\n                        id: args.id_array,\n                    }\n                });\n\n                pubsub.publish(SUB_TASK, {taskSub: { task: null , action: DELETE}});\n                return \"Se han borrado todas las tareas perfectamente\"\n            }\n            catch(err){\n                throw new Error(\"Error al borrar multiples tareas\");\n            }\n        },*/\n\n        //markDone(id: ID!, done: Boolean!): Boolean\n        markDone: combineResolvers(\n            isAuthenticated,\n            async (parent, args, {models}) => {\n                try{\n                    let result = await models.Task.update(\n                        { done: args.done }, \n                        { where:\n                            { id: args.id },\n                        }\n                    );\n    \n                    let modified_task = await models.Task.findOne({\n                        where: {\n                            id: args.id,\n                        }\n                    })\n    \n                    //publicamos la tarea modificada\n                    pubsub.publish(SUB_UPDATE_TASK, { updateSub: { task: modified_task , action: UPDATE }});\n                    if(result == 0){\n                        return false;\n                    }\n                    else{\n                        return true;\n                    }\n                }\n                catch{\n                    console.log(err.errors[0].type)\n                    throw new Error(err.errors[0].message);\n                }\n            },\n        ),\n    },\n\n    Subscription: {\n        updateSub: {\n            subscribe: () => { \n                return pubsub.asyncIterator([SUB_UPDATE_TASK]) \n            },\n        },\n\n        deleteSub:{\n            subscribe: withFilter(\n                () => { \n                    return pubsub.asyncIterator([SUB_DELETE_TASK]); \n                },\n    \n                (payload, args, { models, auth }) => {\n                    if( payload.deleteSub.inPublicList == true ){\n                        return true\n                    }\n                    else{\n                        if(payload.deleteSub.userId == auth.id){\n                            return true;\n                        }\n                        else{\n                            return false;\n                        }\n                    }               \n                }\n            )\n        },\n        \n    },\n\n    Task: {\n        list: async (parent, args, { models }) => {\n            try{\n                let result = await models.List.findOne({\n                    where: {\n                        id: parent.listId,\n                    }\n                })\n                return result;\n            }\n            catch(err){\n                console.log(err.errors[0].type)\n                throw new Error(err.errors[0].message);\n            }\n            \n        }\n    }\n};\n\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1553870493883
  },
  "{\"sourceRoot\":\"/home/bruno/git_workspace/testing_app_apollo_server/models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/bruno/git_workspace/testing_app_apollo_server\",\"filename\":\"/home/bruno/git_workspace/testing_app_apollo_server/models/models.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/bruno/git_workspace/testing_app_apollo_server\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/bruno/git_workspace/testing_app_apollo_server/models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/bruno/git_workspace/testing_app_apollo_server",
      "filename": "/home/bruno/git_workspace/testing_app_apollo_server/models/models.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/bruno/git_workspace/testing_app_apollo_server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/bruno/git_workspace/testing_app_apollo_server/models/models.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/home/bruno/git_workspace/testing_app_apollo_server/models/models.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/bruno/git_workspace/testing_app_apollo_server/models",
        "sourceFileName": "models.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.sequelize = void 0;\n\nvar _sequelize = _interopRequireDefault(require(\"sequelize\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar sequelize = new _sequelize.default( //database\n'tododb', //database user\n'postgres', //database password\n'testing', {\n  dialect: 'postgres',\n  port: 5432\n});\nexports.sequelize = sequelize;\nvar models = {\n  List: sequelize.import('./list_model.js'),\n  Task: sequelize.import('./task_model.js'),\n  User: sequelize.import('./user_model.js')\n};\nObject.keys(models).forEach(function (key) {\n  if ('associate' in models[key]) {\n    models[key].associate(models);\n  }\n});\nvar _default = models;\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1vZGVscy5qcyJdLCJuYW1lcyI6WyJzZXF1ZWxpemUiLCJTZXF1ZWxpemUiLCJkaWFsZWN0IiwicG9ydCIsIm1vZGVscyIsIkxpc3QiLCJpbXBvcnQiLCJUYXNrIiwiVXNlciIsIk9iamVjdCIsImtleXMiLCJmb3JFYWNoIiwia2V5IiwiYXNzb2NpYXRlIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQ0E7Ozs7QUFFQSxJQUFNQSxTQUFTLEdBQUcsSUFBSUMsa0JBQUosRUFDZDtBQUNBLFFBRmMsRUFJZDtBQUNBLFVBTGMsRUFPZDtBQUNBLFNBUmMsRUFVZDtBQUNJQyxFQUFBQSxPQUFPLEVBQUUsVUFEYjtBQUVJQyxFQUFBQSxJQUFJLEVBQUU7QUFGVixDQVZjLENBQWxCOztBQWlCQSxJQUFNQyxNQUFNLEdBQUc7QUFDWEMsRUFBQUEsSUFBSSxFQUFFTCxTQUFTLENBQUNNLE1BQVYsQ0FBaUIsaUJBQWpCLENBREs7QUFFWEMsRUFBQUEsSUFBSSxFQUFFUCxTQUFTLENBQUNNLE1BQVYsQ0FBaUIsaUJBQWpCLENBRks7QUFHWEUsRUFBQUEsSUFBSSxFQUFFUixTQUFTLENBQUNNLE1BQVYsQ0FBaUIsaUJBQWpCO0FBSEssQ0FBZjtBQU1BRyxNQUFNLENBQUNDLElBQVAsQ0FBWU4sTUFBWixFQUFvQk8sT0FBcEIsQ0FBNEIsVUFBQUMsR0FBRyxFQUFJO0FBQy9CLE1BQUksZUFBZVIsTUFBTSxDQUFDUSxHQUFELENBQXpCLEVBQWdDO0FBQzlCUixJQUFBQSxNQUFNLENBQUNRLEdBQUQsQ0FBTixDQUFZQyxTQUFaLENBQXNCVCxNQUF0QjtBQUNEO0FBQ0osQ0FKRDtlQVFlQSxNIiwic291cmNlUm9vdCI6Ii9ob21lL2JydW5vL2dpdF93b3Jrc3BhY2UvdGVzdGluZ19hcHBfYXBvbGxvX3NlcnZlci9tb2RlbHMiLCJzb3VyY2VzQ29udGVudCI6WyJcbmltcG9ydCBTZXF1ZWxpemUgZnJvbSAnc2VxdWVsaXplJztcblxuY29uc3Qgc2VxdWVsaXplID0gbmV3IFNlcXVlbGl6ZShcbiAgICAvL2RhdGFiYXNlXG4gICAgJ3RvZG9kYicsXG5cbiAgICAvL2RhdGFiYXNlIHVzZXJcbiAgICAncG9zdGdyZXMnLFxuXG4gICAgLy9kYXRhYmFzZSBwYXNzd29yZFxuICAgICd0ZXN0aW5nJyxcbiAgXG4gICAge1xuICAgICAgICBkaWFsZWN0OiAncG9zdGdyZXMnLFxuICAgICAgICBwb3J0OiA1NDMyLFxuICAgIH0sXG4pO1xuXG5cbmNvbnN0IG1vZGVscyA9IHtcbiAgICBMaXN0OiBzZXF1ZWxpemUuaW1wb3J0KCcuL2xpc3RfbW9kZWwuanMnKSxcbiAgICBUYXNrOiBzZXF1ZWxpemUuaW1wb3J0KCcuL3Rhc2tfbW9kZWwuanMnKSxcbiAgICBVc2VyOiBzZXF1ZWxpemUuaW1wb3J0KCcuL3VzZXJfbW9kZWwuanMnKVxufTtcbiAgXG5PYmplY3Qua2V5cyhtb2RlbHMpLmZvckVhY2goa2V5ID0+IHtcbiAgICBpZiAoJ2Fzc29jaWF0ZScgaW4gbW9kZWxzW2tleV0pIHtcbiAgICAgIG1vZGVsc1trZXldLmFzc29jaWF0ZShtb2RlbHMpO1xuICAgIH1cbn0pO1xuICBcbmV4cG9ydCB7IHNlcXVlbGl6ZSB9O1xuICBcbmV4cG9ydCBkZWZhdWx0IG1vZGVscztcbiAgIl19",
    "map": {
      "version": 3,
      "sources": [
        "models.js"
      ],
      "names": [
        "sequelize",
        "Sequelize",
        "dialect",
        "port",
        "models",
        "List",
        "import",
        "Task",
        "User",
        "Object",
        "keys",
        "forEach",
        "key",
        "associate"
      ],
      "mappings": ";;;;;;;AACA;;;;AAEA,IAAMA,SAAS,GAAG,IAAIC,kBAAJ,EACd;AACA,QAFc,EAId;AACA,UALc,EAOd;AACA,SARc,EAUd;AACIC,EAAAA,OAAO,EAAE,UADb;AAEIC,EAAAA,IAAI,EAAE;AAFV,CAVc,CAAlB;;AAiBA,IAAMC,MAAM,GAAG;AACXC,EAAAA,IAAI,EAAEL,SAAS,CAACM,MAAV,CAAiB,iBAAjB,CADK;AAEXC,EAAAA,IAAI,EAAEP,SAAS,CAACM,MAAV,CAAiB,iBAAjB,CAFK;AAGXE,EAAAA,IAAI,EAAER,SAAS,CAACM,MAAV,CAAiB,iBAAjB;AAHK,CAAf;AAMAG,MAAM,CAACC,IAAP,CAAYN,MAAZ,EAAoBO,OAApB,CAA4B,UAAAC,GAAG,EAAI;AAC/B,MAAI,eAAeR,MAAM,CAACQ,GAAD,CAAzB,EAAgC;AAC9BR,IAAAA,MAAM,CAACQ,GAAD,CAAN,CAAYC,SAAZ,CAAsBT,MAAtB;AACD;AACJ,CAJD;eAQeA,M",
      "sourceRoot": "/home/bruno/git_workspace/testing_app_apollo_server/models",
      "sourcesContent": [
        "\nimport Sequelize from 'sequelize';\n\nconst sequelize = new Sequelize(\n    //database\n    'tododb',\n\n    //database user\n    'postgres',\n\n    //database password\n    'testing',\n  \n    {\n        dialect: 'postgres',\n        port: 5432,\n    },\n);\n\n\nconst models = {\n    List: sequelize.import('./list_model.js'),\n    Task: sequelize.import('./task_model.js'),\n    User: sequelize.import('./user_model.js')\n};\n  \nObject.keys(models).forEach(key => {\n    if ('associate' in models[key]) {\n      models[key].associate(models);\n    }\n});\n  \nexport { sequelize };\n  \nexport default models;\n  "
      ]
    },
    "sourceType": "script",
    "mtime": 1553870442895
  },
  "{\"sourceRoot\":\"/home/bruno/git_workspace/testing_app_apollo_server/models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/bruno/git_workspace/testing_app_apollo_server\",\"filename\":\"/home/bruno/git_workspace/testing_app_apollo_server/models/list_model.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/bruno/git_workspace/testing_app_apollo_server\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/bruno/git_workspace/testing_app_apollo_server/models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/bruno/git_workspace/testing_app_apollo_server",
      "filename": "/home/bruno/git_workspace/testing_app_apollo_server/models/list_model.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/bruno/git_workspace/testing_app_apollo_server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/bruno/git_workspace/testing_app_apollo_server/models/list_model.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/home/bruno/git_workspace/testing_app_apollo_server/models/list_model.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/bruno/git_workspace/testing_app_apollo_server/models",
        "sourceFileName": "list_model.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar list = function list(sequelize, DataTypes) {\n  var List = sequelize.define('list', {\n    name: {\n      type: DataTypes.STRING,\n      allowNull: false\n    },\n    public: {\n      type: DataTypes.BOOLEAN,\n      allowNull: false\n    }\n  });\n\n  List.associate = function (models) {\n    List.hasMany(models.Task, {\n      onDelete: 'CASCADE'\n    });\n    List.belongsTo(models.User, {\n      onDelete: 'SET NULL'\n    });\n  };\n\n  return List;\n};\n\nvar _default = list;\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpc3RfbW9kZWwuanMiXSwibmFtZXMiOlsibGlzdCIsInNlcXVlbGl6ZSIsIkRhdGFUeXBlcyIsIkxpc3QiLCJkZWZpbmUiLCJuYW1lIiwidHlwZSIsIlNUUklORyIsImFsbG93TnVsbCIsInB1YmxpYyIsIkJPT0xFQU4iLCJhc3NvY2lhdGUiLCJtb2RlbHMiLCJoYXNNYW55IiwiVGFzayIsIm9uRGVsZXRlIiwiYmVsb25nc1RvIiwiVXNlciJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUNBLElBQU1BLElBQUksR0FBRyxTQUFQQSxJQUFPLENBQUNDLFNBQUQsRUFBWUMsU0FBWixFQUEwQjtBQUNuQyxNQUFNQyxJQUFJLEdBQUdGLFNBQVMsQ0FBQ0csTUFBVixDQUFpQixNQUFqQixFQUF5QjtBQUNwQ0MsSUFBQUEsSUFBSSxFQUFFO0FBQ0pDLE1BQUFBLElBQUksRUFBRUosU0FBUyxDQUFDSyxNQURaO0FBRUpDLE1BQUFBLFNBQVMsRUFBRTtBQUZQLEtBRDhCO0FBS3BDQyxJQUFBQSxNQUFNLEVBQUU7QUFDTkgsTUFBQUEsSUFBSSxFQUFFSixTQUFTLENBQUNRLE9BRFY7QUFFTkYsTUFBQUEsU0FBUyxFQUFDO0FBRko7QUFMNEIsR0FBekIsQ0FBYjs7QUFXQUwsRUFBQUEsSUFBSSxDQUFDUSxTQUFMLEdBQWlCLFVBQUFDLE1BQU0sRUFBSTtBQUN6QlQsSUFBQUEsSUFBSSxDQUFDVSxPQUFMLENBQWFELE1BQU0sQ0FBQ0UsSUFBcEIsRUFBMEI7QUFBRUMsTUFBQUEsUUFBUSxFQUFFO0FBQVosS0FBMUI7QUFDQVosSUFBQUEsSUFBSSxDQUFDYSxTQUFMLENBQWVKLE1BQU0sQ0FBQ0ssSUFBdEIsRUFBNEI7QUFBRUYsTUFBQUEsUUFBUSxFQUFFO0FBQVosS0FBNUI7QUFDRCxHQUhEOztBQUtGLFNBQU9aLElBQVA7QUFDRCxDQWxCRDs7ZUFvQmVILEkiLCJzb3VyY2VSb290IjoiL2hvbWUvYnJ1bm8vZ2l0X3dvcmtzcGFjZS90ZXN0aW5nX2FwcF9hcG9sbG9fc2VydmVyL21vZGVscyIsInNvdXJjZXNDb250ZW50IjpbIlxuY29uc3QgbGlzdCA9IChzZXF1ZWxpemUsIERhdGFUeXBlcykgPT4ge1xuICAgIGNvbnN0IExpc3QgPSBzZXF1ZWxpemUuZGVmaW5lKCdsaXN0Jywge1xuICAgICAgbmFtZToge1xuICAgICAgICB0eXBlOiBEYXRhVHlwZXMuU1RSSU5HLFxuICAgICAgICBhbGxvd051bGw6IGZhbHNlLFxuICAgICAgfSxcbiAgICAgIHB1YmxpYzoge1xuICAgICAgICB0eXBlOiBEYXRhVHlwZXMuQk9PTEVBTixcbiAgICAgICAgYWxsb3dOdWxsOmZhbHNlLFxuICAgICAgfVxuICAgIH0pO1xuICBcbiAgICBMaXN0LmFzc29jaWF0ZSA9IG1vZGVscyA9PiB7XG4gICAgICBMaXN0Lmhhc01hbnkobW9kZWxzLlRhc2ssIHsgb25EZWxldGU6ICdDQVNDQURFJyB9KTtcbiAgICAgIExpc3QuYmVsb25nc1RvKG1vZGVscy5Vc2VyLCB7IG9uRGVsZXRlOiAnU0VUIE5VTEwnfSlcbiAgICB9O1xuICBcbiAgcmV0dXJuIExpc3Q7XG59O1xuICBcbmV4cG9ydCBkZWZhdWx0IGxpc3Q7XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "list_model.js"
      ],
      "names": [
        "list",
        "sequelize",
        "DataTypes",
        "List",
        "define",
        "name",
        "type",
        "STRING",
        "allowNull",
        "public",
        "BOOLEAN",
        "associate",
        "models",
        "hasMany",
        "Task",
        "onDelete",
        "belongsTo",
        "User"
      ],
      "mappings": ";;;;;;;AACA,IAAMA,IAAI,GAAG,SAAPA,IAAO,CAACC,SAAD,EAAYC,SAAZ,EAA0B;AACnC,MAAMC,IAAI,GAAGF,SAAS,CAACG,MAAV,CAAiB,MAAjB,EAAyB;AACpCC,IAAAA,IAAI,EAAE;AACJC,MAAAA,IAAI,EAAEJ,SAAS,CAACK,MADZ;AAEJC,MAAAA,SAAS,EAAE;AAFP,KAD8B;AAKpCC,IAAAA,MAAM,EAAE;AACNH,MAAAA,IAAI,EAAEJ,SAAS,CAACQ,OADV;AAENF,MAAAA,SAAS,EAAC;AAFJ;AAL4B,GAAzB,CAAb;;AAWAL,EAAAA,IAAI,CAACQ,SAAL,GAAiB,UAAAC,MAAM,EAAI;AACzBT,IAAAA,IAAI,CAACU,OAAL,CAAaD,MAAM,CAACE,IAApB,EAA0B;AAAEC,MAAAA,QAAQ,EAAE;AAAZ,KAA1B;AACAZ,IAAAA,IAAI,CAACa,SAAL,CAAeJ,MAAM,CAACK,IAAtB,EAA4B;AAAEF,MAAAA,QAAQ,EAAE;AAAZ,KAA5B;AACD,GAHD;;AAKF,SAAOZ,IAAP;AACD,CAlBD;;eAoBeH,I",
      "sourceRoot": "/home/bruno/git_workspace/testing_app_apollo_server/models",
      "sourcesContent": [
        "\nconst list = (sequelize, DataTypes) => {\n    const List = sequelize.define('list', {\n      name: {\n        type: DataTypes.STRING,\n        allowNull: false,\n      },\n      public: {\n        type: DataTypes.BOOLEAN,\n        allowNull:false,\n      }\n    });\n  \n    List.associate = models => {\n      List.hasMany(models.Task, { onDelete: 'CASCADE' });\n      List.belongsTo(models.User, { onDelete: 'SET NULL'})\n    };\n  \n  return List;\n};\n  \nexport default list;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1553768538707
  },
  "{\"sourceRoot\":\"/home/bruno/git_workspace/testing_app_apollo_server/models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/bruno/git_workspace/testing_app_apollo_server\",\"filename\":\"/home/bruno/git_workspace/testing_app_apollo_server/models/task_model.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/bruno/git_workspace/testing_app_apollo_server\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/bruno/git_workspace/testing_app_apollo_server/models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/bruno/git_workspace/testing_app_apollo_server",
      "filename": "/home/bruno/git_workspace/testing_app_apollo_server/models/task_model.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/bruno/git_workspace/testing_app_apollo_server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/bruno/git_workspace/testing_app_apollo_server/models/task_model.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/home/bruno/git_workspace/testing_app_apollo_server/models/task_model.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/bruno/git_workspace/testing_app_apollo_server/models",
        "sourceFileName": "task_model.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar task = function task(sequelize, DataTypes) {\n  var Task = sequelize.define('task', {\n    text: {\n      type: DataTypes.STRING,\n      allowNull: false,\n      validate: {\n        notEmpty: {\n          args: true,\n          msg: 'No puede añadirse una tarea vacía'\n        }\n      }\n    },\n    done: {\n      type: DataTypes.BOOLEAN,\n      allowNull: false,\n      defaultValue: false\n    }\n  });\n\n  Task.associate = function (models) {\n    Task.belongsTo(models.List, {\n      onDelete: 'CASCADE'\n    });\n    Task.belongsTo(models.User, {\n      onDelete: 'SET NULL'\n    });\n  };\n\n  return Task;\n};\n\nvar _default = task;\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRhc2tfbW9kZWwuanMiXSwibmFtZXMiOlsidGFzayIsInNlcXVlbGl6ZSIsIkRhdGFUeXBlcyIsIlRhc2siLCJkZWZpbmUiLCJ0ZXh0IiwidHlwZSIsIlNUUklORyIsImFsbG93TnVsbCIsInZhbGlkYXRlIiwibm90RW1wdHkiLCJhcmdzIiwibXNnIiwiZG9uZSIsIkJPT0xFQU4iLCJkZWZhdWx0VmFsdWUiLCJhc3NvY2lhdGUiLCJtb2RlbHMiLCJiZWxvbmdzVG8iLCJMaXN0Iiwib25EZWxldGUiLCJVc2VyIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQ0EsSUFBTUEsSUFBSSxHQUFHLFNBQVBBLElBQU8sQ0FBQ0MsU0FBRCxFQUFZQyxTQUFaLEVBQTBCO0FBQ25DLE1BQU1DLElBQUksR0FBR0YsU0FBUyxDQUFDRyxNQUFWLENBQWlCLE1BQWpCLEVBQXlCO0FBQ3BDQyxJQUFBQSxJQUFJLEVBQUU7QUFDSkMsTUFBQUEsSUFBSSxFQUFFSixTQUFTLENBQUNLLE1BRFo7QUFFSkMsTUFBQUEsU0FBUyxFQUFFLEtBRlA7QUFHSkMsTUFBQUEsUUFBUSxFQUFDO0FBQ1BDLFFBQUFBLFFBQVEsRUFBRTtBQUNSQyxVQUFBQSxJQUFJLEVBQUUsSUFERTtBQUVSQyxVQUFBQSxHQUFHLEVBQUU7QUFGRztBQURIO0FBSEwsS0FEOEI7QUFZcENDLElBQUFBLElBQUksRUFBQztBQUNIUCxNQUFBQSxJQUFJLEVBQUVKLFNBQVMsQ0FBQ1ksT0FEYjtBQUVITixNQUFBQSxTQUFTLEVBQUUsS0FGUjtBQUdITyxNQUFBQSxZQUFZLEVBQUU7QUFIWDtBQVorQixHQUF6QixDQUFiOztBQW1CQVosRUFBQUEsSUFBSSxDQUFDYSxTQUFMLEdBQWlCLFVBQUFDLE1BQU0sRUFBSTtBQUN6QmQsSUFBQUEsSUFBSSxDQUFDZSxTQUFMLENBQWVELE1BQU0sQ0FBQ0UsSUFBdEIsRUFBNEI7QUFBQ0MsTUFBQUEsUUFBUSxFQUFFO0FBQVgsS0FBNUI7QUFDQWpCLElBQUFBLElBQUksQ0FBQ2UsU0FBTCxDQUFlRCxNQUFNLENBQUNJLElBQXRCLEVBQTRCO0FBQUNELE1BQUFBLFFBQVEsRUFBRTtBQUFYLEtBQTVCO0FBQ0QsR0FIRDs7QUFNQSxTQUFPakIsSUFBUDtBQUNELENBM0JIOztlQTZCaUJILEkiLCJzb3VyY2VSb290IjoiL2hvbWUvYnJ1bm8vZ2l0X3dvcmtzcGFjZS90ZXN0aW5nX2FwcF9hcG9sbG9fc2VydmVyL21vZGVscyIsInNvdXJjZXNDb250ZW50IjpbIlxuY29uc3QgdGFzayA9IChzZXF1ZWxpemUsIERhdGFUeXBlcykgPT4ge1xuICAgIGNvbnN0IFRhc2sgPSBzZXF1ZWxpemUuZGVmaW5lKCd0YXNrJywge1xuICAgICAgdGV4dDoge1xuICAgICAgICB0eXBlOiBEYXRhVHlwZXMuU1RSSU5HLFxuICAgICAgICBhbGxvd051bGw6IGZhbHNlLFxuICAgICAgICB2YWxpZGF0ZTp7XG4gICAgICAgICAgbm90RW1wdHk6IHtcbiAgICAgICAgICAgIGFyZ3M6IHRydWUsXG4gICAgICAgICAgICBtc2c6ICdObyBwdWVkZSBhw7FhZGlyc2UgdW5hIHRhcmVhIHZhY8OtYSdcbiAgICAgICAgICB9XG4gICAgICAgIH0sXG4gICAgICB9LFxuXG4gICAgICBkb25lOntcbiAgICAgICAgdHlwZTogRGF0YVR5cGVzLkJPT0xFQU4sXG4gICAgICAgIGFsbG93TnVsbDogZmFsc2UsXG4gICAgICAgIGRlZmF1bHRWYWx1ZTogZmFsc2UsXG4gICAgICB9LFxuICAgIH0pO1xuICBcbiAgICBUYXNrLmFzc29jaWF0ZSA9IG1vZGVscyA9PiB7XG4gICAgICBUYXNrLmJlbG9uZ3NUbyhtb2RlbHMuTGlzdCwge29uRGVsZXRlOiAnQ0FTQ0FERSd9KTtcbiAgICAgIFRhc2suYmVsb25nc1RvKG1vZGVscy5Vc2VyLCB7b25EZWxldGU6ICdTRVQgTlVMTCd9KTtcbiAgICB9O1xuXG4gIFxuICAgIHJldHVybiBUYXNrO1xuICB9O1xuICBcbiAgZXhwb3J0IGRlZmF1bHQgdGFzaztcblxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "task_model.js"
      ],
      "names": [
        "task",
        "sequelize",
        "DataTypes",
        "Task",
        "define",
        "text",
        "type",
        "STRING",
        "allowNull",
        "validate",
        "notEmpty",
        "args",
        "msg",
        "done",
        "BOOLEAN",
        "defaultValue",
        "associate",
        "models",
        "belongsTo",
        "List",
        "onDelete",
        "User"
      ],
      "mappings": ";;;;;;;AACA,IAAMA,IAAI,GAAG,SAAPA,IAAO,CAACC,SAAD,EAAYC,SAAZ,EAA0B;AACnC,MAAMC,IAAI,GAAGF,SAAS,CAACG,MAAV,CAAiB,MAAjB,EAAyB;AACpCC,IAAAA,IAAI,EAAE;AACJC,MAAAA,IAAI,EAAEJ,SAAS,CAACK,MADZ;AAEJC,MAAAA,SAAS,EAAE,KAFP;AAGJC,MAAAA,QAAQ,EAAC;AACPC,QAAAA,QAAQ,EAAE;AACRC,UAAAA,IAAI,EAAE,IADE;AAERC,UAAAA,GAAG,EAAE;AAFG;AADH;AAHL,KAD8B;AAYpCC,IAAAA,IAAI,EAAC;AACHP,MAAAA,IAAI,EAAEJ,SAAS,CAACY,OADb;AAEHN,MAAAA,SAAS,EAAE,KAFR;AAGHO,MAAAA,YAAY,EAAE;AAHX;AAZ+B,GAAzB,CAAb;;AAmBAZ,EAAAA,IAAI,CAACa,SAAL,GAAiB,UAAAC,MAAM,EAAI;AACzBd,IAAAA,IAAI,CAACe,SAAL,CAAeD,MAAM,CAACE,IAAtB,EAA4B;AAACC,MAAAA,QAAQ,EAAE;AAAX,KAA5B;AACAjB,IAAAA,IAAI,CAACe,SAAL,CAAeD,MAAM,CAACI,IAAtB,EAA4B;AAACD,MAAAA,QAAQ,EAAE;AAAX,KAA5B;AACD,GAHD;;AAMA,SAAOjB,IAAP;AACD,CA3BH;;eA6BiBH,I",
      "sourceRoot": "/home/bruno/git_workspace/testing_app_apollo_server/models",
      "sourcesContent": [
        "\nconst task = (sequelize, DataTypes) => {\n    const Task = sequelize.define('task', {\n      text: {\n        type: DataTypes.STRING,\n        allowNull: false,\n        validate:{\n          notEmpty: {\n            args: true,\n            msg: 'No puede añadirse una tarea vacía'\n          }\n        },\n      },\n\n      done:{\n        type: DataTypes.BOOLEAN,\n        allowNull: false,\n        defaultValue: false,\n      },\n    });\n  \n    Task.associate = models => {\n      Task.belongsTo(models.List, {onDelete: 'CASCADE'});\n      Task.belongsTo(models.User, {onDelete: 'SET NULL'});\n    };\n\n  \n    return Task;\n  };\n  \n  export default task;\n\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1553768538707
  },
  "{\"sourceRoot\":\"/home/bruno/git_workspace/testing_app_apollo_server/models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/bruno/git_workspace/testing_app_apollo_server\",\"filename\":\"/home/bruno/git_workspace/testing_app_apollo_server/models/user_model.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/bruno/git_workspace/testing_app_apollo_server\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/bruno/git_workspace/testing_app_apollo_server/models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/bruno/git_workspace/testing_app_apollo_server",
      "filename": "/home/bruno/git_workspace/testing_app_apollo_server/models/user_model.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/bruno/git_workspace/testing_app_apollo_server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/bruno/git_workspace/testing_app_apollo_server/models/user_model.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/home/bruno/git_workspace/testing_app_apollo_server/models/user_model.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/bruno/git_workspace/testing_app_apollo_server/models",
        "sourceFileName": "user_model.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _bcrypt = _interopRequireDefault(require(\"bcrypt\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar SALT_ROUND = 10;\n\nvar user = function user(sequelize, DataTypes) {\n  var User = sequelize.define('user', {\n    username: {\n      type: DataTypes.STRING,\n      allowNull: false\n    },\n    email: {\n      type: DataTypes.STRING,\n      unique: true,\n      allowNull: false,\n      validate: {\n        notEmpty: true,\n        isEmail: true\n      }\n    },\n    password: {\n      type: DataTypes.STRING,\n      allowNull: false,\n      validate: {\n        notEmpty: true,\n        len: [3, 16]\n      }\n    }\n  });\n\n  User.associate = function (models) {\n    User.hasMany(models.Task, {\n      onDelete: 'SET NULL'\n    });\n    User.hasMany(models.List, {\n      onDelete: ''\n    });\n  };\n\n  User.beforeCreate(\n  /*#__PURE__*/\n  function () {\n    var _ref = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee(user) {\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _bcrypt.default.hash(user.password, SALT_ROUND);\n\n            case 2:\n              user.password = _context.sent;\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }());\n  return User;\n};\n\nvar _default = user;\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVzZXJfbW9kZWwuanMiXSwibmFtZXMiOlsiU0FMVF9ST1VORCIsInVzZXIiLCJzZXF1ZWxpemUiLCJEYXRhVHlwZXMiLCJVc2VyIiwiZGVmaW5lIiwidXNlcm5hbWUiLCJ0eXBlIiwiU1RSSU5HIiwiYWxsb3dOdWxsIiwiZW1haWwiLCJ1bmlxdWUiLCJ2YWxpZGF0ZSIsIm5vdEVtcHR5IiwiaXNFbWFpbCIsInBhc3N3b3JkIiwibGVuIiwiYXNzb2NpYXRlIiwibW9kZWxzIiwiaGFzTWFueSIsIlRhc2siLCJvbkRlbGV0ZSIsIkxpc3QiLCJiZWZvcmVDcmVhdGUiLCJiY3J5cHQiLCJoYXNoIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7Ozs7Ozs7O0FBRUEsSUFBTUEsVUFBVSxHQUFHLEVBQW5COztBQUVBLElBQU1DLElBQUksR0FBRyxTQUFQQSxJQUFPLENBQUNDLFNBQUQsRUFBWUMsU0FBWixFQUEwQjtBQUNuQyxNQUFNQyxJQUFJLEdBQUdGLFNBQVMsQ0FBQ0csTUFBVixDQUFpQixNQUFqQixFQUF5QjtBQUNsQ0MsSUFBQUEsUUFBUSxFQUFFO0FBQ05DLE1BQUFBLElBQUksRUFBRUosU0FBUyxDQUFDSyxNQURWO0FBRU5DLE1BQUFBLFNBQVMsRUFBRTtBQUZMLEtBRHdCO0FBTWxDQyxJQUFBQSxLQUFLLEVBQUU7QUFDSEgsTUFBQUEsSUFBSSxFQUFFSixTQUFTLENBQUNLLE1BRGI7QUFFSEcsTUFBQUEsTUFBTSxFQUFFLElBRkw7QUFHSEYsTUFBQUEsU0FBUyxFQUFFLEtBSFI7QUFJSEcsTUFBQUEsUUFBUSxFQUFFO0FBQ1ZDLFFBQUFBLFFBQVEsRUFBRSxJQURBO0FBRVZDLFFBQUFBLE9BQU8sRUFBRTtBQUZDO0FBSlAsS0FOMkI7QUFnQmxDQyxJQUFBQSxRQUFRLEVBQUU7QUFDTlIsTUFBQUEsSUFBSSxFQUFFSixTQUFTLENBQUNLLE1BRFY7QUFFTkMsTUFBQUEsU0FBUyxFQUFFLEtBRkw7QUFHTkcsTUFBQUEsUUFBUSxFQUFFO0FBQ1ZDLFFBQUFBLFFBQVEsRUFBRSxJQURBO0FBRVZHLFFBQUFBLEdBQUcsRUFBRSxDQUFDLENBQUQsRUFBSSxFQUFKO0FBRks7QUFISjtBQWhCd0IsR0FBekIsQ0FBYjs7QUEwQkFaLEVBQUFBLElBQUksQ0FBQ2EsU0FBTCxHQUFpQixVQUFBQyxNQUFNLEVBQUk7QUFDdkJkLElBQUFBLElBQUksQ0FBQ2UsT0FBTCxDQUFhRCxNQUFNLENBQUNFLElBQXBCLEVBQTBCO0FBQUVDLE1BQUFBLFFBQVEsRUFBRTtBQUFaLEtBQTFCO0FBQ0FqQixJQUFBQSxJQUFJLENBQUNlLE9BQUwsQ0FBYUQsTUFBTSxDQUFDSSxJQUFwQixFQUEwQjtBQUFFRCxNQUFBQSxRQUFRLEVBQUU7QUFBWixLQUExQjtBQUNILEdBSEQ7O0FBS0FqQixFQUFBQSxJQUFJLENBQUNtQixZQUFMO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSw0QkFBbUIsaUJBQU90QixJQUFQO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLHFCQUNPdUIsZ0JBQU9DLElBQVAsQ0FBWXhCLElBQUksQ0FBQ2MsUUFBakIsRUFBMkJmLFVBQTNCLENBRFA7O0FBQUE7QUFDZkMsY0FBQUEsSUFBSSxDQUFDYyxRQURVOztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLEtBQW5COztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBSUksU0FBT1gsSUFBUDtBQUNILENBckNMOztlQXVDZUgsSSIsInNvdXJjZVJvb3QiOiIvaG9tZS9icnVuby9naXRfd29ya3NwYWNlL3Rlc3RpbmdfYXBwX2Fwb2xsb19zZXJ2ZXIvbW9kZWxzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGJjcnlwdCBmcm9tICdiY3J5cHQnO1xuXG5jb25zdCBTQUxUX1JPVU5EID0gMTA7XG5cbmNvbnN0IHVzZXIgPSAoc2VxdWVsaXplLCBEYXRhVHlwZXMpID0+IHtcbiAgICBjb25zdCBVc2VyID0gc2VxdWVsaXplLmRlZmluZSgndXNlcicsIHtcbiAgICAgICAgdXNlcm5hbWU6IHtcbiAgICAgICAgICAgIHR5cGU6IERhdGFUeXBlcy5TVFJJTkcsXG4gICAgICAgICAgICBhbGxvd051bGw6IGZhbHNlLFxuICAgICAgICB9LFxuXG4gICAgICAgIGVtYWlsOiB7XG4gICAgICAgICAgICB0eXBlOiBEYXRhVHlwZXMuU1RSSU5HLFxuICAgICAgICAgICAgdW5pcXVlOiB0cnVlLFxuICAgICAgICAgICAgYWxsb3dOdWxsOiBmYWxzZSxcbiAgICAgICAgICAgIHZhbGlkYXRlOiB7XG4gICAgICAgICAgICBub3RFbXB0eTogdHJ1ZSxcbiAgICAgICAgICAgIGlzRW1haWw6IHRydWUsXG4gICAgICAgICAgICB9LFxuICAgICAgICB9LFxuXG4gICAgICAgIHBhc3N3b3JkOiB7XG4gICAgICAgICAgICB0eXBlOiBEYXRhVHlwZXMuU1RSSU5HLFxuICAgICAgICAgICAgYWxsb3dOdWxsOiBmYWxzZSxcbiAgICAgICAgICAgIHZhbGlkYXRlOiB7XG4gICAgICAgICAgICBub3RFbXB0eTogdHJ1ZSxcbiAgICAgICAgICAgIGxlbjogWzMsIDE2XSxcbiAgICAgICAgICAgIH0sXG4gICAgICAgIH0sXG4gICAgfSk7XG4gICAgXG4gICAgVXNlci5hc3NvY2lhdGUgPSBtb2RlbHMgPT4ge1xuICAgICAgICBVc2VyLmhhc01hbnkobW9kZWxzLlRhc2ssIHsgb25EZWxldGU6ICdTRVQgTlVMTCcgfSk7XG4gICAgICAgIFVzZXIuaGFzTWFueShtb2RlbHMuTGlzdCwgeyBvbkRlbGV0ZTogJycgfSk7XG4gICAgfTtcblxuICAgIFVzZXIuYmVmb3JlQ3JlYXRlKCBhc3luYyAodXNlcikgPT4ge1xuICAgICAgICB1c2VyLnBhc3N3b3JkID0gYXdhaXQgYmNyeXB0Lmhhc2godXNlci5wYXNzd29yZCwgU0FMVF9ST1VORCk7XG4gICAgfSlcbiAgICBcbiAgICAgICAgcmV0dXJuIFVzZXI7XG4gICAgfTtcbiAgICBcbmV4cG9ydCBkZWZhdWx0IHVzZXI7XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "user_model.js"
      ],
      "names": [
        "SALT_ROUND",
        "user",
        "sequelize",
        "DataTypes",
        "User",
        "define",
        "username",
        "type",
        "STRING",
        "allowNull",
        "email",
        "unique",
        "validate",
        "notEmpty",
        "isEmail",
        "password",
        "len",
        "associate",
        "models",
        "hasMany",
        "Task",
        "onDelete",
        "List",
        "beforeCreate",
        "bcrypt",
        "hash"
      ],
      "mappings": ";;;;;;;AAAA;;;;;;;;AAEA,IAAMA,UAAU,GAAG,EAAnB;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO,CAACC,SAAD,EAAYC,SAAZ,EAA0B;AACnC,MAAMC,IAAI,GAAGF,SAAS,CAACG,MAAV,CAAiB,MAAjB,EAAyB;AAClCC,IAAAA,QAAQ,EAAE;AACNC,MAAAA,IAAI,EAAEJ,SAAS,CAACK,MADV;AAENC,MAAAA,SAAS,EAAE;AAFL,KADwB;AAMlCC,IAAAA,KAAK,EAAE;AACHH,MAAAA,IAAI,EAAEJ,SAAS,CAACK,MADb;AAEHG,MAAAA,MAAM,EAAE,IAFL;AAGHF,MAAAA,SAAS,EAAE,KAHR;AAIHG,MAAAA,QAAQ,EAAE;AACVC,QAAAA,QAAQ,EAAE,IADA;AAEVC,QAAAA,OAAO,EAAE;AAFC;AAJP,KAN2B;AAgBlCC,IAAAA,QAAQ,EAAE;AACNR,MAAAA,IAAI,EAAEJ,SAAS,CAACK,MADV;AAENC,MAAAA,SAAS,EAAE,KAFL;AAGNG,MAAAA,QAAQ,EAAE;AACVC,QAAAA,QAAQ,EAAE,IADA;AAEVG,QAAAA,GAAG,EAAE,CAAC,CAAD,EAAI,EAAJ;AAFK;AAHJ;AAhBwB,GAAzB,CAAb;;AA0BAZ,EAAAA,IAAI,CAACa,SAAL,GAAiB,UAAAC,MAAM,EAAI;AACvBd,IAAAA,IAAI,CAACe,OAAL,CAAaD,MAAM,CAACE,IAApB,EAA0B;AAAEC,MAAAA,QAAQ,EAAE;AAAZ,KAA1B;AACAjB,IAAAA,IAAI,CAACe,OAAL,CAAaD,MAAM,CAACI,IAApB,EAA0B;AAAED,MAAAA,QAAQ,EAAE;AAAZ,KAA1B;AACH,GAHD;;AAKAjB,EAAAA,IAAI,CAACmB,YAAL;AAAA;AAAA;AAAA;AAAA;AAAA,4BAAmB,iBAAOtB,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACOuB,gBAAOC,IAAP,CAAYxB,IAAI,CAACc,QAAjB,EAA2Bf,UAA3B,CADP;;AAAA;AACfC,cAAAA,IAAI,CAACc,QADU;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAnB;;AAAA;AAAA;AAAA;AAAA;AAII,SAAOX,IAAP;AACH,CArCL;;eAuCeH,I",
      "sourceRoot": "/home/bruno/git_workspace/testing_app_apollo_server/models",
      "sourcesContent": [
        "import bcrypt from 'bcrypt';\n\nconst SALT_ROUND = 10;\n\nconst user = (sequelize, DataTypes) => {\n    const User = sequelize.define('user', {\n        username: {\n            type: DataTypes.STRING,\n            allowNull: false,\n        },\n\n        email: {\n            type: DataTypes.STRING,\n            unique: true,\n            allowNull: false,\n            validate: {\n            notEmpty: true,\n            isEmail: true,\n            },\n        },\n\n        password: {\n            type: DataTypes.STRING,\n            allowNull: false,\n            validate: {\n            notEmpty: true,\n            len: [3, 16],\n            },\n        },\n    });\n    \n    User.associate = models => {\n        User.hasMany(models.Task, { onDelete: 'SET NULL' });\n        User.hasMany(models.List, { onDelete: '' });\n    };\n\n    User.beforeCreate( async (user) => {\n        user.password = await bcrypt.hash(user.password, SALT_ROUND);\n    })\n    \n        return User;\n    };\n    \nexport default user;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1553768538707
  }
}