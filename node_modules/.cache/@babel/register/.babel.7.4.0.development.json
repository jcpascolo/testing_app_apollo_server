{
  "{\"sourceRoot\":\"/home/jcgp/Escritorio/apolloServer1\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/jcgp/Escritorio/apolloServer1\",\"filename\":\"/home/jcgp/Escritorio/apolloServer1/index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/jcgp/Escritorio/apolloServer1\",\"plugins\":[],\"presets\":[]}:7.4.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/jcgp/Escritorio/apolloServer1",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/jcgp/Escritorio/apolloServer1",
      "filename": "/home/jcgp/Escritorio/apolloServer1/index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/jcgp/Escritorio/apolloServer1",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/jcgp/Escritorio/apolloServer1/index.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/home/jcgp/Escritorio/apolloServer1/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/jcgp/Escritorio/apolloServer1",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "//https://knexjs.org/\nconst express = require('express');\n\nconst {\n  ApolloServer,\n  gql\n} = require('apollo-server-express');\n\nconst {\n  Client\n} = require('pg');\n\nconst connectionData = {\n  user: 'postgres',\n  host: '',\n  database: 'tododb',\n  password: 'testing',\n  port: 5432\n};\nconst client = new Client(connectionData);\nclient.connect().then(() => {\n  console.log(\"ConexiÃ³n con base de dato exitosa\");\n}); // Type definitions define the \"shape\" of your data and specify\n// which ways the data can be fetched from the GraphQL server.\n\nconst typeDefs = gql`\n  # Comments in GraphQL are defined with the hash (#) symbol.\n  type Todo {\n    id: ID\n    name: String\n    tareas: [String]\n  }\n\n  # The \"Query\" type is the root of all GraphQL queries.\n  type Query {\n    todo: [Todo]\n    pepe: [Todo]\n  }\n\n`; // Resolvers define the technique for fetching the types in the\n// schema.  We'll retrieve books from the \"books\" array above.\n\nconst resolvers = {\n  Query: {\n    todo: () => {\n      return new Promise((resolve, reject) => {\n        client.query('SELECT * FROM task').then(result => resolve(result.rows));\n      });\n    },\n    pepe: () => {\n      return new Promise((resolve, reject) => {\n        client.query('SELECT tasks FROM task').then(result => resolve(result.rows));\n      });\n    }\n  },\n  Todo: {\n    tareas: todo => {\n      console.log(todo.tasks);\n      todo.tasks.push(\"hola\");\n      return todo.tasks;\n    }\n  }\n};\nconst server = new ApolloServer({\n  typeDefs,\n  resolvers\n});\nconst app = express();\nserver.applyMiddleware({\n  app\n});\napp.listen({\n  port: 4000\n}, () => console.log(`ðŸš€  Server ready at http://localhost:4000${server.graphqlPath}`));\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbImV4cHJlc3MiLCJyZXF1aXJlIiwiQXBvbGxvU2VydmVyIiwiZ3FsIiwiQ2xpZW50IiwiY29ubmVjdGlvbkRhdGEiLCJ1c2VyIiwiaG9zdCIsImRhdGFiYXNlIiwicGFzc3dvcmQiLCJwb3J0IiwiY2xpZW50IiwiY29ubmVjdCIsInRoZW4iLCJjb25zb2xlIiwibG9nIiwidHlwZURlZnMiLCJyZXNvbHZlcnMiLCJRdWVyeSIsInRvZG8iLCJQcm9taXNlIiwicmVzb2x2ZSIsInJlamVjdCIsInF1ZXJ5IiwicmVzdWx0Iiwicm93cyIsInBlcGUiLCJUb2RvIiwidGFyZWFzIiwidGFza3MiLCJwdXNoIiwic2VydmVyIiwiYXBwIiwiYXBwbHlNaWRkbGV3YXJlIiwibGlzdGVuIiwiZ3JhcGhxbFBhdGgiXSwibWFwcGluZ3MiOiJBQUFBO0FBRUEsTUFBTUEsT0FBTyxHQUFHQyxPQUFPLENBQUMsU0FBRCxDQUF2Qjs7QUFFQSxNQUFNO0FBQUVDLEVBQUFBLFlBQUY7QUFBZ0JDLEVBQUFBO0FBQWhCLElBQXdCRixPQUFPLENBQUMsdUJBQUQsQ0FBckM7O0FBRUEsTUFBTTtBQUFFRyxFQUFBQTtBQUFGLElBQWFILE9BQU8sQ0FBQyxJQUFELENBQTFCOztBQUNBLE1BQU1JLGNBQWMsR0FBRztBQUNyQkMsRUFBQUEsSUFBSSxFQUFFLFVBRGU7QUFFckJDLEVBQUFBLElBQUksRUFBRSxFQUZlO0FBR3JCQyxFQUFBQSxRQUFRLEVBQUUsUUFIVztBQUlyQkMsRUFBQUEsUUFBUSxFQUFFLFNBSlc7QUFLckJDLEVBQUFBLElBQUksRUFBRTtBQUxlLENBQXZCO0FBT0EsTUFBTUMsTUFBTSxHQUFHLElBQUlQLE1BQUosQ0FBV0MsY0FBWCxDQUFmO0FBQ0FNLE1BQU0sQ0FBQ0MsT0FBUCxHQUNDQyxJQURELENBQ00sTUFBTTtBQUNSQyxFQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWSxtQ0FBWjtBQUNILENBSEQsRSxDQUtBO0FBQ0E7O0FBQ0EsTUFBTUMsUUFBUSxHQUFHYixHQUFJOzs7Ozs7Ozs7Ozs7OztDQUFyQixDLENBZ0JBO0FBQ0E7O0FBRUEsTUFBTWMsU0FBUyxHQUFHO0FBQ2hCQyxFQUFBQSxLQUFLLEVBQUU7QUFDTEMsSUFBQUEsSUFBSSxFQUFFLE1BQU07QUFDVixhQUFPLElBQUlDLE9BQUosQ0FBWSxDQUFDQyxPQUFELEVBQVVDLE1BQVYsS0FBcUI7QUFDdENYLFFBQUFBLE1BQU0sQ0FBQ1ksS0FBUCxDQUFhLG9CQUFiLEVBQW1DVixJQUFuQyxDQUF5Q1csTUFBRCxJQUFZSCxPQUFPLENBQUNHLE1BQU0sQ0FBQ0MsSUFBUixDQUEzRDtBQUNELE9BRk0sQ0FBUDtBQUdELEtBTEk7QUFPTEMsSUFBQUEsSUFBSSxFQUFFLE1BQU07QUFDVixhQUFPLElBQUlOLE9BQUosQ0FBWSxDQUFDQyxPQUFELEVBQVVDLE1BQVYsS0FBcUI7QUFDdENYLFFBQUFBLE1BQU0sQ0FBQ1ksS0FBUCxDQUFhLHdCQUFiLEVBQXVDVixJQUF2QyxDQUE2Q1csTUFBRCxJQUFZSCxPQUFPLENBQUNHLE1BQU0sQ0FBQ0MsSUFBUixDQUEvRDtBQUNELE9BRk0sQ0FBUDtBQUdEO0FBWEksR0FEUztBQWVoQkUsRUFBQUEsSUFBSSxFQUFFO0FBQ0pDLElBQUFBLE1BQU0sRUFBR1QsSUFBRCxJQUFVO0FBQ2hCTCxNQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWUksSUFBSSxDQUFDVSxLQUFqQjtBQUVBVixNQUFBQSxJQUFJLENBQUNVLEtBQUwsQ0FBV0MsSUFBWCxDQUFnQixNQUFoQjtBQUNBLGFBQU9YLElBQUksQ0FBQ1UsS0FBWjtBQUNEO0FBTkc7QUFmVSxDQUFsQjtBQXlCQSxNQUFNRSxNQUFNLEdBQUcsSUFBSTdCLFlBQUosQ0FBaUI7QUFBRWMsRUFBQUEsUUFBRjtBQUFZQyxFQUFBQTtBQUFaLENBQWpCLENBQWY7QUFFQSxNQUFNZSxHQUFHLEdBQUdoQyxPQUFPLEVBQW5CO0FBQ0ErQixNQUFNLENBQUNFLGVBQVAsQ0FBdUI7QUFBRUQsRUFBQUE7QUFBRixDQUF2QjtBQUVBQSxHQUFHLENBQUNFLE1BQUosQ0FBVztBQUFDeEIsRUFBQUEsSUFBSSxFQUFDO0FBQU4sQ0FBWCxFQUNJLE1BQU1JLE9BQU8sQ0FBQ0MsR0FBUixDQUFhLDRDQUEyQ2dCLE1BQU0sQ0FBQ0ksV0FBWSxFQUEzRSxDQURWIiwic291cmNlUm9vdCI6Ii9ob21lL2pjZ3AvRXNjcml0b3Jpby9hcG9sbG9TZXJ2ZXIxIiwic291cmNlc0NvbnRlbnQiOlsiLy9odHRwczovL2tuZXhqcy5vcmcvXG5cbmNvbnN0IGV4cHJlc3MgPSByZXF1aXJlKCdleHByZXNzJylcblxuY29uc3QgeyBBcG9sbG9TZXJ2ZXIsIGdxbCB9ID0gcmVxdWlyZSgnYXBvbGxvLXNlcnZlci1leHByZXNzJyk7XG5cbmNvbnN0IHsgQ2xpZW50IH0gPSByZXF1aXJlKCdwZycpXG5jb25zdCBjb25uZWN0aW9uRGF0YSA9IHtcbiAgdXNlcjogJ3Bvc3RncmVzJyxcbiAgaG9zdDogJycsXG4gIGRhdGFiYXNlOiAndG9kb2RiJyxcbiAgcGFzc3dvcmQ6ICd0ZXN0aW5nJyxcbiAgcG9ydDogNTQzMixcbn1cbmNvbnN0IGNsaWVudCA9IG5ldyBDbGllbnQoY29ubmVjdGlvbkRhdGEpO1xuY2xpZW50LmNvbm5lY3QoKVxuLnRoZW4oKCkgPT4ge1xuICAgIGNvbnNvbGUubG9nKFwiQ29uZXhpw7NuIGNvbiBiYXNlIGRlIGRhdG8gZXhpdG9zYVwiKTtcbn0pO1xuXG4vLyBUeXBlIGRlZmluaXRpb25zIGRlZmluZSB0aGUgXCJzaGFwZVwiIG9mIHlvdXIgZGF0YSBhbmQgc3BlY2lmeVxuLy8gd2hpY2ggd2F5cyB0aGUgZGF0YSBjYW4gYmUgZmV0Y2hlZCBmcm9tIHRoZSBHcmFwaFFMIHNlcnZlci5cbmNvbnN0IHR5cGVEZWZzID0gZ3FsYFxuICAjIENvbW1lbnRzIGluIEdyYXBoUUwgYXJlIGRlZmluZWQgd2l0aCB0aGUgaGFzaCAoIykgc3ltYm9sLlxuICB0eXBlIFRvZG8ge1xuICAgIGlkOiBJRFxuICAgIG5hbWU6IFN0cmluZ1xuICAgIHRhcmVhczogW1N0cmluZ11cbiAgfVxuXG4gICMgVGhlIFwiUXVlcnlcIiB0eXBlIGlzIHRoZSByb290IG9mIGFsbCBHcmFwaFFMIHF1ZXJpZXMuXG4gIHR5cGUgUXVlcnkge1xuICAgIHRvZG86IFtUb2RvXVxuICAgIHBlcGU6IFtUb2RvXVxuICB9XG5cbmA7XG5cbi8vIFJlc29sdmVycyBkZWZpbmUgdGhlIHRlY2huaXF1ZSBmb3IgZmV0Y2hpbmcgdGhlIHR5cGVzIGluIHRoZVxuLy8gc2NoZW1hLiAgV2UnbGwgcmV0cmlldmUgYm9va3MgZnJvbSB0aGUgXCJib29rc1wiIGFycmF5IGFib3ZlLlxuXG5jb25zdCByZXNvbHZlcnMgPSB7XG4gIFF1ZXJ5OiB7XG4gICAgdG9kbzogKCkgPT4ge1xuICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcbiAgICAgICAgY2xpZW50LnF1ZXJ5KCdTRUxFQ1QgKiBGUk9NIHRhc2snKS50aGVuKChyZXN1bHQpID0+IHJlc29sdmUocmVzdWx0LnJvd3MpKVxuICAgICAgfSlcbiAgICB9LFxuXG4gICAgcGVwZTogKCkgPT4ge1xuICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcbiAgICAgICAgY2xpZW50LnF1ZXJ5KCdTRUxFQ1QgdGFza3MgRlJPTSB0YXNrJykudGhlbigocmVzdWx0KSA9PiByZXNvbHZlKHJlc3VsdC5yb3dzKSlcbiAgICAgIH0pXG4gICAgfVxuICB9LFxuXG4gIFRvZG86IHtcbiAgICB0YXJlYXM6ICh0b2RvKSA9PiB7XG4gICAgICBjb25zb2xlLmxvZyh0b2RvLnRhc2tzKVxuICAgICAgXG4gICAgICB0b2RvLnRhc2tzLnB1c2goXCJob2xhXCIpXG4gICAgICByZXR1cm4gdG9kby50YXNrc1xuICAgIH1cbiAgfSxcbn07XG5cbmNvbnN0IHNlcnZlciA9IG5ldyBBcG9sbG9TZXJ2ZXIoeyB0eXBlRGVmcywgcmVzb2x2ZXJzIH0pO1xuXG5jb25zdCBhcHAgPSBleHByZXNzKCk7XG5zZXJ2ZXIuYXBwbHlNaWRkbGV3YXJlKHsgYXBwIH0pO1xuXG5hcHAubGlzdGVuKHtwb3J0OjQwMDB9LCBcbiAgICAoKSA9PiBjb25zb2xlLmxvZyhg8J+agCAgU2VydmVyIHJlYWR5IGF0IGh0dHA6Ly9sb2NhbGhvc3Q6NDAwMCR7c2VydmVyLmdyYXBocWxQYXRofWApXG4pO1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "express",
        "require",
        "ApolloServer",
        "gql",
        "Client",
        "connectionData",
        "user",
        "host",
        "database",
        "password",
        "port",
        "client",
        "connect",
        "then",
        "console",
        "log",
        "typeDefs",
        "resolvers",
        "Query",
        "todo",
        "Promise",
        "resolve",
        "reject",
        "query",
        "result",
        "rows",
        "pepe",
        "Todo",
        "tareas",
        "tasks",
        "push",
        "server",
        "app",
        "applyMiddleware",
        "listen",
        "graphqlPath"
      ],
      "mappings": "AAAA;AAEA,MAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AAEA,MAAM;AAAEC,EAAAA,YAAF;AAAgBC,EAAAA;AAAhB,IAAwBF,OAAO,CAAC,uBAAD,CAArC;;AAEA,MAAM;AAAEG,EAAAA;AAAF,IAAaH,OAAO,CAAC,IAAD,CAA1B;;AACA,MAAMI,cAAc,GAAG;AACrBC,EAAAA,IAAI,EAAE,UADe;AAErBC,EAAAA,IAAI,EAAE,EAFe;AAGrBC,EAAAA,QAAQ,EAAE,QAHW;AAIrBC,EAAAA,QAAQ,EAAE,SAJW;AAKrBC,EAAAA,IAAI,EAAE;AALe,CAAvB;AAOA,MAAMC,MAAM,GAAG,IAAIP,MAAJ,CAAWC,cAAX,CAAf;AACAM,MAAM,CAACC,OAAP,GACCC,IADD,CACM,MAAM;AACRC,EAAAA,OAAO,CAACC,GAAR,CAAY,mCAAZ;AACH,CAHD,E,CAKA;AACA;;AACA,MAAMC,QAAQ,GAAGb,GAAI;;;;;;;;;;;;;;CAArB,C,CAgBA;AACA;;AAEA,MAAMc,SAAS,GAAG;AAChBC,EAAAA,KAAK,EAAE;AACLC,IAAAA,IAAI,EAAE,MAAM;AACV,aAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtCX,QAAAA,MAAM,CAACY,KAAP,CAAa,oBAAb,EAAmCV,IAAnC,CAAyCW,MAAD,IAAYH,OAAO,CAACG,MAAM,CAACC,IAAR,CAA3D;AACD,OAFM,CAAP;AAGD,KALI;AAOLC,IAAAA,IAAI,EAAE,MAAM;AACV,aAAO,IAAIN,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtCX,QAAAA,MAAM,CAACY,KAAP,CAAa,wBAAb,EAAuCV,IAAvC,CAA6CW,MAAD,IAAYH,OAAO,CAACG,MAAM,CAACC,IAAR,CAA/D;AACD,OAFM,CAAP;AAGD;AAXI,GADS;AAehBE,EAAAA,IAAI,EAAE;AACJC,IAAAA,MAAM,EAAGT,IAAD,IAAU;AAChBL,MAAAA,OAAO,CAACC,GAAR,CAAYI,IAAI,CAACU,KAAjB;AAEAV,MAAAA,IAAI,CAACU,KAAL,CAAWC,IAAX,CAAgB,MAAhB;AACA,aAAOX,IAAI,CAACU,KAAZ;AACD;AANG;AAfU,CAAlB;AAyBA,MAAME,MAAM,GAAG,IAAI7B,YAAJ,CAAiB;AAAEc,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAAjB,CAAf;AAEA,MAAMe,GAAG,GAAGhC,OAAO,EAAnB;AACA+B,MAAM,CAACE,eAAP,CAAuB;AAAED,EAAAA;AAAF,CAAvB;AAEAA,GAAG,CAACE,MAAJ,CAAW;AAACxB,EAAAA,IAAI,EAAC;AAAN,CAAX,EACI,MAAMI,OAAO,CAACC,GAAR,CAAa,4CAA2CgB,MAAM,CAACI,WAAY,EAA3E,CADV",
      "sourceRoot": "/home/jcgp/Escritorio/apolloServer1",
      "sourcesContent": [
        "//https://knexjs.org/\n\nconst express = require('express')\n\nconst { ApolloServer, gql } = require('apollo-server-express');\n\nconst { Client } = require('pg')\nconst connectionData = {\n  user: 'postgres',\n  host: '',\n  database: 'tododb',\n  password: 'testing',\n  port: 5432,\n}\nconst client = new Client(connectionData);\nclient.connect()\n.then(() => {\n    console.log(\"ConexiÃ³n con base de dato exitosa\");\n});\n\n// Type definitions define the \"shape\" of your data and specify\n// which ways the data can be fetched from the GraphQL server.\nconst typeDefs = gql`\n  # Comments in GraphQL are defined with the hash (#) symbol.\n  type Todo {\n    id: ID\n    name: String\n    tareas: [String]\n  }\n\n  # The \"Query\" type is the root of all GraphQL queries.\n  type Query {\n    todo: [Todo]\n    pepe: [Todo]\n  }\n\n`;\n\n// Resolvers define the technique for fetching the types in the\n// schema.  We'll retrieve books from the \"books\" array above.\n\nconst resolvers = {\n  Query: {\n    todo: () => {\n      return new Promise((resolve, reject) => {\n        client.query('SELECT * FROM task').then((result) => resolve(result.rows))\n      })\n    },\n\n    pepe: () => {\n      return new Promise((resolve, reject) => {\n        client.query('SELECT tasks FROM task').then((result) => resolve(result.rows))\n      })\n    }\n  },\n\n  Todo: {\n    tareas: (todo) => {\n      console.log(todo.tasks)\n      \n      todo.tasks.push(\"hola\")\n      return todo.tasks\n    }\n  },\n};\n\nconst server = new ApolloServer({ typeDefs, resolvers });\n\nconst app = express();\nserver.applyMiddleware({ app });\n\napp.listen({port:4000}, \n    () => console.log(`ðŸš€  Server ready at http://localhost:4000${server.graphqlPath}`)\n);\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1553074468500
  },
  "{\"sourceRoot\":\"/home/jcgp/Escritorio/apolloServer1\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/jcgp/Escritorio/apolloServer1\",\"filename\":\"/home/jcgp/Escritorio/apolloServer1/index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/jcgp/Escritorio/apolloServer1\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/jcgp/Escritorio/apolloServer1",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/jcgp/Escritorio/apolloServer1",
      "filename": "/home/jcgp/Escritorio/apolloServer1/index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/jcgp/Escritorio/apolloServer1",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/jcgp/Escritorio/apolloServer1/index.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/home/jcgp/Escritorio/apolloServer1/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/jcgp/Escritorio/apolloServer1",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _http = _interopRequireDefault(require(\"http\"));\n\nvar _schemas = _interopRequireDefault(require(\"./schemas/schemas\"));\n\nvar _resolvers = _interopRequireDefault(require(\"./resolvers/resolvers\"));\n\nvar _models = _interopRequireWildcard(require(\"./models/models\"));\n\nvar _jsonwebtoken = _interopRequireDefault(require(\"jsonwebtoken\"));\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n//https://knexjs.org/\n//docker exec -it postgres psql -U postgres tododb\nvar express = require('express');\n\nvar _require = require('apollo-server-express'),\n    ApolloServer = _require.ApolloServer,\n    AuthenticationError = _require.AuthenticationError;\n\nvar app = express();\nvar JWT_KEY = 'supersecret123';\nvar EXPIRE_TOKEN = \"7d\";\n\nvar authentication =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee(reqHeader) {\n    var token;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (reqHeader.req == undefined) {\n              token = reqHeader.connection.context['x-token'];\n            } else {\n              token = reqHeader.req.headers['x-token'];\n            }\n\n            if (!token) {\n              _context.next = 13;\n              break;\n            }\n\n            _context.prev = 2;\n            _context.next = 5;\n            return _jsonwebtoken.default.verify(token, JWT_KEY);\n\n          case 5:\n            return _context.abrupt(\"return\", _context.sent);\n\n          case 8:\n            _context.prev = 8;\n            _context.t0 = _context[\"catch\"](2);\n            return _context.abrupt(\"return\", false);\n\n          case 11:\n            _context.next = 14;\n            break;\n\n          case 13:\n            return _context.abrupt(\"return\", false);\n\n          case 14:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[2, 8]]);\n  }));\n\n  return function authentication(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nvar server = new ApolloServer({\n  typeDefs: _schemas.default,\n  resolvers: _resolvers.default,\n\n  /*subscriptions: {\n    onConnect: async (reqHeader) => {\n      return {auth: await authentication(reqHeader)}\n    }\n  },\n  */\n  context: function () {\n    var _context2 = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee2(reqHeader) {\n      return regeneratorRuntime.wrap(function _callee2$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.t0 = _models.default;\n              _context3.t1 = JWT_KEY;\n              _context3.t2 = EXPIRE_TOKEN;\n              _context3.next = 5;\n              return authentication(reqHeader);\n\n            case 5:\n              _context3.t3 = _context3.sent;\n              return _context3.abrupt(\"return\", {\n                models: _context3.t0,\n                JWT_KEY: _context3.t1,\n                EXPIRE_TOKEN: _context3.t2,\n                auth: _context3.t3\n              });\n\n            case 7:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    function context(_x2) {\n      return _context2.apply(this, arguments);\n    }\n\n    return context;\n  }()\n});\nserver.applyMiddleware({\n  app: app\n});\n\nvar httpServer = _http.default.createServer(app);\n\nserver.installSubscriptionHandlers(httpServer);\n\n_models.sequelize.sync().then(\n/*#__PURE__*/\n_asyncToGenerator(\n/*#__PURE__*/\nregeneratorRuntime.mark(function _callee3() {\n  return regeneratorRuntime.wrap(function _callee3$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          httpServer.listen({\n            port: 4000\n          }, function () {\n            console.log('Apollo Server on http://localhost:4000/graphql');\n          });\n          /*\n            app.listen({port:4000}, \n              () => console.log(`ðŸš€  Server ready at http://localhost:4000${server.graphqlPath}`)\n            );\n          */\n\n        case 1:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _callee3);\n})));\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbImV4cHJlc3MiLCJyZXF1aXJlIiwiQXBvbGxvU2VydmVyIiwiQXV0aGVudGljYXRpb25FcnJvciIsImFwcCIsIkpXVF9LRVkiLCJFWFBJUkVfVE9LRU4iLCJhdXRoZW50aWNhdGlvbiIsInJlcUhlYWRlciIsInJlcSIsInVuZGVmaW5lZCIsInRva2VuIiwiY29ubmVjdGlvbiIsImNvbnRleHQiLCJoZWFkZXJzIiwiand0IiwidmVyaWZ5Iiwic2VydmVyIiwidHlwZURlZnMiLCJzY2hlbWEiLCJyZXNvbHZlcnMiLCJtb2RlbHMiLCJhdXRoIiwiYXBwbHlNaWRkbGV3YXJlIiwiaHR0cFNlcnZlciIsImh0dHAiLCJjcmVhdGVTZXJ2ZXIiLCJpbnN0YWxsU3Vic2NyaXB0aW9uSGFuZGxlcnMiLCJzZXF1ZWxpemUiLCJzeW5jIiwidGhlbiIsImxpc3RlbiIsInBvcnQiLCJjb25zb2xlIiwibG9nIl0sIm1hcHBpbmdzIjoiOztBQU1BOztBQUNBOztBQUNBOztBQUNBOztBQUNBOzs7Ozs7Ozs7O0FBVkE7QUFDQTtBQUVBLElBQU1BLE9BQU8sR0FBR0MsT0FBTyxDQUFDLFNBQUQsQ0FBdkI7O2VBQzhDQSxPQUFPLENBQUMsdUJBQUQsQztJQUE3Q0MsWSxZQUFBQSxZO0lBQWNDLG1CLFlBQUFBLG1COztBQVN0QixJQUFNQyxHQUFHLEdBQUdKLE9BQU8sRUFBbkI7QUFFQSxJQUFNSyxPQUFPLEdBQUcsZ0JBQWhCO0FBQ0EsSUFBTUMsWUFBWSxHQUFHLElBQXJCOztBQUdBLElBQU1DLGNBQWM7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLDBCQUFHLGlCQUFPQyxTQUFQO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUdyQixnQkFBR0EsU0FBUyxDQUFDQyxHQUFWLElBQWlCQyxTQUFwQixFQUErQjtBQUM3QkMsY0FBQUEsS0FBSyxHQUFHSCxTQUFTLENBQUNJLFVBQVYsQ0FBcUJDLE9BQXJCLENBQTZCLFNBQTdCLENBQVI7QUFDRCxhQUZELE1BR0s7QUFDSEYsY0FBQUEsS0FBSyxHQUFHSCxTQUFTLENBQUNDLEdBQVYsQ0FBY0ssT0FBZCxDQUFzQixTQUF0QixDQUFSO0FBQ0Q7O0FBUm9CLGlCQVVsQkgsS0FWa0I7QUFBQTtBQUFBO0FBQUE7O0FBQUE7QUFBQTtBQUFBLG1CQVlKSSxzQkFBSUMsTUFBSixDQUFXTCxLQUFYLEVBQWtCTixPQUFsQixDQVpJOztBQUFBO0FBQUE7O0FBQUE7QUFBQTtBQUFBO0FBQUEsNkNBZVYsS0FmVTs7QUFBQTtBQUFBO0FBQUE7O0FBQUE7QUFBQSw2Q0FvQlosS0FwQlk7O0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsR0FBSDs7QUFBQSxrQkFBZEUsY0FBYztBQUFBO0FBQUE7QUFBQSxHQUFwQjs7QUF5QkEsSUFBTVUsTUFBTSxHQUFHLElBQUlmLFlBQUosQ0FBaUI7QUFDOUJnQixFQUFBQSxRQUFRLEVBQUVDLGdCQURvQjtBQUc5QkMsRUFBQUEsU0FBUyxFQUFUQSxrQkFIOEI7O0FBSzlCOzs7Ozs7QUFPQVAsRUFBQUEsT0FBTztBQUFBO0FBQUE7QUFBQSw0QkFBRSxrQkFBT0wsU0FBUDtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsNkJBRUxhLGVBRks7QUFBQSw2QkFHTGhCLE9BSEs7QUFBQSw2QkFJTEMsWUFKSztBQUFBO0FBQUEscUJBS09DLGNBQWMsQ0FBQ0MsU0FBRCxDQUxyQjs7QUFBQTtBQUFBO0FBQUE7QUFFTGEsZ0JBQUFBLE1BRks7QUFHTGhCLGdCQUFBQSxPQUhLO0FBSUxDLGdCQUFBQSxZQUpLO0FBS0xnQixnQkFBQUEsSUFMSztBQUFBOztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLEtBQUY7O0FBQUE7QUFBQTtBQUFBOztBQUFBO0FBQUE7QUFadUIsQ0FBakIsQ0FBZjtBQXFCQUwsTUFBTSxDQUFDTSxlQUFQLENBQXVCO0FBQUVuQixFQUFBQSxHQUFHLEVBQUhBO0FBQUYsQ0FBdkI7O0FBRUEsSUFBTW9CLFVBQVUsR0FBR0MsY0FBS0MsWUFBTCxDQUFrQnRCLEdBQWxCLENBQW5COztBQUNBYSxNQUFNLENBQUNVLDJCQUFQLENBQW1DSCxVQUFuQzs7QUFFQUksa0JBQVVDLElBQVYsR0FDQ0MsSUFERDtBQUFBO0FBQUE7QUFBQTtBQUFBLHdCQUNPO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFFTE4sVUFBQUEsVUFBVSxDQUFDTyxNQUFYLENBQWtCO0FBQUVDLFlBQUFBLElBQUksRUFBRTtBQUFSLFdBQWxCLEVBQWtDLFlBQU07QUFDdENDLFlBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLGdEQUFaO0FBQ0QsV0FGRDtBQUdGOzs7Ozs7QUFMTztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxDQURQIiwic291cmNlUm9vdCI6Ii9ob21lL2pjZ3AvRXNjcml0b3Jpby9hcG9sbG9TZXJ2ZXIxIiwic291cmNlc0NvbnRlbnQiOlsiLy9odHRwczovL2tuZXhqcy5vcmcvXG4vL2RvY2tlciBleGVjIC1pdCBwb3N0Z3JlcyBwc3FsIC1VIHBvc3RncmVzIHRvZG9kYlxuXG5jb25zdCBleHByZXNzID0gcmVxdWlyZSgnZXhwcmVzcycpXG5jb25zdCB7IEFwb2xsb1NlcnZlciwgQXV0aGVudGljYXRpb25FcnJvciB9ID0gcmVxdWlyZSgnYXBvbGxvLXNlcnZlci1leHByZXNzJyk7XG5cbmltcG9ydCBodHRwIGZyb20gJ2h0dHAnO1xuaW1wb3J0IHNjaGVtYSBmcm9tICcuL3NjaGVtYXMvc2NoZW1hcyc7XG5pbXBvcnQgcmVzb2x2ZXJzIGZyb20gJy4vcmVzb2x2ZXJzL3Jlc29sdmVycyc7XG5pbXBvcnQgbW9kZWxzLCB7IHNlcXVlbGl6ZSB9IGZyb20gJy4vbW9kZWxzL21vZGVscyc7XG5pbXBvcnQgand0IGZyb20gJ2pzb253ZWJ0b2tlbic7XG5cblxuY29uc3QgYXBwID0gZXhwcmVzcygpO1xuXG5jb25zdCBKV1RfS0VZID0gJ3N1cGVyc2VjcmV0MTIzJztcbmNvbnN0IEVYUElSRV9UT0tFTiA9IFwiN2RcIjtcblxuXG5jb25zdCBhdXRoZW50aWNhdGlvbiA9IGFzeW5jIChyZXFIZWFkZXIpID0+IHtcbiAgbGV0IHRva2VuO1xuXG4gIGlmKHJlcUhlYWRlci5yZXEgPT0gdW5kZWZpbmVkKSB7XG4gICAgdG9rZW4gPSByZXFIZWFkZXIuY29ubmVjdGlvbi5jb250ZXh0Wyd4LXRva2VuJ11cbiAgfVxuICBlbHNlIHtcbiAgICB0b2tlbiA9IHJlcUhlYWRlci5yZXEuaGVhZGVyc1sneC10b2tlbiddO1xuICB9XG4gIFxuICBpZih0b2tlbil7XG4gICAgdHJ5e1xuICAgICAgcmV0dXJuIGF3YWl0IGp3dC52ZXJpZnkodG9rZW4sIEpXVF9LRVkpO1xuICAgIH1cbiAgICBjYXRjaChlcnIpe1xuICAgICAgcmV0dXJuIGZhbHNlXG4gICAgICAvL3Rocm93IG5ldyBBdXRoZW50aWNhdGlvbkVycm9yKCdVc3VhcmlvIG5vIGF1dGVudGljYWRvLCBwb3IgZmF2b3IgbG9nZ2Vlc2UnKTtcbiAgICB9XG4gIH1cbiAgZWxzZXtcbiAgICByZXR1cm4gZmFsc2U7XG4gICAgLy90aHJvdyBuZXcgQXV0aGVudGljYXRpb25FcnJvcignVXN1YXJpbyBubyBhdXRlbnRpY2FkbycpXG4gIH1cbn1cblxuY29uc3Qgc2VydmVyID0gbmV3IEFwb2xsb1NlcnZlcih7IFxuICB0eXBlRGVmczogc2NoZW1hLFxuXG4gIHJlc29sdmVycyxcblxuICAvKnN1YnNjcmlwdGlvbnM6IHtcbiAgICBvbkNvbm5lY3Q6IGFzeW5jIChyZXFIZWFkZXIpID0+IHtcbiAgICAgIHJldHVybiB7YXV0aDogYXdhaXQgYXV0aGVudGljYXRpb24ocmVxSGVhZGVyKX1cbiAgICB9XG4gIH0sXG4gICovXG5cbiAgY29udGV4dDogYXN5bmMgKHJlcUhlYWRlcikgPT4ge1xuICAgIHJldHVybiB7XG4gICAgICBtb2RlbHMsXG4gICAgICBKV1RfS0VZLFxuICAgICAgRVhQSVJFX1RPS0VOLFxuICAgICAgYXV0aDogYXdhaXQgYXV0aGVudGljYXRpb24ocmVxSGVhZGVyKSxcbiAgICB9XG4gIH0sIFxufSk7XG5zZXJ2ZXIuYXBwbHlNaWRkbGV3YXJlKHsgYXBwIH0pO1xuXG5jb25zdCBodHRwU2VydmVyID0gaHR0cC5jcmVhdGVTZXJ2ZXIoYXBwKTtcbnNlcnZlci5pbnN0YWxsU3Vic2NyaXB0aW9uSGFuZGxlcnMoaHR0cFNlcnZlcik7XG5cbnNlcXVlbGl6ZS5zeW5jKClcbi50aGVuKCBhc3luYyAoKSA9PiB7XG5cbiAgaHR0cFNlcnZlci5saXN0ZW4oeyBwb3J0OiA0MDAwIH0sICgpID0+IHtcbiAgICBjb25zb2xlLmxvZygnQXBvbGxvIFNlcnZlciBvbiBodHRwOi8vbG9jYWxob3N0OjQwMDAvZ3JhcGhxbCcpO1xuICB9KTtcbi8qXG4gIGFwcC5saXN0ZW4oe3BvcnQ6NDAwMH0sIFxuICAgICgpID0+IGNvbnNvbGUubG9nKGDwn5qAICBTZXJ2ZXIgcmVhZHkgYXQgaHR0cDovL2xvY2FsaG9zdDo0MDAwJHtzZXJ2ZXIuZ3JhcGhxbFBhdGh9YClcbiAgKTtcbiovXG59KVxuXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "express",
        "require",
        "ApolloServer",
        "AuthenticationError",
        "app",
        "JWT_KEY",
        "EXPIRE_TOKEN",
        "authentication",
        "reqHeader",
        "req",
        "undefined",
        "token",
        "connection",
        "context",
        "headers",
        "jwt",
        "verify",
        "server",
        "typeDefs",
        "schema",
        "resolvers",
        "models",
        "auth",
        "applyMiddleware",
        "httpServer",
        "http",
        "createServer",
        "installSubscriptionHandlers",
        "sequelize",
        "sync",
        "then",
        "listen",
        "port",
        "console",
        "log"
      ],
      "mappings": ";;AAMA;;AACA;;AACA;;AACA;;AACA;;;;;;;;;;AAVA;AACA;AAEA,IAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;eAC8CA,OAAO,CAAC,uBAAD,C;IAA7CC,Y,YAAAA,Y;IAAcC,mB,YAAAA,mB;;AAStB,IAAMC,GAAG,GAAGJ,OAAO,EAAnB;AAEA,IAAMK,OAAO,GAAG,gBAAhB;AACA,IAAMC,YAAY,GAAG,IAArB;;AAGA,IAAMC,cAAc;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAG,iBAAOC,SAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAGrB,gBAAGA,SAAS,CAACC,GAAV,IAAiBC,SAApB,EAA+B;AAC7BC,cAAAA,KAAK,GAAGH,SAAS,CAACI,UAAV,CAAqBC,OAArB,CAA6B,SAA7B,CAAR;AACD,aAFD,MAGK;AACHF,cAAAA,KAAK,GAAGH,SAAS,CAACC,GAAV,CAAcK,OAAd,CAAsB,SAAtB,CAAR;AACD;;AARoB,iBAUlBH,KAVkB;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,mBAYJI,sBAAIC,MAAJ,CAAWL,KAAX,EAAkBN,OAAlB,CAZI;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA,6CAeV,KAfU;;AAAA;AAAA;AAAA;;AAAA;AAAA,6CAoBZ,KApBY;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAdE,cAAc;AAAA;AAAA;AAAA,GAApB;;AAyBA,IAAMU,MAAM,GAAG,IAAIf,YAAJ,CAAiB;AAC9BgB,EAAAA,QAAQ,EAAEC,gBADoB;AAG9BC,EAAAA,SAAS,EAATA,kBAH8B;;AAK9B;;;;;;AAOAP,EAAAA,OAAO;AAAA;AAAA;AAAA,4BAAE,kBAAOL,SAAP;AAAA;AAAA;AAAA;AAAA;AAAA,6BAELa,eAFK;AAAA,6BAGLhB,OAHK;AAAA,6BAILC,YAJK;AAAA;AAAA,qBAKOC,cAAc,CAACC,SAAD,CALrB;;AAAA;AAAA;AAAA;AAELa,gBAAAA,MAFK;AAGLhB,gBAAAA,OAHK;AAILC,gBAAAA,YAJK;AAKLgB,gBAAAA,IALK;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAZuB,CAAjB,CAAf;AAqBAL,MAAM,CAACM,eAAP,CAAuB;AAAEnB,EAAAA,GAAG,EAAHA;AAAF,CAAvB;;AAEA,IAAMoB,UAAU,GAAGC,cAAKC,YAAL,CAAkBtB,GAAlB,CAAnB;;AACAa,MAAM,CAACU,2BAAP,CAAmCH,UAAnC;;AAEAI,kBAAUC,IAAV,GACCC,IADD;AAAA;AAAA;AAAA;AAAA,wBACO;AAAA;AAAA;AAAA;AAAA;AAELN,UAAAA,UAAU,CAACO,MAAX,CAAkB;AAAEC,YAAAA,IAAI,EAAE;AAAR,WAAlB,EAAkC,YAAM;AACtCC,YAAAA,OAAO,CAACC,GAAR,CAAY,gDAAZ;AACD,WAFD;AAGF;;;;;;AALO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CADP",
      "sourceRoot": "/home/jcgp/Escritorio/apolloServer1",
      "sourcesContent": [
        "//https://knexjs.org/\n//docker exec -it postgres psql -U postgres tododb\n\nconst express = require('express')\nconst { ApolloServer, AuthenticationError } = require('apollo-server-express');\n\nimport http from 'http';\nimport schema from './schemas/schemas';\nimport resolvers from './resolvers/resolvers';\nimport models, { sequelize } from './models/models';\nimport jwt from 'jsonwebtoken';\n\n\nconst app = express();\n\nconst JWT_KEY = 'supersecret123';\nconst EXPIRE_TOKEN = \"7d\";\n\n\nconst authentication = async (reqHeader) => {\n  let token;\n\n  if(reqHeader.req == undefined) {\n    token = reqHeader.connection.context['x-token']\n  }\n  else {\n    token = reqHeader.req.headers['x-token'];\n  }\n  \n  if(token){\n    try{\n      return await jwt.verify(token, JWT_KEY);\n    }\n    catch(err){\n      return false\n      //throw new AuthenticationError('Usuario no autenticado, por favor loggeese');\n    }\n  }\n  else{\n    return false;\n    //throw new AuthenticationError('Usuario no autenticado')\n  }\n}\n\nconst server = new ApolloServer({ \n  typeDefs: schema,\n\n  resolvers,\n\n  /*subscriptions: {\n    onConnect: async (reqHeader) => {\n      return {auth: await authentication(reqHeader)}\n    }\n  },\n  */\n\n  context: async (reqHeader) => {\n    return {\n      models,\n      JWT_KEY,\n      EXPIRE_TOKEN,\n      auth: await authentication(reqHeader),\n    }\n  }, \n});\nserver.applyMiddleware({ app });\n\nconst httpServer = http.createServer(app);\nserver.installSubscriptionHandlers(httpServer);\n\nsequelize.sync()\n.then( async () => {\n\n  httpServer.listen({ port: 4000 }, () => {\n    console.log('Apollo Server on http://localhost:4000/graphql');\n  });\n/*\n  app.listen({port:4000}, \n    () => console.log(`ðŸš€  Server ready at http://localhost:4000${server.graphqlPath}`)\n  );\n*/\n})\n\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1553776075666
  },
  "{\"sourceRoot\":\"/home/jcgp/Escritorio/apolloServer1\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/jcgp/Escritorio/apolloServer1\",\"filename\":\"/home/jcgp/Escritorio/apolloServer1/schema.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/jcgp/Escritorio/apolloServer1\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/jcgp/Escritorio/apolloServer1",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/jcgp/Escritorio/apolloServer1",
      "filename": "/home/jcgp/Escritorio/apolloServer1/schema.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/jcgp/Escritorio/apolloServer1",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/jcgp/Escritorio/apolloServer1/schema.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/home/jcgp/Escritorio/apolloServer1/schema.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/jcgp/Escritorio/apolloServer1",
        "sourceFileName": "schema.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _apolloServerExpress = require(\"apollo-server-express\");\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    # Comments in GraphQL are defined with the hash (#) symbol.\\n    type Todo {\\n        id: ID\\n        name: String\\n        tareas: [String]\\n    }\\n\\n    # The \\\"Query\\\" type is the root of all GraphQL queries.\\n    type Query {\\n        todo: [Todo]\\n    }\\n\\n    type Mutation {\\n        addTask(task: String!, id: ID!): [String!]\\n    }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }\n\nvar _default = (0, _apolloServerExpress.gql)(_templateObject());\n\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNjaGVtYS5qcyJdLCJuYW1lcyI6WyJncWwiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFJQTs7Ozs7Ozs7Ozs7Ozs7bUJBRWVBLHdCIiwic291cmNlUm9vdCI6Ii9ob21lL2pjZ3AvRXNjcml0b3Jpby9hcG9sbG9TZXJ2ZXIxIiwic291cmNlc0NvbnRlbnQiOlsiXG4vLyBUeXBlIGRlZmluaXRpb25zIGRlZmluZSB0aGUgXCJzaGFwZVwiIG9mIHlvdXIgZGF0YSBhbmQgc3BlY2lmeVxuLy8gd2hpY2ggd2F5cyB0aGUgZGF0YSBjYW4gYmUgZmV0Y2hlZCBmcm9tIHRoZSBHcmFwaFFMIHNlcnZlci5cblxuaW1wb3J0IHsgZ3FsIH0gZnJvbSAnYXBvbGxvLXNlcnZlci1leHByZXNzJ1xuXG5leHBvcnQgZGVmYXVsdCBncWxgXG4gICAgIyBDb21tZW50cyBpbiBHcmFwaFFMIGFyZSBkZWZpbmVkIHdpdGggdGhlIGhhc2ggKCMpIHN5bWJvbC5cbiAgICB0eXBlIFRvZG8ge1xuICAgICAgICBpZDogSURcbiAgICAgICAgbmFtZTogU3RyaW5nXG4gICAgICAgIHRhcmVhczogW1N0cmluZ11cbiAgICB9XG5cbiAgICAjIFRoZSBcIlF1ZXJ5XCIgdHlwZSBpcyB0aGUgcm9vdCBvZiBhbGwgR3JhcGhRTCBxdWVyaWVzLlxuICAgIHR5cGUgUXVlcnkge1xuICAgICAgICB0b2RvOiBbVG9kb11cbiAgICB9XG5cbiAgICB0eXBlIE11dGF0aW9uIHtcbiAgICAgICAgYWRkVGFzayh0YXNrOiBTdHJpbmchLCBpZDogSUQhKTogW1N0cmluZyFdXG4gICAgfVxuYDtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "schema.js"
      ],
      "names": [
        "gql"
      ],
      "mappings": ";;;;;;;AAIA;;;;;;;;;;;;;;mBAEeA,wB",
      "sourceRoot": "/home/jcgp/Escritorio/apolloServer1",
      "sourcesContent": [
        "\n// Type definitions define the \"shape\" of your data and specify\n// which ways the data can be fetched from the GraphQL server.\n\nimport { gql } from 'apollo-server-express'\n\nexport default gql`\n    # Comments in GraphQL are defined with the hash (#) symbol.\n    type Todo {\n        id: ID\n        name: String\n        tareas: [String]\n    }\n\n    # The \"Query\" type is the root of all GraphQL queries.\n    type Query {\n        todo: [Todo]\n    }\n\n    type Mutation {\n        addTask(task: String!, id: ID!): [String!]\n    }\n`;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1553090730152
  },
  "{\"sourceRoot\":\"/home/jcgp/Escritorio/apolloServer1\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/jcgp/Escritorio/apolloServer1\",\"filename\":\"/home/jcgp/Escritorio/apolloServer1/resolvers.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/jcgp/Escritorio/apolloServer1\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/jcgp/Escritorio/apolloServer1",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/jcgp/Escritorio/apolloServer1",
      "filename": "/home/jcgp/Escritorio/apolloServer1/resolvers.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/jcgp/Escritorio/apolloServer1",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/jcgp/Escritorio/apolloServer1/resolvers.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/home/jcgp/Escritorio/apolloServer1/resolvers.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/jcgp/Escritorio/apolloServer1",
        "sourceFileName": "resolvers.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n// Resolvers define the technique for fetching the types in the\n// schema.  We'll retrieve books from the \"books\" array above.\nvar _default = {\n  Query: {\n    todo: function () {\n      var _todo = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee() {\n        var result;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return client.query('select * from task');\n\n              case 2:\n                result = _context.sent;\n                console.log(result);\n                return _context.abrupt(\"return\", result.rows);\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function todo() {\n        return _todo.apply(this, arguments);\n      }\n\n      return todo;\n    }()\n  },\n  Mutation: {\n    addTask: function () {\n      var _addTask = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee2(parent, arg) {\n        var result;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                console.log(arg);\n                _context2.next = 3;\n                return client.query(\"update task set tasks = array_cat(tasks, '{\".concat(arg.task, \"}') where id=\").concat(arg.id));\n\n              case 3:\n                result = _context2.sent;\n                console.log(result); //return result\n\n                return _context2.abrupt(\"return\", \"cachi\");\n\n              case 6:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function addTask(_x, _x2) {\n        return _addTask.apply(this, arguments);\n      }\n\n      return addTask;\n    }()\n  },\n  Todo: {\n    tareas: function tareas(todo) {\n      console.log(todo.tasks);\n      return todo.tasks;\n    }\n  }\n};\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJlc29sdmVycy5qcyJdLCJuYW1lcyI6WyJRdWVyeSIsInRvZG8iLCJjbGllbnQiLCJxdWVyeSIsInJlc3VsdCIsImNvbnNvbGUiLCJsb2ciLCJyb3dzIiwiTXV0YXRpb24iLCJhZGRUYXNrIiwicGFyZW50IiwiYXJnIiwidGFzayIsImlkIiwiVG9kbyIsInRhcmVhcyIsInRhc2tzIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUFBO0FBQ0E7ZUFFZTtBQUNYQSxFQUFBQSxLQUFLLEVBQUU7QUFDSEMsSUFBQUEsSUFBSTtBQUFBO0FBQUE7QUFBQSw4QkFBRTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLHVCQUttQkMsTUFBTSxDQUFDQyxLQUFQLENBQWEsb0JBQWIsQ0FMbkI7O0FBQUE7QUFLSUMsZ0JBQUFBLE1BTEo7QUFNRkMsZ0JBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZRixNQUFaO0FBTkUsaURBT0tBLE1BQU0sQ0FBQ0csSUFQWjs7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxPQUFGOztBQUFBO0FBQUE7QUFBQTs7QUFBQTtBQUFBO0FBREQsR0FESTtBQWFYQyxFQUFBQSxRQUFRLEVBQUU7QUFDTkMsSUFBQUEsT0FBTztBQUFBO0FBQUE7QUFBQSw4QkFBRSxrQkFBT0MsTUFBUCxFQUFlQyxHQUFmO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNMTixnQkFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVlLLEdBQVo7QUFESztBQUFBLHVCQUVnQlQsTUFBTSxDQUFDQyxLQUFQLHNEQUEyRFEsR0FBRyxDQUFDQyxJQUEvRCwwQkFBbUZELEdBQUcsQ0FBQ0UsRUFBdkYsRUFGaEI7O0FBQUE7QUFFQ1QsZ0JBQUFBLE1BRkQ7QUFHTEMsZ0JBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZRixNQUFaLEVBSEssQ0FJTDs7QUFKSyxrREFLRSxPQUxGOztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLE9BQUY7O0FBQUE7QUFBQTtBQUFBOztBQUFBO0FBQUE7QUFERCxHQWJDO0FBdUJYVSxFQUFBQSxJQUFJLEVBQUU7QUFDRkMsSUFBQUEsTUFBTSxFQUFFLGdCQUFDZCxJQUFELEVBQVU7QUFDZEksTUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVlMLElBQUksQ0FBQ2UsS0FBakI7QUFDQSxhQUFPZixJQUFJLENBQUNlLEtBQVo7QUFDSDtBQUpDO0FBdkJLLEMiLCJzb3VyY2VSb290IjoiL2hvbWUvamNncC9Fc2NyaXRvcmlvL2Fwb2xsb1NlcnZlcjEiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBSZXNvbHZlcnMgZGVmaW5lIHRoZSB0ZWNobmlxdWUgZm9yIGZldGNoaW5nIHRoZSB0eXBlcyBpbiB0aGVcbi8vIHNjaGVtYS4gIFdlJ2xsIHJldHJpZXZlIGJvb2tzIGZyb20gdGhlIFwiYm9va3NcIiBhcnJheSBhYm92ZS5cblxuZXhwb3J0IGRlZmF1bHQgeyAgICBcbiAgICBRdWVyeToge1xuICAgICAgICB0b2RvOiBhc3luYyAoKSA9PiB7XG4gICAgICAgICAgICAvKnJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XG4gICAgICAgICAgICBjbGllbnQucXVlcnkoJ1NFTEVDVCAqIEZST00gdGFzaycpLnRoZW4oKHJlc3VsdCkgPT4gcmVzb2x2ZShyZXN1bHQucm93cykpXG4gICAgICAgICAgICB9KSovXG4gICAgXG4gICAgICAgICAgICBjb25zdCByZXN1bHQgPSBhd2FpdCBjbGllbnQucXVlcnkoJ3NlbGVjdCAqIGZyb20gdGFzaycpO1xuICAgICAgICAgICAgY29uc29sZS5sb2cocmVzdWx0KVxuICAgICAgICAgICAgcmV0dXJuIHJlc3VsdC5yb3dzXG4gICAgICAgIH0sXG4gICAgfSxcbiAgICBcbiAgICBNdXRhdGlvbjoge1xuICAgICAgICBhZGRUYXNrOiBhc3luYyAocGFyZW50LCBhcmcpID0+IHtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKGFyZylcbiAgICAgICAgICAgIGNvbnN0IHJlc3VsdCA9IGF3YWl0IGNsaWVudC5xdWVyeShgdXBkYXRlIHRhc2sgc2V0IHRhc2tzID0gYXJyYXlfY2F0KHRhc2tzLCAneyR7YXJnLnRhc2t9fScpIHdoZXJlIGlkPSR7YXJnLmlkfWApXG4gICAgICAgICAgICBjb25zb2xlLmxvZyhyZXN1bHQpXG4gICAgICAgICAgICAvL3JldHVybiByZXN1bHRcbiAgICAgICAgICAgIHJldHVybiBcImNhY2hpXCJcbiAgICAgICAgfSxcbiAgICB9LFxuICAgIFxuICAgIFRvZG86IHtcbiAgICAgICAgdGFyZWFzOiAodG9kbykgPT4ge1xuICAgICAgICAgICAgY29uc29sZS5sb2codG9kby50YXNrcylcbiAgICAgICAgICAgIHJldHVybiB0b2RvLnRhc2tzXG4gICAgICAgIH1cbiAgICB9LFxuICAgIFxufTsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "resolvers.js"
      ],
      "names": [
        "Query",
        "todo",
        "client",
        "query",
        "result",
        "console",
        "log",
        "rows",
        "Mutation",
        "addTask",
        "parent",
        "arg",
        "task",
        "id",
        "Todo",
        "tareas",
        "tasks"
      ],
      "mappings": ";;;;;;;;;;;AAAA;AACA;eAEe;AACXA,EAAAA,KAAK,EAAE;AACHC,IAAAA,IAAI;AAAA;AAAA;AAAA,8BAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAKmBC,MAAM,CAACC,KAAP,CAAa,oBAAb,CALnB;;AAAA;AAKIC,gBAAAA,MALJ;AAMFC,gBAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AANE,iDAOKA,MAAM,CAACG,IAPZ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA;AADD,GADI;AAaXC,EAAAA,QAAQ,EAAE;AACNC,IAAAA,OAAO;AAAA;AAAA;AAAA,8BAAE,kBAAOC,MAAP,EAAeC,GAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AACLN,gBAAAA,OAAO,CAACC,GAAR,CAAYK,GAAZ;AADK;AAAA,uBAEgBT,MAAM,CAACC,KAAP,sDAA2DQ,GAAG,CAACC,IAA/D,0BAAmFD,GAAG,CAACE,EAAvF,EAFhB;;AAAA;AAECT,gBAAAA,MAFD;AAGLC,gBAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ,EAHK,CAIL;;AAJK,kDAKE,OALF;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA;AADD,GAbC;AAuBXU,EAAAA,IAAI,EAAE;AACFC,IAAAA,MAAM,EAAE,gBAACd,IAAD,EAAU;AACdI,MAAAA,OAAO,CAACC,GAAR,CAAYL,IAAI,CAACe,KAAjB;AACA,aAAOf,IAAI,CAACe,KAAZ;AACH;AAJC;AAvBK,C",
      "sourceRoot": "/home/jcgp/Escritorio/apolloServer1",
      "sourcesContent": [
        "// Resolvers define the technique for fetching the types in the\n// schema.  We'll retrieve books from the \"books\" array above.\n\nexport default {    \n    Query: {\n        todo: async () => {\n            /*return new Promise((resolve, reject) => {\n            client.query('SELECT * FROM task').then((result) => resolve(result.rows))\n            })*/\n    \n            const result = await client.query('select * from task');\n            console.log(result)\n            return result.rows\n        },\n    },\n    \n    Mutation: {\n        addTask: async (parent, arg) => {\n            console.log(arg)\n            const result = await client.query(`update task set tasks = array_cat(tasks, '{${arg.task}}') where id=${arg.id}`)\n            console.log(result)\n            //return result\n            return \"cachi\"\n        },\n    },\n    \n    Todo: {\n        tareas: (todo) => {\n            console.log(todo.tasks)\n            return todo.tasks\n        }\n    },\n    \n};"
      ]
    },
    "sourceType": "script",
    "mtime": 1553090512753
  },
  "{\"sourceRoot\":\"/home/jcgp/Escritorio/apolloServer1/schemas\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/jcgp/Escritorio/apolloServer1\",\"filename\":\"/home/jcgp/Escritorio/apolloServer1/schemas/schemas.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/jcgp/Escritorio/apolloServer1\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/jcgp/Escritorio/apolloServer1/schemas",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/jcgp/Escritorio/apolloServer1",
      "filename": "/home/jcgp/Escritorio/apolloServer1/schemas/schemas.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/jcgp/Escritorio/apolloServer1",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/jcgp/Escritorio/apolloServer1/schemas/schemas.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/home/jcgp/Escritorio/apolloServer1/schemas/schemas.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/jcgp/Escritorio/apolloServer1/schemas",
        "sourceFileName": "schemas.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _apolloServerExpress = require(\"apollo-server-express\");\n\nvar _list_schema = _interopRequireDefault(require(\"./list_schema.js\"));\n\nvar _task_schema = _interopRequireDefault(require(\"./task_schema.js\"));\n\nvar _user_schema = _interopRequireDefault(require(\"./user_schema\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  type Query {\\n    _: Boolean\\n  }\\n\\n  type Mutation {\\n    _: Boolean\\n  }\\n\\n  type Subscription {\\n    _: Boolean\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }\n\nvar linkSchema = (0, _apolloServerExpress.gql)(_templateObject());\nvar _default = [linkSchema, _list_schema.default, _task_schema.default, _user_schema.default];\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNjaGVtYXMuanMiXSwibmFtZXMiOlsibGlua1NjaGVtYSIsImdxbCIsImxpc3RTY2hlbWEiLCJ0YXNrU2NoZW1hIiwidXNlclNjaGVtYSJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUlBOztBQUVBOztBQUNBOztBQUNBOzs7Ozs7Ozs7Ozs7Ozs7O0FBRUEsSUFBTUEsVUFBVSxPQUFHQyx3QkFBSCxvQkFBaEI7ZUFjZSxDQUFDRCxVQUFELEVBQWFFLG9CQUFiLEVBQXlCQyxvQkFBekIsRUFBcUNDLG9CQUFyQyxDIiwic291cmNlUm9vdCI6Ii9ob21lL2pjZ3AvRXNjcml0b3Jpby9hcG9sbG9TZXJ2ZXIxL3NjaGVtYXMiLCJzb3VyY2VzQ29udGVudCI6WyJcbi8vIFR5cGUgZGVmaW5pdGlvbnMgZGVmaW5lIHRoZSBcInNoYXBlXCIgb2YgeW91ciBkYXRhIGFuZCBzcGVjaWZ5XG4vLyB3aGljaCB3YXlzIHRoZSBkYXRhIGNhbiBiZSBmZXRjaGVkIGZyb20gdGhlIEdyYXBoUUwgc2VydmVyLlxuXG5pbXBvcnQgeyBncWwgfSBmcm9tICdhcG9sbG8tc2VydmVyLWV4cHJlc3MnO1xuXG5pbXBvcnQgbGlzdFNjaGVtYSBmcm9tICcuL2xpc3Rfc2NoZW1hLmpzJztcbmltcG9ydCB0YXNrU2NoZW1hIGZyb20gJy4vdGFza19zY2hlbWEuanMnO1xuaW1wb3J0IHVzZXJTY2hlbWEgZnJvbSAnLi91c2VyX3NjaGVtYSc7XG5cbmNvbnN0IGxpbmtTY2hlbWEgPSBncWxgXG4gIHR5cGUgUXVlcnkge1xuICAgIF86IEJvb2xlYW5cbiAgfVxuXG4gIHR5cGUgTXV0YXRpb24ge1xuICAgIF86IEJvb2xlYW5cbiAgfVxuXG4gIHR5cGUgU3Vic2NyaXB0aW9uIHtcbiAgICBfOiBCb29sZWFuXG4gIH1cbmA7XG5cbmV4cG9ydCBkZWZhdWx0IFtsaW5rU2NoZW1hLCBsaXN0U2NoZW1hLCB0YXNrU2NoZW1hLCB1c2VyU2NoZW1hXTtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "schemas.js"
      ],
      "names": [
        "linkSchema",
        "gql",
        "listSchema",
        "taskSchema",
        "userSchema"
      ],
      "mappings": ";;;;;;;AAIA;;AAEA;;AACA;;AACA;;;;;;;;;;;;;;;;AAEA,IAAMA,UAAU,OAAGC,wBAAH,oBAAhB;eAce,CAACD,UAAD,EAAaE,oBAAb,EAAyBC,oBAAzB,EAAqCC,oBAArC,C",
      "sourceRoot": "/home/jcgp/Escritorio/apolloServer1/schemas",
      "sourcesContent": [
        "\n// Type definitions define the \"shape\" of your data and specify\n// which ways the data can be fetched from the GraphQL server.\n\nimport { gql } from 'apollo-server-express';\n\nimport listSchema from './list_schema.js';\nimport taskSchema from './task_schema.js';\nimport userSchema from './user_schema';\n\nconst linkSchema = gql`\n  type Query {\n    _: Boolean\n  }\n\n  type Mutation {\n    _: Boolean\n  }\n\n  type Subscription {\n    _: Boolean\n  }\n`;\n\nexport default [linkSchema, listSchema, taskSchema, userSchema];\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1553610537736
  },
  "{\"sourceRoot\":\"/home/jcgp/Escritorio/apolloServer1/schemas\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/jcgp/Escritorio/apolloServer1\",\"filename\":\"/home/jcgp/Escritorio/apolloServer1/schemas/user_schema.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/jcgp/Escritorio/apolloServer1\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/jcgp/Escritorio/apolloServer1/schemas",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/jcgp/Escritorio/apolloServer1",
      "filename": "/home/jcgp/Escritorio/apolloServer1/schemas/user_schema.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/jcgp/Escritorio/apolloServer1",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/jcgp/Escritorio/apolloServer1/schemas/user_schema.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/home/jcgp/Escritorio/apolloServer1/schemas/user_schema.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/jcgp/Escritorio/apolloServer1/schemas",
        "sourceFileName": "user_schema.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _apolloServerExpress = require(\"apollo-server-express\");\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n\\n    type User {\\n        id: ID!\\n        username: String!\\n        email: String!\\n        password: String!\\n    }\\n\\n    extend type Query{\\n        users: [User]\\n        user(id: ID!): User\\n    }\\n\\n    type Token {\\n        username: String!\\n        token: String!\\n    }\\n\\n    extend type Mutation {\\n        addUser(username: String!, email: String!, password: String!): Token!\\n        logIn(email: String!, password: String!): Token!\\n        deleteUser(id: ID!): String!\\n    }\\n\\n    type UserResponse {\\n        user: User!\\n        action: Boolean!\\n    }\\n\\n    extend type Subscription {\\n        userSub: UserResponse\\n    }\\n\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }\n\nvar _default = (0, _apolloServerExpress.gql)(_templateObject());\n\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVzZXJfc2NoZW1hLmpzIl0sIm5hbWVzIjpbImdxbCJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOzs7Ozs7Ozs7Ozs7OzttQkFFZUEsd0IiLCJzb3VyY2VSb290IjoiL2hvbWUvamNncC9Fc2NyaXRvcmlvL2Fwb2xsb1NlcnZlcjEvc2NoZW1hcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGdxbCB9IGZyb20gJ2Fwb2xsby1zZXJ2ZXItZXhwcmVzcyc7XG5cbmV4cG9ydCBkZWZhdWx0IGdxbGBcblxuICAgIHR5cGUgVXNlciB7XG4gICAgICAgIGlkOiBJRCFcbiAgICAgICAgdXNlcm5hbWU6IFN0cmluZyFcbiAgICAgICAgZW1haWw6IFN0cmluZyFcbiAgICAgICAgcGFzc3dvcmQ6IFN0cmluZyFcbiAgICB9XG5cbiAgICBleHRlbmQgdHlwZSBRdWVyeXtcbiAgICAgICAgdXNlcnM6IFtVc2VyXVxuICAgICAgICB1c2VyKGlkOiBJRCEpOiBVc2VyXG4gICAgfVxuXG4gICAgdHlwZSBUb2tlbiB7XG4gICAgICAgIHVzZXJuYW1lOiBTdHJpbmchXG4gICAgICAgIHRva2VuOiBTdHJpbmchXG4gICAgfVxuXG4gICAgZXh0ZW5kIHR5cGUgTXV0YXRpb24ge1xuICAgICAgICBhZGRVc2VyKHVzZXJuYW1lOiBTdHJpbmchLCBlbWFpbDogU3RyaW5nISwgcGFzc3dvcmQ6IFN0cmluZyEpOiBUb2tlbiFcbiAgICAgICAgbG9nSW4oZW1haWw6IFN0cmluZyEsIHBhc3N3b3JkOiBTdHJpbmchKTogVG9rZW4hXG4gICAgICAgIGRlbGV0ZVVzZXIoaWQ6IElEISk6IFN0cmluZyFcbiAgICB9XG5cbiAgICB0eXBlIFVzZXJSZXNwb25zZSB7XG4gICAgICAgIHVzZXI6IFVzZXIhXG4gICAgICAgIGFjdGlvbjogQm9vbGVhbiFcbiAgICB9XG5cbiAgICBleHRlbmQgdHlwZSBTdWJzY3JpcHRpb24ge1xuICAgICAgICB1c2VyU3ViOiBVc2VyUmVzcG9uc2VcbiAgICB9XG5cbmA7Il19",
    "map": {
      "version": 3,
      "sources": [
        "user_schema.js"
      ],
      "names": [
        "gql"
      ],
      "mappings": ";;;;;;;AAAA;;;;;;;;;;;;;;mBAEeA,wB",
      "sourceRoot": "/home/jcgp/Escritorio/apolloServer1/schemas",
      "sourcesContent": [
        "import { gql } from 'apollo-server-express';\n\nexport default gql`\n\n    type User {\n        id: ID!\n        username: String!\n        email: String!\n        password: String!\n    }\n\n    extend type Query{\n        users: [User]\n        user(id: ID!): User\n    }\n\n    type Token {\n        username: String!\n        token: String!\n    }\n\n    extend type Mutation {\n        addUser(username: String!, email: String!, password: String!): Token!\n        logIn(email: String!, password: String!): Token!\n        deleteUser(id: ID!): String!\n    }\n\n    type UserResponse {\n        user: User!\n        action: Boolean!\n    }\n\n    extend type Subscription {\n        userSub: UserResponse\n    }\n\n`;"
      ]
    },
    "sourceType": "script",
    "mtime": 1553772960039
  },
  "{\"sourceRoot\":\"/home/jcgp/Escritorio/apolloServer1/schemas\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/jcgp/Escritorio/apolloServer1\",\"filename\":\"/home/jcgp/Escritorio/apolloServer1/schemas/task_schema.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/jcgp/Escritorio/apolloServer1\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/jcgp/Escritorio/apolloServer1/schemas",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/jcgp/Escritorio/apolloServer1",
      "filename": "/home/jcgp/Escritorio/apolloServer1/schemas/task_schema.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/jcgp/Escritorio/apolloServer1",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/jcgp/Escritorio/apolloServer1/schemas/task_schema.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/home/jcgp/Escritorio/apolloServer1/schemas/task_schema.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/jcgp/Escritorio/apolloServer1/schemas",
        "sourceFileName": "task_schema.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _apolloServerExpress = require(\"apollo-server-express\");\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    # Comments in GraphQL are defined with the hash (#) symbol.\\n    \\n    type Task {\\n        id: ID!\\n        list: List!\\n        text: String!\\n        done: Boolean!\\n        listId: ID!\\n    }\\n\\n    # The \\\"Query\\\" type is the root of all GraphQL queries.\\n    extend type Query {\\n        tasks(listId: ID!): [Task]\\n        task(id: ID!): Task\\n    }\\n\\n    extend type Mutation {\\n        addTask(listId: ID!, text: String!): Task\\n        deleteTasks(id: [ID!]): String\\n        #deleteMultipleTasks(id_array: [ID!]!): String\\n        markDone(id: ID!, done: Boolean!): Boolean\\n    }\\n\\n    enum allowedTaskAction {\\n        CREATE\\n        ISDONE\\n    }\\n\\n    type TaskResponse {\\n        task: Task\\n        action: allowedTaskAction\\n    }\\n\\n    type deleteResponse {\\n        ids: [ID!]\\n    }\\n\\n    extend type Subscription{\\n        updateSub: TaskResponse\\n        deleteSub: deleteResponse\\n    }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }\n\nvar _default = (0, _apolloServerExpress.gql)(_templateObject());\n\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRhc2tfc2NoZW1hLmpzIl0sIm5hbWVzIjpbImdxbCJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOzs7Ozs7Ozs7Ozs7OzttQkFFZUEsd0IiLCJzb3VyY2VSb290IjoiL2hvbWUvamNncC9Fc2NyaXRvcmlvL2Fwb2xsb1NlcnZlcjEvc2NoZW1hcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGdxbCB9IGZyb20gJ2Fwb2xsby1zZXJ2ZXItZXhwcmVzcydcblxuZXhwb3J0IGRlZmF1bHQgZ3FsYFxuICAgICMgQ29tbWVudHMgaW4gR3JhcGhRTCBhcmUgZGVmaW5lZCB3aXRoIHRoZSBoYXNoICgjKSBzeW1ib2wuXG4gICAgXG4gICAgdHlwZSBUYXNrIHtcbiAgICAgICAgaWQ6IElEIVxuICAgICAgICBsaXN0OiBMaXN0IVxuICAgICAgICB0ZXh0OiBTdHJpbmchXG4gICAgICAgIGRvbmU6IEJvb2xlYW4hXG4gICAgICAgIGxpc3RJZDogSUQhXG4gICAgfVxuXG4gICAgIyBUaGUgXCJRdWVyeVwiIHR5cGUgaXMgdGhlIHJvb3Qgb2YgYWxsIEdyYXBoUUwgcXVlcmllcy5cbiAgICBleHRlbmQgdHlwZSBRdWVyeSB7XG4gICAgICAgIHRhc2tzKGxpc3RJZDogSUQhKTogW1Rhc2tdXG4gICAgICAgIHRhc2soaWQ6IElEISk6IFRhc2tcbiAgICB9XG5cbiAgICBleHRlbmQgdHlwZSBNdXRhdGlvbiB7XG4gICAgICAgIGFkZFRhc2sobGlzdElkOiBJRCEsIHRleHQ6IFN0cmluZyEpOiBUYXNrXG4gICAgICAgIGRlbGV0ZVRhc2tzKGlkOiBbSUQhXSk6IFN0cmluZ1xuICAgICAgICAjZGVsZXRlTXVsdGlwbGVUYXNrcyhpZF9hcnJheTogW0lEIV0hKTogU3RyaW5nXG4gICAgICAgIG1hcmtEb25lKGlkOiBJRCEsIGRvbmU6IEJvb2xlYW4hKTogQm9vbGVhblxuICAgIH1cblxuICAgIGVudW0gYWxsb3dlZFRhc2tBY3Rpb24ge1xuICAgICAgICBDUkVBVEVcbiAgICAgICAgSVNET05FXG4gICAgfVxuXG4gICAgdHlwZSBUYXNrUmVzcG9uc2Uge1xuICAgICAgICB0YXNrOiBUYXNrXG4gICAgICAgIGFjdGlvbjogYWxsb3dlZFRhc2tBY3Rpb25cbiAgICB9XG5cbiAgICB0eXBlIGRlbGV0ZVJlc3BvbnNlIHtcbiAgICAgICAgaWRzOiBbSUQhXVxuICAgIH1cblxuICAgIGV4dGVuZCB0eXBlIFN1YnNjcmlwdGlvbntcbiAgICAgICAgdXBkYXRlU3ViOiBUYXNrUmVzcG9uc2VcbiAgICAgICAgZGVsZXRlU3ViOiBkZWxldGVSZXNwb25zZVxuICAgIH1cbmA7Il19",
    "map": {
      "version": 3,
      "sources": [
        "task_schema.js"
      ],
      "names": [
        "gql"
      ],
      "mappings": ";;;;;;;AAAA;;;;;;;;;;;;;;mBAEeA,wB",
      "sourceRoot": "/home/jcgp/Escritorio/apolloServer1/schemas",
      "sourcesContent": [
        "import { gql } from 'apollo-server-express'\n\nexport default gql`\n    # Comments in GraphQL are defined with the hash (#) symbol.\n    \n    type Task {\n        id: ID!\n        list: List!\n        text: String!\n        done: Boolean!\n        listId: ID!\n    }\n\n    # The \"Query\" type is the root of all GraphQL queries.\n    extend type Query {\n        tasks(listId: ID!): [Task]\n        task(id: ID!): Task\n    }\n\n    extend type Mutation {\n        addTask(listId: ID!, text: String!): Task\n        deleteTasks(id: [ID!]): String\n        #deleteMultipleTasks(id_array: [ID!]!): String\n        markDone(id: ID!, done: Boolean!): Boolean\n    }\n\n    enum allowedTaskAction {\n        CREATE\n        ISDONE\n    }\n\n    type TaskResponse {\n        task: Task\n        action: allowedTaskAction\n    }\n\n    type deleteResponse {\n        ids: [ID!]\n    }\n\n    extend type Subscription{\n        updateSub: TaskResponse\n        deleteSub: deleteResponse\n    }\n`;"
      ]
    },
    "sourceType": "script",
    "mtime": 1553606428151
  },
  "{\"sourceRoot\":\"/home/jcgp/Escritorio/apolloServer1/resolvers\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/jcgp/Escritorio/apolloServer1\",\"filename\":\"/home/jcgp/Escritorio/apolloServer1/resolvers/resolvers.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/jcgp/Escritorio/apolloServer1\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/jcgp/Escritorio/apolloServer1/resolvers",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/jcgp/Escritorio/apolloServer1",
      "filename": "/home/jcgp/Escritorio/apolloServer1/resolvers/resolvers.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/jcgp/Escritorio/apolloServer1",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/jcgp/Escritorio/apolloServer1/resolvers/resolvers.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/home/jcgp/Escritorio/apolloServer1/resolvers/resolvers.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/jcgp/Escritorio/apolloServer1/resolvers",
        "sourceFileName": "resolvers.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _list_resolver = _interopRequireDefault(require(\"./list_resolver.js\"));\n\nvar _task_resolver = _interopRequireDefault(require(\"./task_resolver.js\"));\n\nvar _user_resolver = _interopRequireDefault(require(\"./user_resolver.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// Resolvers define the technique for fetching the types in the\n// schema.  We'll retrieve books from the \"books\" array above.\nvar _default = [_list_resolver.default, _task_resolver.default, _user_resolver.default];\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJlc29sdmVycy5qcyJdLCJuYW1lcyI6WyJsaXN0UmVzb2x2ZXIiLCJ0YXNrUmVzb2x2ZXIiLCJ1c2VyUmVzb2x2ZXIiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFHQTs7QUFDQTs7QUFDQTs7OztBQUxBO0FBQ0E7ZUFNZSxDQUFDQSxzQkFBRCxFQUFlQyxzQkFBZixFQUE2QkMsc0JBQTdCLEMiLCJzb3VyY2VSb290IjoiL2hvbWUvamNncC9Fc2NyaXRvcmlvL2Fwb2xsb1NlcnZlcjEvcmVzb2x2ZXJzIiwic291cmNlc0NvbnRlbnQiOlsiLy8gUmVzb2x2ZXJzIGRlZmluZSB0aGUgdGVjaG5pcXVlIGZvciBmZXRjaGluZyB0aGUgdHlwZXMgaW4gdGhlXG4vLyBzY2hlbWEuICBXZSdsbCByZXRyaWV2ZSBib29rcyBmcm9tIHRoZSBcImJvb2tzXCIgYXJyYXkgYWJvdmUuXG5cbmltcG9ydCBsaXN0UmVzb2x2ZXIgZnJvbSAnLi9saXN0X3Jlc29sdmVyLmpzJztcbmltcG9ydCB0YXNrUmVzb2x2ZXIgZnJvbSAnLi90YXNrX3Jlc29sdmVyLmpzJztcbmltcG9ydCB1c2VyUmVzb2x2ZXIgZnJvbSAnLi91c2VyX3Jlc29sdmVyLmpzJztcblxuZXhwb3J0IGRlZmF1bHQgW2xpc3RSZXNvbHZlciwgdGFza1Jlc29sdmVyLCB1c2VyUmVzb2x2ZXJdOyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "resolvers.js"
      ],
      "names": [
        "listResolver",
        "taskResolver",
        "userResolver"
      ],
      "mappings": ";;;;;;;AAGA;;AACA;;AACA;;;;AALA;AACA;eAMe,CAACA,sBAAD,EAAeC,sBAAf,EAA6BC,sBAA7B,C",
      "sourceRoot": "/home/jcgp/Escritorio/apolloServer1/resolvers",
      "sourcesContent": [
        "// Resolvers define the technique for fetching the types in the\n// schema.  We'll retrieve books from the \"books\" array above.\n\nimport listResolver from './list_resolver.js';\nimport taskResolver from './task_resolver.js';\nimport userResolver from './user_resolver.js';\n\nexport default [listResolver, taskResolver, userResolver];"
      ]
    },
    "sourceType": "script",
    "mtime": 1553676457140
  },
  "{\"sourceRoot\":\"/home/jcgp/Escritorio/apolloServer1/resolvers\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/jcgp/Escritorio/apolloServer1\",\"filename\":\"/home/jcgp/Escritorio/apolloServer1/resolvers/user_resolver.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/jcgp/Escritorio/apolloServer1\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/jcgp/Escritorio/apolloServer1/resolvers",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/jcgp/Escritorio/apolloServer1",
      "filename": "/home/jcgp/Escritorio/apolloServer1/resolvers/user_resolver.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/jcgp/Escritorio/apolloServer1",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/jcgp/Escritorio/apolloServer1/resolvers/user_resolver.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/home/jcgp/Escritorio/apolloServer1/resolvers/user_resolver.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/jcgp/Escritorio/apolloServer1/resolvers",
        "sourceFileName": "user_resolver.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _graphqlRedisSubscriptions = require(\"graphql-redis-subscriptions\");\n\nvar _ioredis = _interopRequireDefault(require(\"ioredis\"));\n\nvar _jsonwebtoken = _interopRequireDefault(require(\"jsonwebtoken\"));\n\nvar _bcrypt = _interopRequireDefault(require(\"bcrypt\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar options = {\n  host: '127.0.0.1',\n  port: 6379\n};\nvar pubsub = new _graphqlRedisSubscriptions.RedisPubSub({\n  publisher: new _ioredis.default(options),\n  subscriber: new _ioredis.default(options)\n}); //subscription task\n\nvar SUB_UPDATE_USER = 'SUB_UPDATE_USER';\nvar SUB_DELETE_USER = 'SUB_DELETE_USER';\nvar ADD = 1;\nvar DELETE = 2;\nvar UPDATE = 3;\nvar _default = {\n  Query: {\n    //users: [User]\n    users: function () {\n      var _users = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee(parent, args, _ref) {\n        var models;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                models = _ref.models;\n                _context.prev = 1;\n                _context.next = 4;\n                return models.User.findAll();\n\n              case 4:\n                return _context.abrupt(\"return\", _context.sent);\n\n              case 7:\n                _context.prev = 7;\n                _context.t0 = _context[\"catch\"](1);\n                console.log(_context.t0.errors[0].type);\n                throw new Error('Error al buscar todos los usuarios');\n\n              case 11:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[1, 7]]);\n      }));\n\n      function users(_x, _x2, _x3) {\n        return _users.apply(this, arguments);\n      }\n\n      return users;\n    }(),\n    //user(id: ID!): User\n    user: function () {\n      var _user = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee2(parent, args, _ref2) {\n        var models, result;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                models = _ref2.models;\n                _context2.prev = 1;\n                _context2.next = 4;\n                return models.User.findOne({\n                  where: {\n                    id: args.id\n                  }\n                });\n\n              case 4:\n                result = _context2.sent;\n                return _context2.abrupt(\"return\", result);\n\n              case 8:\n                _context2.prev = 8;\n                _context2.t0 = _context2[\"catch\"](1);\n                throw new Error('Error al buscar el usuario');\n\n              case 11:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, null, [[1, 8]]);\n      }));\n\n      function user(_x4, _x5, _x6) {\n        return _user.apply(this, arguments);\n      }\n\n      return user;\n    }()\n  },\n  Mutation: {\n    //addUser(username: String!, email: String!, password: String!): Token!\n    addUser: function () {\n      var _addUser = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee3(parent, args, _ref3) {\n        var models, JWT_KEY, EXPIRE_TOKEN, result, id, username, email;\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                models = _ref3.models, JWT_KEY = _ref3.JWT_KEY, EXPIRE_TOKEN = _ref3.EXPIRE_TOKEN;\n                _context3.prev = 1;\n                _context3.next = 4;\n                return models.User.create({\n                  username: args.username,\n                  email: args.email,\n                  password: args.password //recordar que en el model, antes de meterlo en la BD se hace el bcrypt con las password\n\n                });\n\n              case 4:\n                result = _context3.sent;\n                //publicamos el nuevo usuario\n                id = result.id, username = result.username, email = result.email;\n                return _context3.abrupt(\"return\", {\n                  username: username,\n                  token: _jsonwebtoken.default.sign({\n                    id: id,\n                    email: email\n                  }, JWT_KEY, {\n                    expiresIn: EXPIRE_TOKEN\n                  })\n                });\n\n              case 9:\n                _context3.prev = 9;\n                _context3.t0 = _context3[\"catch\"](1);\n                console.log(_context3.t0.errors[0].type);\n                throw new Error('Error al aÃ±adir una tarea. ' + _context3.t0.errors[0].message);\n\n              case 13:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, null, [[1, 9]]);\n      }));\n\n      function addUser(_x7, _x8, _x9) {\n        return _addUser.apply(this, arguments);\n      }\n\n      return addUser;\n    }(),\n    //logIn(email: String!, password: String!): Token!\n    logIn: function () {\n      var _logIn = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee4(parent, args, _ref4) {\n        var models, JWT_KEY, EXPIRE_TOKEN, registered, validPassword, id, username, email;\n        return regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                models = _ref4.models, JWT_KEY = _ref4.JWT_KEY, EXPIRE_TOKEN = _ref4.EXPIRE_TOKEN;\n                _context4.prev = 1;\n                _context4.next = 4;\n                return models.User.findOne({\n                  where: {\n                    email: args.email\n                  }\n                });\n\n              case 4:\n                registered = _context4.sent;\n\n                if (registered) {\n                  _context4.next = 9;\n                  break;\n                }\n\n                throw new Error(\"Fallo al autenticar\");\n\n              case 9:\n                _context4.next = 11;\n                return _bcrypt.default.compare(args.password, registered.password);\n\n              case 11:\n                validPassword = _context4.sent;\n\n                if (!validPassword) {\n                  _context4.next = 17;\n                  break;\n                }\n\n                id = registered.id, username = registered.username, email = registered.email;\n                return _context4.abrupt(\"return\", {\n                  username: username,\n                  token: _jsonwebtoken.default.sign({\n                    id: id,\n                    email: email\n                  }, JWT_KEY, {\n                    expiresIn: EXPIRE_TOKEN\n                  })\n                });\n\n              case 17:\n                throw new Error(\"Fallo al autenticar, contraseÃ±a incorrecta\");\n\n              case 18:\n                _context4.next = 23;\n                break;\n\n              case 20:\n                _context4.prev = 20;\n                _context4.t0 = _context4[\"catch\"](1);\n                throw new Error(_context4.t0);\n\n              case 23:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, null, [[1, 20]]);\n      }));\n\n      function logIn(_x10, _x11, _x12) {\n        return _logIn.apply(this, arguments);\n      }\n\n      return logIn;\n    }() //deleteUser(id: ID!): String!\n\n  }\n  /*Subscription: {\n      userSub: UserResponse\n  }*/\n\n};\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "user_resolver.js"
      ],
      "names": [
        "options",
        "host",
        "port",
        "pubsub",
        "RedisPubSub",
        "publisher",
        "Redis",
        "subscriber",
        "SUB_UPDATE_USER",
        "SUB_DELETE_USER",
        "ADD",
        "DELETE",
        "UPDATE",
        "Query",
        "users",
        "parent",
        "args",
        "models",
        "User",
        "findAll",
        "console",
        "log",
        "errors",
        "type",
        "Error",
        "user",
        "findOne",
        "where",
        "id",
        "result",
        "Mutation",
        "addUser",
        "JWT_KEY",
        "EXPIRE_TOKEN",
        "create",
        "username",
        "email",
        "password",
        "token",
        "jwt",
        "sign",
        "expiresIn",
        "message",
        "logIn",
        "registered",
        "bcrypt",
        "compare",
        "validPassword"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AACA;;AACA;;;;;;;;AAEA,IAAMA,OAAO,GAAG;AACZC,EAAAA,IAAI,EAAE,WADM;AAEZC,EAAAA,IAAI,EAAE;AAFM,CAAhB;AAKA,IAAMC,MAAM,GAAG,IAAIC,sCAAJ,CAAgB;AAE3BC,EAAAA,SAAS,EAAE,IAAIC,gBAAJ,CAAUN,OAAV,CAFgB;AAG3BO,EAAAA,UAAU,EAAE,IAAID,gBAAJ,CAAUN,OAAV;AAHe,CAAhB,CAAf,C,CAOA;;AACA,IAAMQ,eAAe,GAAG,iBAAxB;AACA,IAAMC,eAAe,GAAG,iBAAxB;AAEA,IAAMC,GAAG,GAAG,CAAZ;AACA,IAAMC,MAAM,GAAG,CAAf;AACA,IAAMC,MAAM,GAAG,CAAf;eAIe;AAEXC,EAAAA,KAAK,EAAE;AACH;AACAC,IAAAA,KAAK;AAAA;AAAA;AAAA,8BAAE,iBAAOC,MAAP,EAAeC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAsBC,gBAAAA,MAAtB,QAAsBA,MAAtB;AAAA;AAAA;AAAA,uBAEcA,MAAM,CAACC,IAAP,CAAYC,OAAZ,EAFd;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAKCC,gBAAAA,OAAO,CAACC,GAAR,CAAY,YAAIC,MAAJ,CAAW,CAAX,EAAcC,IAA1B;AALD,sBAMO,IAAIC,KAAJ,CAAU,oCAAV,CANP;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA,OAFF;AAYH;AACAC,IAAAA,IAAI;AAAA;AAAA;AAAA,8BAAE,kBAAOV,MAAP,EAAeC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAsBC,gBAAAA,MAAtB,SAAsBA,MAAtB;AAAA;AAAA;AAAA,uBAEqBA,MAAM,CAACC,IAAP,CAAYQ,OAAZ,CAAoB;AACnCC,kBAAAA,KAAK,EAAE;AACHC,oBAAAA,EAAE,EAAEZ,IAAI,CAACY;AADN;AAD4B,iBAApB,CAFrB;;AAAA;AAEMC,gBAAAA,MAFN;AAAA,kDAQSA,MART;;AAAA;AAAA;AAAA;AAAA,sBAWQ,IAAIL,KAAJ,CAAU,4BAAV,CAXR;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAbD,GAFI;AA+BXM,EAAAA,QAAQ,EAAE;AACN;AACAC,IAAAA,OAAO;AAAA;AAAA;AAAA,8BAAE,kBAAOhB,MAAP,EAAeC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAsBC,gBAAAA,MAAtB,SAAsBA,MAAtB,EAA8Be,OAA9B,SAA8BA,OAA9B,EAAuCC,YAAvC,SAAuCA,YAAvC;AAAA;AAAA;AAAA,uBAEkBhB,MAAM,CAACC,IAAP,CAAYgB,MAAZ,CAAmB;AAClCC,kBAAAA,QAAQ,EAAEnB,IAAI,CAACmB,QADmB;AAElCC,kBAAAA,KAAK,EAAEpB,IAAI,CAACoB,KAFsB;AAGlCC,kBAAAA,QAAQ,EAAErB,IAAI,CAACqB,QAHmB,CAGT;;AAHS,iBAAnB,CAFlB;;AAAA;AAEGR,gBAAAA,MAFH;AASD;AAGQD,gBAAAA,EAZP,GAY+BC,MAZ/B,CAYOD,EAZP,EAYWO,QAZX,GAY+BN,MAZ/B,CAYWM,QAZX,EAYqBC,KAZrB,GAY+BP,MAZ/B,CAYqBO,KAZrB;AAAA,kDAaM;AAACD,kBAAAA,QAAQ,EAAEA,QAAX;AACCG,kBAAAA,KAAK,EAAEC,sBAAIC,IAAJ,CACH;AAAEZ,oBAAAA,EAAE,EAAFA,EAAF;AAAMQ,oBAAAA,KAAK,EAALA;AAAN,mBADG,EAEHJ,OAFG,EAGH;AAAES,oBAAAA,SAAS,EAAER;AAAb,mBAHG;AADR,iBAbN;;AAAA;AAAA;AAAA;AAqBDb,gBAAAA,OAAO,CAACC,GAAR,CAAY,aAAIC,MAAJ,CAAW,CAAX,EAAcC,IAA1B;AArBC,sBAsBK,IAAIC,KAAJ,CAAU,gCAAgC,aAAIF,MAAJ,CAAW,CAAX,EAAcoB,OAAxD,CAtBL;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA,OAFD;AA6BN;AACAC,IAAAA,KAAK;AAAA;AAAA;AAAA,8BAAE,kBAAO5B,MAAP,EAAeC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAsBC,gBAAAA,MAAtB,SAAsBA,MAAtB,EAA8Be,OAA9B,SAA8BA,OAA9B,EAAuCC,YAAvC,SAAuCA,YAAvC;AAAA;AAAA;AAAA,uBAEwBhB,MAAM,CAACC,IAAP,CAAYQ,OAAZ,CAAoB;AACvCC,kBAAAA,KAAK,EAAE;AACHS,oBAAAA,KAAK,EAAEpB,IAAI,CAACoB;AADT;AADgC,iBAApB,CAFxB;;AAAA;AAEKQ,gBAAAA,UAFL;;AAAA,oBAQKA,UARL;AAAA;AAAA;AAAA;;AAAA,sBASW,IAAIpB,KAAJ,CAAU,qBAAV,CATX;;AAAA;AAAA;AAAA,uBAY+BqB,gBAAOC,OAAP,CAAe9B,IAAI,CAACqB,QAApB,EAA8BO,UAAU,CAACP,QAAzC,CAZ/B;;AAAA;AAYSU,gBAAAA,aAZT;;AAAA,qBAcQA,aAdR;AAAA;AAAA;AAAA;;AAeiBnB,gBAAAA,EAfjB,GAeyCgB,UAfzC,CAeiBhB,EAfjB,EAeqBO,QAfrB,GAeyCS,UAfzC,CAeqBT,QAfrB,EAe+BC,KAf/B,GAeyCQ,UAfzC,CAe+BR,KAf/B;AAAA,kDAiBgB;AAACD,kBAAAA,QAAQ,EAAEA,QAAX;AACHG,kBAAAA,KAAK,EAAEC,sBAAIC,IAAJ,CACH;AAAEZ,oBAAAA,EAAE,EAAFA,EAAF;AAAMQ,oBAAAA,KAAK,EAALA;AAAN,mBADG,EAEHJ,OAFG,EAGH;AAAES,oBAAAA,SAAS,EAAER;AAAb,mBAHG;AADJ,iBAjBhB;;AAAA;AAAA,sBAyBe,IAAIT,KAAJ,CAAU,4CAAV,CAzBf;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA,sBA8BO,IAAIA,KAAJ,cA9BP;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA,OA9BC,CAoEN;;AApEM;AAwEV;;;;AAvGW,C",
      "sourceRoot": "/home/jcgp/Escritorio/apolloServer1/resolvers",
      "sourcesContent": [
        "import { RedisPubSub } from 'graphql-redis-subscriptions';\nimport Redis from 'ioredis';\nimport jwt from 'jsonwebtoken';\nimport bcrypt from 'bcrypt';\n\nconst options = {\n    host: '127.0.0.1',\n    port: 6379\n}\n\nconst pubsub = new RedisPubSub({\n\n    publisher: new Redis(options),\n    subscriber: new Redis(options)\n\n});\n\n//subscription task\nconst SUB_UPDATE_USER = 'SUB_UPDATE_USER';\nconst SUB_DELETE_USER = 'SUB_DELETE_USER';\n\nconst ADD = 1;\nconst DELETE = 2;\nconst UPDATE = 3;\n\n\n\nexport default {\n    \n    Query: {\n        //users: [User]\n        users: async (parent, args, {models}) => {\n            try{\n                return await models.User.findAll();\n            }\n            catch(err){\n                console.log(err.errors[0].type)\n                throw new Error('Error al buscar todos los usuarios');\n            }            \n        },\n\n        //user(id: ID!): User\n        user: async (parent, args, {models}) => {\n            try{\n                let result = await models.User.findOne({\n                    where: {\n                        id: args.id\n                    }\n                });\n\n                return result\n            }\n            catch(err){\n                throw new Error('Error al buscar el usuario')\n            }\n        },\n    },\n\n    Mutation: {\n        //addUser(username: String!, email: String!, password: String!): Token!\n        addUser: async (parent, args, {models, JWT_KEY, EXPIRE_TOKEN}) => {\n            try{\n                let result = await models.User.create({\n                    username: args.username,\n                    email: args.email,\n                    password: args.password, //recordar que en el model, antes de meterlo en la BD se hace el bcrypt con las password\n                });    \n    \n\n                //publicamos el nuevo usuario\n                \n                \n                const { id, username, email } = result\n                return {username: username,\n                        token: jwt.sign(\n                            { id, email }, \n                            JWT_KEY, \n                            { expiresIn: EXPIRE_TOKEN }\n                        )};\n            }\n            catch(err){\n                console.log(err.errors[0].type)\n                throw new Error('Error al aÃ±adir una tarea. ' + err.errors[0].message);\n            }\n            \n        },\n\n        //logIn(email: String!, password: String!): Token!\n        logIn: async (parent, args, {models, JWT_KEY, EXPIRE_TOKEN}) => {\n            try{\n                let registered = await models.User.findOne({\n                    where: {\n                        email: args.email,\n                    }\n                });\n\n                if(!registered){\n                    throw new Error(\"Fallo al autenticar\")\n                }\n                else{\n                    let validPassword = await bcrypt.compare(args.password, registered.password);\n\n                    if(validPassword){\n                        const { id, username, email } = registered\n\n                        return {username: username,\n                            token: jwt.sign(\n                                { id, email }, \n                                JWT_KEY, \n                                { expiresIn: EXPIRE_TOKEN }\n                            )};\n                    }\n                    else{\n                        throw new Error(\"Fallo al autenticar, contraseÃ±a incorrecta\")\n                    }\n                }\n            }\n            catch(err){\n                throw new Error(err);\n            }\n            \n            \n\n            \n        },\n\n        //deleteUser(id: ID!): String!\n    },\n\n\n    /*Subscription: {\n        userSub: UserResponse\n    }*/\n};"
      ]
    },
    "sourceType": "script",
    "mtime": 1553772951839
  },
  "{\"sourceRoot\":\"/home/jcgp/Escritorio/apolloServer1/resolvers\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/jcgp/Escritorio/apolloServer1\",\"filename\":\"/home/jcgp/Escritorio/apolloServer1/resolvers/task_resolver.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/jcgp/Escritorio/apolloServer1\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/jcgp/Escritorio/apolloServer1/resolvers",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/jcgp/Escritorio/apolloServer1",
      "filename": "/home/jcgp/Escritorio/apolloServer1/resolvers/task_resolver.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/jcgp/Escritorio/apolloServer1",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/jcgp/Escritorio/apolloServer1/resolvers/task_resolver.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/home/jcgp/Escritorio/apolloServer1/resolvers/task_resolver.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/jcgp/Escritorio/apolloServer1/resolvers",
        "sourceFileName": "task_resolver.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _graphqlRedisSubscriptions = require(\"graphql-redis-subscriptions\");\n\nvar _ioredis = _interopRequireDefault(require(\"ioredis\"));\n\nvar _graphqlResolvers = require(\"graphql-resolvers\");\n\nvar _auth_resolver = require(\"./auth_resolver.js\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar options = {\n  host: '127.0.0.1',\n  port: 6379\n};\nvar pubsub = new _graphqlRedisSubscriptions.RedisPubSub({\n  publisher: new _ioredis.default(options),\n  subscriber: new _ioredis.default(options)\n}); //subscription task\n\nvar SUB_UPDATE_TASK = 'SUB_UPDATE_TASK';\nvar SUB_DELETE_TASK = 'SUB_DELETE_TASK';\nvar ADD = 1;\nvar DELETE = 2;\nvar UPDATE = 3;\nvar _default = {\n  allowedTaskAction: {\n    CREATE: ADD,\n    ISDONE: UPDATE\n  },\n  Query: {\n    //tasks(listId: ID!): [Task]\n    tasks: function () {\n      var _tasks = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee(parent, args, _ref) {\n        var models;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                models = _ref.models;\n                _context.prev = 1;\n                _context.next = 4;\n                return models.Task.findAll({\n                  where: {\n                    listId: args.listId\n                  }\n                });\n\n              case 4:\n                return _context.abrupt(\"return\", _context.sent);\n\n              case 7:\n                _context.prev = 7;\n                _context.t0 = _context[\"catch\"](1);\n                console.log(_context.t0.errors[0].type);\n                throw new Error('Error al buscar todas las tareas');\n\n              case 11:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[1, 7]]);\n      }));\n\n      function tasks(_x, _x2, _x3) {\n        return _tasks.apply(this, arguments);\n      }\n\n      return tasks;\n    }(),\n    //task(id: ID!): Task\n    task: function () {\n      var _task = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee2(parent, args, _ref2) {\n        var models;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                models = _ref2.models;\n                _context2.prev = 1;\n                _context2.next = 4;\n                return models.Task.findOne({\n                  where: {\n                    id: args.id\n                  }\n                });\n\n              case 4:\n                return _context2.abrupt(\"return\", _context2.sent);\n\n              case 7:\n                _context2.prev = 7;\n                _context2.t0 = _context2[\"catch\"](1);\n                console.log(_context2.t0.errors[0].type);\n                throw new Error('Error al buscar una tarea');\n\n              case 11:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, null, [[1, 7]]);\n      }));\n\n      function task(_x4, _x5, _x6) {\n        return _task.apply(this, arguments);\n      }\n\n      return task;\n    }()\n  },\n  Mutation: {\n    //addTask(listId: ID!, text: String!): Task\n    addTask: (0, _graphqlResolvers.combineResolvers)(_auth_resolver.isAuthenticated,\n    /*#__PURE__*/\n    function () {\n      var _ref4 = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee3(parent, args, _ref3) {\n        var models, result, datavalues;\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                models = _ref3.models;\n                _context3.prev = 1;\n                _context3.next = 4;\n                return models.Task.create({\n                  listId: args.listId,\n                  text: args.text\n                });\n\n              case 4:\n                result = _context3.sent;\n                //publicamos la nueva tarea\n                datavalues = result.dataValues;\n                pubsub.publish(SUB_UPDATE_TASK, {\n                  updateSub: {\n                    task: datavalues,\n                    action: ADD\n                  }\n                });\n                return _context3.abrupt(\"return\", result.dataValues);\n\n              case 10:\n                _context3.prev = 10;\n                _context3.t0 = _context3[\"catch\"](1);\n                console.log(_context3.t0.errors[0].type);\n                throw new Error('Error al aÃ±adir una tarea. ' + _context3.t0.errors[0].message);\n\n              case 14:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, null, [[1, 10]]);\n      }));\n\n      return function (_x7, _x8, _x9) {\n        return _ref4.apply(this, arguments);\n      };\n    }()),\n    //deleteTask(id: [ID!]): String\n    deleteTasks: function () {\n      var _deleteTasks = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee4(parent, args, _ref5) {\n        var models, result;\n        return regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                models = _ref5.models;\n                _context4.prev = 1;\n                _context4.next = 4;\n                return models.Task.destroy({\n                  where: {\n                    id: args.id\n                  }\n                });\n\n              case 4:\n                result = _context4.sent;\n                //publicamos la tarea borrada\n                pubsub.publish(SUB_DELETE_TASK, {\n                  deleteSub: {\n                    ids: args.id\n                  }\n                });\n                return _context4.abrupt(\"return\", result);\n\n              case 9:\n                _context4.prev = 9;\n                _context4.t0 = _context4[\"catch\"](1);\n                console.log(_context4.t0.errors[0].type);\n                throw new Error(_context4.t0.errors[0].message);\n\n              case 13:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, null, [[1, 9]]);\n      }));\n\n      function deleteTasks(_x10, _x11, _x12) {\n        return _deleteTasks.apply(this, arguments);\n      }\n\n      return deleteTasks;\n    }(),\n    //deleteMultipleTasks(id_array: [ID!]!): String\n\n    /*deleteMultipleTasks: async (parent, args, {models}) => {\n        try{\n            await models.Task.destroy({\n                where:{\n                    id: args.id_array,\n                }\n            });\n             pubsub.publish(SUB_TASK, {taskSub: { task: null , action: DELETE}});\n            return \"Se han borrado todas las tareas perfectamente\"\n        }\n        catch(err){\n            throw new Error(\"Error al borrar multiples tareas\");\n        }\n    },*/\n    //markDone(id: ID!, done: Boolean!): Boolean\n    markDone: function () {\n      var _markDone = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee5(parent, args, _ref6) {\n        var models, result, modified_task;\n        return regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                models = _ref6.models;\n                _context5.prev = 1;\n                _context5.next = 4;\n                return models.Task.update({\n                  done: args.done\n                }, {\n                  where: {\n                    id: args.id\n                  }\n                });\n\n              case 4:\n                result = _context5.sent;\n                _context5.next = 7;\n                return models.Task.findOne({\n                  where: {\n                    id: args.id\n                  }\n                });\n\n              case 7:\n                modified_task = _context5.sent;\n                //publicamos la tarea modificada\n                pubsub.publish(SUB_UPDATE_TASK, {\n                  updateSub: {\n                    task: modified_task,\n                    action: UPDATE\n                  }\n                });\n\n                if (!(result == 0)) {\n                  _context5.next = 13;\n                  break;\n                }\n\n                return _context5.abrupt(\"return\", false);\n\n              case 13:\n                return _context5.abrupt(\"return\", true);\n\n              case 14:\n                _context5.next = 20;\n                break;\n\n              case 16:\n                _context5.prev = 16;\n                _context5.t0 = _context5[\"catch\"](1);\n                console.log(err.errors[0].type);\n                throw new Error(err.errors[0].message);\n\n              case 20:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, null, [[1, 16]]);\n      }));\n\n      function markDone(_x13, _x14, _x15) {\n        return _markDone.apply(this, arguments);\n      }\n\n      return markDone;\n    }()\n  },\n  Subscription: {\n    updateSub: {\n      subscribe: function subscribe() {\n        return pubsub.asyncIterator([SUB_UPDATE_TASK]);\n      }\n    },\n    deleteSub: {\n      subscribe: function subscribe() {\n        return pubsub.asyncIterator([SUB_DELETE_TASK]);\n      }\n    }\n  },\n  Task: {\n    list: function () {\n      var _list = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee6(parent, args, _ref7) {\n        var models, result;\n        return regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                models = _ref7.models;\n                _context6.prev = 1;\n                _context6.next = 4;\n                return models.List.findOne({\n                  where: {\n                    id: parent.listId\n                  }\n                });\n\n              case 4:\n                result = _context6.sent;\n                return _context6.abrupt(\"return\", result);\n\n              case 8:\n                _context6.prev = 8;\n                _context6.t0 = _context6[\"catch\"](1);\n                console.log(_context6.t0.errors[0].type);\n                throw new Error(_context6.t0.errors[0].message);\n\n              case 12:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, null, [[1, 8]]);\n      }));\n\n      function list(_x16, _x17, _x18) {\n        return _list.apply(this, arguments);\n      }\n\n      return list;\n    }()\n  }\n};\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRhc2tfcmVzb2x2ZXIuanMiXSwibmFtZXMiOlsib3B0aW9ucyIsImhvc3QiLCJwb3J0IiwicHVic3ViIiwiUmVkaXNQdWJTdWIiLCJwdWJsaXNoZXIiLCJSZWRpcyIsInN1YnNjcmliZXIiLCJTVUJfVVBEQVRFX1RBU0siLCJTVUJfREVMRVRFX1RBU0siLCJBREQiLCJERUxFVEUiLCJVUERBVEUiLCJhbGxvd2VkVGFza0FjdGlvbiIsIkNSRUFURSIsIklTRE9ORSIsIlF1ZXJ5IiwidGFza3MiLCJwYXJlbnQiLCJhcmdzIiwibW9kZWxzIiwiVGFzayIsImZpbmRBbGwiLCJ3aGVyZSIsImxpc3RJZCIsImNvbnNvbGUiLCJsb2ciLCJlcnJvcnMiLCJ0eXBlIiwiRXJyb3IiLCJ0YXNrIiwiZmluZE9uZSIsImlkIiwiTXV0YXRpb24iLCJhZGRUYXNrIiwiaXNBdXRoZW50aWNhdGVkIiwiY3JlYXRlIiwidGV4dCIsInJlc3VsdCIsImRhdGF2YWx1ZXMiLCJkYXRhVmFsdWVzIiwicHVibGlzaCIsInVwZGF0ZVN1YiIsImFjdGlvbiIsIm1lc3NhZ2UiLCJkZWxldGVUYXNrcyIsImRlc3Ryb3kiLCJkZWxldGVTdWIiLCJpZHMiLCJtYXJrRG9uZSIsInVwZGF0ZSIsImRvbmUiLCJtb2RpZmllZF90YXNrIiwiZXJyIiwiU3Vic2NyaXB0aW9uIiwic3Vic2NyaWJlIiwiYXN5bmNJdGVyYXRvciIsImxpc3QiLCJMaXN0Il0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBQ0E7O0FBRUE7O0FBQ0E7Ozs7Ozs7O0FBRUEsSUFBTUEsT0FBTyxHQUFHO0FBQ1pDLEVBQUFBLElBQUksRUFBRSxXQURNO0FBRVpDLEVBQUFBLElBQUksRUFBRTtBQUZNLENBQWhCO0FBS0EsSUFBTUMsTUFBTSxHQUFHLElBQUlDLHNDQUFKLENBQWdCO0FBQzNCQyxFQUFBQSxTQUFTLEVBQUUsSUFBSUMsZ0JBQUosQ0FBVU4sT0FBVixDQURnQjtBQUUzQk8sRUFBQUEsVUFBVSxFQUFFLElBQUlELGdCQUFKLENBQVVOLE9BQVY7QUFGZSxDQUFoQixDQUFmLEMsQ0FLQTs7QUFDQSxJQUFNUSxlQUFlLEdBQUcsaUJBQXhCO0FBQ0EsSUFBTUMsZUFBZSxHQUFHLGlCQUF4QjtBQUVBLElBQU1DLEdBQUcsR0FBRyxDQUFaO0FBQ0EsSUFBTUMsTUFBTSxHQUFHLENBQWY7QUFDQSxJQUFNQyxNQUFNLEdBQUcsQ0FBZjtlQUVjO0FBQ1ZDLEVBQUFBLGlCQUFpQixFQUFFO0FBQ2ZDLElBQUFBLE1BQU0sRUFBRUosR0FETztBQUVmSyxJQUFBQSxNQUFNLEVBQUVIO0FBRk8sR0FEVDtBQU1WSSxFQUFBQSxLQUFLLEVBQUU7QUFDSDtBQUNBQyxJQUFBQSxLQUFLO0FBQUE7QUFBQTtBQUFBLDhCQUFFLGlCQUFPQyxNQUFQLEVBQWVDLElBQWY7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQXNCQyxnQkFBQUEsTUFBdEIsUUFBc0JBLE1BQXRCO0FBQUE7QUFBQTtBQUFBLHVCQUVjQSxNQUFNLENBQUNDLElBQVAsQ0FBWUMsT0FBWixDQUFvQjtBQUM3QkMsa0JBQUFBLEtBQUssRUFBRTtBQUNIQyxvQkFBQUEsTUFBTSxFQUFFTCxJQUFJLENBQUNLO0FBRFY7QUFEc0IsaUJBQXBCLENBRmQ7O0FBQUE7QUFBQTs7QUFBQTtBQUFBO0FBQUE7QUFTQ0MsZ0JBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLFlBQUlDLE1BQUosQ0FBVyxDQUFYLEVBQWNDLElBQTFCO0FBVEQsc0JBVU8sSUFBSUMsS0FBSixDQUFVLGtDQUFWLENBVlA7O0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsT0FBRjs7QUFBQTtBQUFBO0FBQUE7O0FBQUE7QUFBQSxPQUZGO0FBaUJIO0FBQ0FDLElBQUFBLElBQUk7QUFBQTtBQUFBO0FBQUEsOEJBQUUsa0JBQU9aLE1BQVAsRUFBZUMsSUFBZjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBc0JDLGdCQUFBQSxNQUF0QixTQUFzQkEsTUFBdEI7QUFBQTtBQUFBO0FBQUEsdUJBRWVBLE1BQU0sQ0FBQ0MsSUFBUCxDQUFZVSxPQUFaLENBQW9CO0FBQzdCUixrQkFBQUEsS0FBSyxFQUFFO0FBQ0hTLG9CQUFBQSxFQUFFLEVBQUViLElBQUksQ0FBQ2E7QUFETjtBQURzQixpQkFBcEIsQ0FGZjs7QUFBQTtBQUFBOztBQUFBO0FBQUE7QUFBQTtBQVNFUCxnQkFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVksYUFBSUMsTUFBSixDQUFXLENBQVgsRUFBY0MsSUFBMUI7QUFURixzQkFVUSxJQUFJQyxLQUFKLENBQVUsMkJBQVYsQ0FWUjs7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxPQUFGOztBQUFBO0FBQUE7QUFBQTs7QUFBQTtBQUFBO0FBbEJELEdBTkc7QUF5Q1ZJLEVBQUFBLFFBQVEsRUFBRTtBQUNOO0FBQ0FDLElBQUFBLE9BQU8sRUFBRSx3Q0FDTEMsOEJBREs7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLDhCQUVMLGtCQUFPakIsTUFBUCxFQUFlQyxJQUFmO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFzQkMsZ0JBQUFBLE1BQXRCLFNBQXNCQSxNQUF0QjtBQUFBO0FBQUE7QUFBQSx1QkFFMkJBLE1BQU0sQ0FBQ0MsSUFBUCxDQUFZZSxNQUFaLENBQW1CO0FBQ2xDWixrQkFBQUEsTUFBTSxFQUFFTCxJQUFJLENBQUNLLE1BRHFCO0FBRWxDYSxrQkFBQUEsSUFBSSxFQUFFbEIsSUFBSSxDQUFDa0I7QUFGdUIsaUJBQW5CLENBRjNCOztBQUFBO0FBRVlDLGdCQUFBQSxNQUZaO0FBT1E7QUFDSUMsZ0JBQUFBLFVBUlosR0FReUJELE1BQU0sQ0FBQ0UsVUFSaEM7QUFTUXJDLGdCQUFBQSxNQUFNLENBQUNzQyxPQUFQLENBQWVqQyxlQUFmLEVBQWdDO0FBQUVrQyxrQkFBQUEsU0FBUyxFQUFFO0FBQ3pDWixvQkFBQUEsSUFBSSxFQUFFUyxVQURtQztBQUV6Q0ksb0JBQUFBLE1BQU0sRUFBRWpDO0FBRmlDO0FBQWIsaUJBQWhDO0FBVFIsa0RBY2U0QixNQUFNLENBQUNFLFVBZHRCOztBQUFBO0FBQUE7QUFBQTtBQWlCUWYsZ0JBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLGFBQUlDLE1BQUosQ0FBVyxDQUFYLEVBQWNDLElBQTFCO0FBakJSLHNCQWtCYyxJQUFJQyxLQUFKLENBQVUsZ0NBQWdDLGFBQUlGLE1BQUosQ0FBVyxDQUFYLEVBQWNpQixPQUF4RCxDQWxCZDs7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxPQUZLOztBQUFBO0FBQUE7QUFBQTtBQUFBLFFBRkg7QUE0Qk47QUFDQUMsSUFBQUEsV0FBVztBQUFBO0FBQUE7QUFBQSw4QkFBRSxrQkFBTzNCLE1BQVAsRUFBZUMsSUFBZjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBc0JDLGdCQUFBQSxNQUF0QixTQUFzQkEsTUFBdEI7QUFBQTtBQUFBO0FBQUEsdUJBRWNBLE1BQU0sQ0FBQ0MsSUFBUCxDQUFZeUIsT0FBWixDQUFvQjtBQUNuQ3ZCLGtCQUFBQSxLQUFLLEVBQUM7QUFDRlMsb0JBQUFBLEVBQUUsRUFBRWIsSUFBSSxDQUFDYTtBQURQO0FBRDZCLGlCQUFwQixDQUZkOztBQUFBO0FBRURNLGdCQUFBQSxNQUZDO0FBUUw7QUFDQW5DLGdCQUFBQSxNQUFNLENBQUNzQyxPQUFQLENBQWVoQyxlQUFmLEVBQWdDO0FBQUVzQyxrQkFBQUEsU0FBUyxFQUFFO0FBQ3pDQyxvQkFBQUEsR0FBRyxFQUFFN0IsSUFBSSxDQUFDYTtBQUQrQjtBQUFiLGlCQUFoQztBQVRLLGtEQWFFTSxNQWJGOztBQUFBO0FBQUE7QUFBQTtBQWdCTGIsZ0JBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLGFBQUlDLE1BQUosQ0FBVyxDQUFYLEVBQWNDLElBQTFCO0FBaEJLLHNCQWlCQyxJQUFJQyxLQUFKLENBQVUsYUFBSUYsTUFBSixDQUFXLENBQVgsRUFBY2lCLE9BQXhCLENBakJEOztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLE9BQUY7O0FBQUE7QUFBQTtBQUFBOztBQUFBO0FBQUEsT0E3Qkw7QUFvRE47O0FBQ0E7Ozs7Ozs7Ozs7Ozs7O0FBZ0JBO0FBQ0FLLElBQUFBLFFBQVE7QUFBQTtBQUFBO0FBQUEsOEJBQUUsa0JBQU8vQixNQUFQLEVBQWVDLElBQWY7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQXNCQyxnQkFBQUEsTUFBdEIsU0FBc0JBLE1BQXRCO0FBQUE7QUFBQTtBQUFBLHVCQUVpQkEsTUFBTSxDQUFDQyxJQUFQLENBQVk2QixNQUFaLENBQ2Y7QUFBRUMsa0JBQUFBLElBQUksRUFBRWhDLElBQUksQ0FBQ2dDO0FBQWIsaUJBRGUsRUFFZjtBQUFFNUIsa0JBQUFBLEtBQUssRUFDSDtBQUFFUyxvQkFBQUEsRUFBRSxFQUFFYixJQUFJLENBQUNhO0FBQVg7QUFESixpQkFGZSxDQUZqQjs7QUFBQTtBQUVFTSxnQkFBQUEsTUFGRjtBQUFBO0FBQUEsdUJBU3dCbEIsTUFBTSxDQUFDQyxJQUFQLENBQVlVLE9BQVosQ0FBb0I7QUFDMUNSLGtCQUFBQSxLQUFLLEVBQUU7QUFDSFMsb0JBQUFBLEVBQUUsRUFBRWIsSUFBSSxDQUFDYTtBQUROO0FBRG1DLGlCQUFwQixDQVR4Qjs7QUFBQTtBQVNFb0IsZ0JBQUFBLGFBVEY7QUFlRjtBQUNBakQsZ0JBQUFBLE1BQU0sQ0FBQ3NDLE9BQVAsQ0FBZWpDLGVBQWYsRUFBZ0M7QUFBRWtDLGtCQUFBQSxTQUFTLEVBQUU7QUFBRVosb0JBQUFBLElBQUksRUFBRXNCLGFBQVI7QUFBd0JULG9CQUFBQSxNQUFNLEVBQUUvQjtBQUFoQztBQUFiLGlCQUFoQzs7QUFoQkUsc0JBaUJDMEIsTUFBTSxJQUFJLENBakJYO0FBQUE7QUFBQTtBQUFBOztBQUFBLGtEQWtCUyxLQWxCVDs7QUFBQTtBQUFBLGtEQXFCUyxJQXJCVDs7QUFBQTtBQUFBO0FBQUE7O0FBQUE7QUFBQTtBQUFBO0FBeUJGYixnQkFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVkyQixHQUFHLENBQUMxQixNQUFKLENBQVcsQ0FBWCxFQUFjQyxJQUExQjtBQXpCRSxzQkEwQkksSUFBSUMsS0FBSixDQUFVd0IsR0FBRyxDQUFDMUIsTUFBSixDQUFXLENBQVgsRUFBY2lCLE9BQXhCLENBMUJKOztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLE9BQUY7O0FBQUE7QUFBQTtBQUFBOztBQUFBO0FBQUE7QUF0RUYsR0F6Q0E7QUE4SVZVLEVBQUFBLFlBQVksRUFBRTtBQUNWWixJQUFBQSxTQUFTLEVBQUU7QUFDUGEsTUFBQUEsU0FBUyxFQUFFLHFCQUFNO0FBQ2IsZUFBT3BELE1BQU0sQ0FBQ3FELGFBQVAsQ0FBcUIsQ0FBQ2hELGVBQUQsQ0FBckIsQ0FBUDtBQUNIO0FBSE0sS0FERDtBQU9WdUMsSUFBQUEsU0FBUyxFQUFFO0FBQ1BRLE1BQUFBLFNBQVMsRUFBRSxxQkFBTTtBQUNiLGVBQU9wRCxNQUFNLENBQUNxRCxhQUFQLENBQXFCLENBQUMvQyxlQUFELENBQXJCLENBQVA7QUFDSDtBQUhNO0FBUEQsR0E5SUo7QUE0SlZZLEVBQUFBLElBQUksRUFBRTtBQUNGb0MsSUFBQUEsSUFBSTtBQUFBO0FBQUE7QUFBQSw4QkFBRSxrQkFBT3ZDLE1BQVAsRUFBZUMsSUFBZjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBdUJDLGdCQUFBQSxNQUF2QixTQUF1QkEsTUFBdkI7QUFBQTtBQUFBO0FBQUEsdUJBRXFCQSxNQUFNLENBQUNzQyxJQUFQLENBQVkzQixPQUFaLENBQW9CO0FBQ25DUixrQkFBQUEsS0FBSyxFQUFFO0FBQ0hTLG9CQUFBQSxFQUFFLEVBQUVkLE1BQU0sQ0FBQ007QUFEUjtBQUQ0QixpQkFBcEIsQ0FGckI7O0FBQUE7QUFFTWMsZ0JBQUFBLE1BRk47QUFBQSxrREFPU0EsTUFQVDs7QUFBQTtBQUFBO0FBQUE7QUFVRWIsZ0JBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLGFBQUlDLE1BQUosQ0FBVyxDQUFYLEVBQWNDLElBQTFCO0FBVkYsc0JBV1EsSUFBSUMsS0FBSixDQUFVLGFBQUlGLE1BQUosQ0FBVyxDQUFYLEVBQWNpQixPQUF4QixDQVhSOztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLE9BQUY7O0FBQUE7QUFBQTtBQUFBOztBQUFBO0FBQUE7QUFERjtBQTVKSSxDIiwic291cmNlUm9vdCI6Ii9ob21lL2pjZ3AvRXNjcml0b3Jpby9hcG9sbG9TZXJ2ZXIxL3Jlc29sdmVycyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFJlZGlzUHViU3ViIH0gZnJvbSAnZ3JhcGhxbC1yZWRpcy1zdWJzY3JpcHRpb25zJztcbmltcG9ydCBSZWRpcyBmcm9tICdpb3JlZGlzJztcblxuaW1wb3J0IHsgY29tYmluZVJlc29sdmVycyB9IGZyb20gJ2dyYXBocWwtcmVzb2x2ZXJzJztcbmltcG9ydCB7IGlzQXV0aGVudGljYXRlZCB9IGZyb20gJy4vYXV0aF9yZXNvbHZlci5qcyc7XG5cbmNvbnN0IG9wdGlvbnMgPSB7XG4gICAgaG9zdDogJzEyNy4wLjAuMScsXG4gICAgcG9ydDogNjM3OVxufVxuXG5jb25zdCBwdWJzdWIgPSBuZXcgUmVkaXNQdWJTdWIoe1xuICAgIHB1Ymxpc2hlcjogbmV3IFJlZGlzKG9wdGlvbnMpLFxuICAgIHN1YnNjcmliZXI6IG5ldyBSZWRpcyhvcHRpb25zKVxufSk7XG5cbi8vc3Vic2NyaXB0aW9uIHRhc2tcbmNvbnN0IFNVQl9VUERBVEVfVEFTSyA9ICdTVUJfVVBEQVRFX1RBU0snO1xuY29uc3QgU1VCX0RFTEVURV9UQVNLID0gJ1NVQl9ERUxFVEVfVEFTSyc7XG5cbmNvbnN0IEFERCA9IDE7XG5jb25zdCBERUxFVEUgPSAyO1xuY29uc3QgVVBEQVRFID0gMztcblxuZXhwb3J0IGRlZmF1bHR7XG4gICAgYWxsb3dlZFRhc2tBY3Rpb246IHtcbiAgICAgICAgQ1JFQVRFOiBBREQsXG4gICAgICAgIElTRE9ORTogVVBEQVRFLFxuICAgIH0sXG5cbiAgICBRdWVyeToge1xuICAgICAgICAvL3Rhc2tzKGxpc3RJZDogSUQhKTogW1Rhc2tdXG4gICAgICAgIHRhc2tzOiBhc3luYyAocGFyZW50LCBhcmdzLCB7bW9kZWxzfSkgPT4ge1xuICAgICAgICAgICAgdHJ5e1xuICAgICAgICAgICAgICAgIHJldHVybiBhd2FpdCBtb2RlbHMuVGFzay5maW5kQWxsKHtcbiAgICAgICAgICAgICAgICAgICAgd2hlcmU6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGxpc3RJZDogYXJncy5saXN0SWQsXG4gICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjYXRjaChlcnIpe1xuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKGVyci5lcnJvcnNbMF0udHlwZSlcbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ0Vycm9yIGFsIGJ1c2NhciB0b2RhcyBsYXMgdGFyZWFzJyk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBcbiAgICAgICAgfSxcblxuICAgICAgICAvL3Rhc2soaWQ6IElEISk6IFRhc2tcbiAgICAgICAgdGFzazogYXN5bmMgKHBhcmVudCwgYXJncywge21vZGVsc30pID0+IHtcbiAgICAgICAgICAgIHRyeXtcbiAgICAgICAgICAgICAgICByZXR1cm4gYXdhaXQgbW9kZWxzLlRhc2suZmluZE9uZSh7XG4gICAgICAgICAgICAgICAgICAgIHdoZXJlOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZDogYXJncy5pZCxcbiAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNhdGNoKGVycil7XG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2coZXJyLmVycm9yc1swXS50eXBlKVxuICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcignRXJyb3IgYWwgYnVzY2FyIHVuYSB0YXJlYScpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgXG4gICAgICAgIH0sXG4gICAgfSxcblxuXG4gICAgTXV0YXRpb246IHtcbiAgICAgICAgLy9hZGRUYXNrKGxpc3RJZDogSUQhLCB0ZXh0OiBTdHJpbmchKTogVGFza1xuICAgICAgICBhZGRUYXNrOiBjb21iaW5lUmVzb2x2ZXJzKFxuICAgICAgICAgICAgaXNBdXRoZW50aWNhdGVkLFxuICAgICAgICAgICAgYXN5bmMgKHBhcmVudCwgYXJncywge21vZGVsc30pID0+IHtcbiAgICAgICAgICAgICAgICB0cnl7XG4gICAgICAgICAgICAgICAgICAgIGxldCByZXN1bHQgPSBhd2FpdCBtb2RlbHMuVGFzay5jcmVhdGUoe1xuICAgICAgICAgICAgICAgICAgICAgICAgbGlzdElkOiBhcmdzLmxpc3RJZCxcbiAgICAgICAgICAgICAgICAgICAgICAgIHRleHQ6IGFyZ3MudGV4dCxcbiAgICAgICAgICAgICAgICAgICAgfSk7ICAgIFxuICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgLy9wdWJsaWNhbW9zIGxhIG51ZXZhIHRhcmVhXG4gICAgICAgICAgICAgICAgICAgIGxldCBkYXRhdmFsdWVzID0gcmVzdWx0LmRhdGFWYWx1ZXNcbiAgICAgICAgICAgICAgICAgICAgcHVic3ViLnB1Ymxpc2goU1VCX1VQREFURV9UQVNLLCB7IHVwZGF0ZVN1YjogeyBcbiAgICAgICAgICAgICAgICAgICAgICAgIHRhc2s6IGRhdGF2YWx1ZXMsXG4gICAgICAgICAgICAgICAgICAgICAgICBhY3Rpb246IEFERFxuICAgICAgICAgICAgICAgICAgICB9fSk7XG4gICAgICAgIFxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gcmVzdWx0LmRhdGFWYWx1ZXNcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgY2F0Y2goZXJyKXtcbiAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coZXJyLmVycm9yc1swXS50eXBlKVxuICAgICAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ0Vycm9yIGFsIGHDsWFkaXIgdW5hIHRhcmVhLiAnICsgZXJyLmVycm9yc1swXS5tZXNzYWdlKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICksXG5cblxuICAgICAgICAvL2RlbGV0ZVRhc2soaWQ6IFtJRCFdKTogU3RyaW5nXG4gICAgICAgIGRlbGV0ZVRhc2tzOiBhc3luYyAocGFyZW50LCBhcmdzLCB7bW9kZWxzfSkgPT4ge1xuICAgICAgICAgICAgdHJ5e1xuICAgICAgICAgICAgICAgIGxldCByZXN1bHQgPSBhd2FpdCBtb2RlbHMuVGFzay5kZXN0cm95KHtcbiAgICAgICAgICAgICAgICAgICAgd2hlcmU6e1xuICAgICAgICAgICAgICAgICAgICAgICAgaWQ6IGFyZ3MuaWQsXG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgICAgIC8vcHVibGljYW1vcyBsYSB0YXJlYSBib3JyYWRhXG4gICAgICAgICAgICAgICAgcHVic3ViLnB1Ymxpc2goU1VCX0RFTEVURV9UQVNLLCB7IGRlbGV0ZVN1YjogeyBcbiAgICAgICAgICAgICAgICAgICAgaWRzOiBhcmdzLmlkLFxuICAgICAgICAgICAgICAgIH19KTtcblxuICAgICAgICAgICAgICAgIHJldHVybiByZXN1bHRcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNhdGNoKGVycil7XG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2coZXJyLmVycm9yc1swXS50eXBlKVxuICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihlcnIuZXJyb3JzWzBdLm1lc3NhZ2UpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgXG4gICAgICAgIH0sXG5cblxuICAgICAgICAvL2RlbGV0ZU11bHRpcGxlVGFza3MoaWRfYXJyYXk6IFtJRCFdISk6IFN0cmluZ1xuICAgICAgICAvKmRlbGV0ZU11bHRpcGxlVGFza3M6IGFzeW5jIChwYXJlbnQsIGFyZ3MsIHttb2RlbHN9KSA9PiB7XG4gICAgICAgICAgICB0cnl7XG4gICAgICAgICAgICAgICAgYXdhaXQgbW9kZWxzLlRhc2suZGVzdHJveSh7XG4gICAgICAgICAgICAgICAgICAgIHdoZXJlOntcbiAgICAgICAgICAgICAgICAgICAgICAgIGlkOiBhcmdzLmlkX2FycmF5LFxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgICAgICBwdWJzdWIucHVibGlzaChTVUJfVEFTSywge3Rhc2tTdWI6IHsgdGFzazogbnVsbCAsIGFjdGlvbjogREVMRVRFfX0pO1xuICAgICAgICAgICAgICAgIHJldHVybiBcIlNlIGhhbiBib3JyYWRvIHRvZGFzIGxhcyB0YXJlYXMgcGVyZmVjdGFtZW50ZVwiXG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjYXRjaChlcnIpe1xuICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcIkVycm9yIGFsIGJvcnJhciBtdWx0aXBsZXMgdGFyZWFzXCIpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9LCovXG5cbiAgICAgICAgLy9tYXJrRG9uZShpZDogSUQhLCBkb25lOiBCb29sZWFuISk6IEJvb2xlYW5cbiAgICAgICAgbWFya0RvbmU6IGFzeW5jIChwYXJlbnQsIGFyZ3MsIHttb2RlbHN9KSA9PiB7XG4gICAgICAgICAgICB0cnl7XG4gICAgICAgICAgICAgICAgbGV0IHJlc3VsdCA9IGF3YWl0IG1vZGVscy5UYXNrLnVwZGF0ZShcbiAgICAgICAgICAgICAgICAgICAgeyBkb25lOiBhcmdzLmRvbmUgfSwgXG4gICAgICAgICAgICAgICAgICAgIHsgd2hlcmU6XG4gICAgICAgICAgICAgICAgICAgICAgICB7IGlkOiBhcmdzLmlkIH0sXG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICApO1xuXG4gICAgICAgICAgICAgICAgbGV0IG1vZGlmaWVkX3Rhc2sgPSBhd2FpdCBtb2RlbHMuVGFzay5maW5kT25lKHtcbiAgICAgICAgICAgICAgICAgICAgd2hlcmU6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlkOiBhcmdzLmlkLFxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSlcblxuICAgICAgICAgICAgICAgIC8vcHVibGljYW1vcyBsYSB0YXJlYSBtb2RpZmljYWRhXG4gICAgICAgICAgICAgICAgcHVic3ViLnB1Ymxpc2goU1VCX1VQREFURV9UQVNLLCB7IHVwZGF0ZVN1YjogeyB0YXNrOiBtb2RpZmllZF90YXNrICwgYWN0aW9uOiBVUERBVEUgfX0pO1xuICAgICAgICAgICAgICAgIGlmKHJlc3VsdCA9PSAwKXtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBlbHNle1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjYXRjaHtcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhlcnIuZXJyb3JzWzBdLnR5cGUpXG4gICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGVyci5lcnJvcnNbMF0ubWVzc2FnZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0sXG4gICAgfSxcblxuICAgIFN1YnNjcmlwdGlvbjoge1xuICAgICAgICB1cGRhdGVTdWI6IHtcbiAgICAgICAgICAgIHN1YnNjcmliZTogKCkgPT4geyBcbiAgICAgICAgICAgICAgICByZXR1cm4gcHVic3ViLmFzeW5jSXRlcmF0b3IoW1NVQl9VUERBVEVfVEFTS10pIFxuICAgICAgICAgICAgfSxcbiAgICAgICAgfSxcblxuICAgICAgICBkZWxldGVTdWI6IHtcbiAgICAgICAgICAgIHN1YnNjcmliZTogKCkgPT4ge1xuICAgICAgICAgICAgICAgIHJldHVybiBwdWJzdWIuYXN5bmNJdGVyYXRvcihbU1VCX0RFTEVURV9UQVNLXSlcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICB9LFxuXG4gICAgVGFzazoge1xuICAgICAgICBsaXN0OiBhc3luYyAocGFyZW50LCBhcmdzLCB7IG1vZGVscyB9KSA9PiB7XG4gICAgICAgICAgICB0cnl7XG4gICAgICAgICAgICAgICAgbGV0IHJlc3VsdCA9IGF3YWl0IG1vZGVscy5MaXN0LmZpbmRPbmUoe1xuICAgICAgICAgICAgICAgICAgICB3aGVyZToge1xuICAgICAgICAgICAgICAgICAgICAgICAgaWQ6IHBhcmVudC5saXN0SWQsXG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjYXRjaChlcnIpe1xuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKGVyci5lcnJvcnNbMF0udHlwZSlcbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoZXJyLmVycm9yc1swXS5tZXNzYWdlKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIFxuICAgICAgICB9XG4gICAgfVxufTtcblxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "task_resolver.js"
      ],
      "names": [
        "options",
        "host",
        "port",
        "pubsub",
        "RedisPubSub",
        "publisher",
        "Redis",
        "subscriber",
        "SUB_UPDATE_TASK",
        "SUB_DELETE_TASK",
        "ADD",
        "DELETE",
        "UPDATE",
        "allowedTaskAction",
        "CREATE",
        "ISDONE",
        "Query",
        "tasks",
        "parent",
        "args",
        "models",
        "Task",
        "findAll",
        "where",
        "listId",
        "console",
        "log",
        "errors",
        "type",
        "Error",
        "task",
        "findOne",
        "id",
        "Mutation",
        "addTask",
        "isAuthenticated",
        "create",
        "text",
        "result",
        "datavalues",
        "dataValues",
        "publish",
        "updateSub",
        "action",
        "message",
        "deleteTasks",
        "destroy",
        "deleteSub",
        "ids",
        "markDone",
        "update",
        "done",
        "modified_task",
        "err",
        "Subscription",
        "subscribe",
        "asyncIterator",
        "list",
        "List"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AAEA;;AACA;;;;;;;;AAEA,IAAMA,OAAO,GAAG;AACZC,EAAAA,IAAI,EAAE,WADM;AAEZC,EAAAA,IAAI,EAAE;AAFM,CAAhB;AAKA,IAAMC,MAAM,GAAG,IAAIC,sCAAJ,CAAgB;AAC3BC,EAAAA,SAAS,EAAE,IAAIC,gBAAJ,CAAUN,OAAV,CADgB;AAE3BO,EAAAA,UAAU,EAAE,IAAID,gBAAJ,CAAUN,OAAV;AAFe,CAAhB,CAAf,C,CAKA;;AACA,IAAMQ,eAAe,GAAG,iBAAxB;AACA,IAAMC,eAAe,GAAG,iBAAxB;AAEA,IAAMC,GAAG,GAAG,CAAZ;AACA,IAAMC,MAAM,GAAG,CAAf;AACA,IAAMC,MAAM,GAAG,CAAf;eAEc;AACVC,EAAAA,iBAAiB,EAAE;AACfC,IAAAA,MAAM,EAAEJ,GADO;AAEfK,IAAAA,MAAM,EAAEH;AAFO,GADT;AAMVI,EAAAA,KAAK,EAAE;AACH;AACAC,IAAAA,KAAK;AAAA;AAAA;AAAA,8BAAE,iBAAOC,MAAP,EAAeC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAsBC,gBAAAA,MAAtB,QAAsBA,MAAtB;AAAA;AAAA;AAAA,uBAEcA,MAAM,CAACC,IAAP,CAAYC,OAAZ,CAAoB;AAC7BC,kBAAAA,KAAK,EAAE;AACHC,oBAAAA,MAAM,EAAEL,IAAI,CAACK;AADV;AADsB,iBAApB,CAFd;;AAAA;AAAA;;AAAA;AAAA;AAAA;AASCC,gBAAAA,OAAO,CAACC,GAAR,CAAY,YAAIC,MAAJ,CAAW,CAAX,EAAcC,IAA1B;AATD,sBAUO,IAAIC,KAAJ,CAAU,kCAAV,CAVP;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA,OAFF;AAiBH;AACAC,IAAAA,IAAI;AAAA;AAAA;AAAA,8BAAE,kBAAOZ,MAAP,EAAeC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAsBC,gBAAAA,MAAtB,SAAsBA,MAAtB;AAAA;AAAA;AAAA,uBAEeA,MAAM,CAACC,IAAP,CAAYU,OAAZ,CAAoB;AAC7BR,kBAAAA,KAAK,EAAE;AACHS,oBAAAA,EAAE,EAAEb,IAAI,CAACa;AADN;AADsB,iBAApB,CAFf;;AAAA;AAAA;;AAAA;AAAA;AAAA;AASEP,gBAAAA,OAAO,CAACC,GAAR,CAAY,aAAIC,MAAJ,CAAW,CAAX,EAAcC,IAA1B;AATF,sBAUQ,IAAIC,KAAJ,CAAU,2BAAV,CAVR;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAlBD,GANG;AAyCVI,EAAAA,QAAQ,EAAE;AACN;AACAC,IAAAA,OAAO,EAAE,wCACLC,8BADK;AAAA;AAAA;AAAA;AAAA;AAAA,8BAEL,kBAAOjB,MAAP,EAAeC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAsBC,gBAAAA,MAAtB,SAAsBA,MAAtB;AAAA;AAAA;AAAA,uBAE2BA,MAAM,CAACC,IAAP,CAAYe,MAAZ,CAAmB;AAClCZ,kBAAAA,MAAM,EAAEL,IAAI,CAACK,MADqB;AAElCa,kBAAAA,IAAI,EAAElB,IAAI,CAACkB;AAFuB,iBAAnB,CAF3B;;AAAA;AAEYC,gBAAAA,MAFZ;AAOQ;AACIC,gBAAAA,UARZ,GAQyBD,MAAM,CAACE,UARhC;AASQrC,gBAAAA,MAAM,CAACsC,OAAP,CAAejC,eAAf,EAAgC;AAAEkC,kBAAAA,SAAS,EAAE;AACzCZ,oBAAAA,IAAI,EAAES,UADmC;AAEzCI,oBAAAA,MAAM,EAAEjC;AAFiC;AAAb,iBAAhC;AATR,kDAce4B,MAAM,CAACE,UAdtB;;AAAA;AAAA;AAAA;AAiBQf,gBAAAA,OAAO,CAACC,GAAR,CAAY,aAAIC,MAAJ,CAAW,CAAX,EAAcC,IAA1B;AAjBR,sBAkBc,IAAIC,KAAJ,CAAU,gCAAgC,aAAIF,MAAJ,CAAW,CAAX,EAAciB,OAAxD,CAlBd;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAFK;;AAAA;AAAA;AAAA;AAAA,QAFH;AA4BN;AACAC,IAAAA,WAAW;AAAA;AAAA;AAAA,8BAAE,kBAAO3B,MAAP,EAAeC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAsBC,gBAAAA,MAAtB,SAAsBA,MAAtB;AAAA;AAAA;AAAA,uBAEcA,MAAM,CAACC,IAAP,CAAYyB,OAAZ,CAAoB;AACnCvB,kBAAAA,KAAK,EAAC;AACFS,oBAAAA,EAAE,EAAEb,IAAI,CAACa;AADP;AAD6B,iBAApB,CAFd;;AAAA;AAEDM,gBAAAA,MAFC;AAQL;AACAnC,gBAAAA,MAAM,CAACsC,OAAP,CAAehC,eAAf,EAAgC;AAAEsC,kBAAAA,SAAS,EAAE;AACzCC,oBAAAA,GAAG,EAAE7B,IAAI,CAACa;AAD+B;AAAb,iBAAhC;AATK,kDAaEM,MAbF;;AAAA;AAAA;AAAA;AAgBLb,gBAAAA,OAAO,CAACC,GAAR,CAAY,aAAIC,MAAJ,CAAW,CAAX,EAAcC,IAA1B;AAhBK,sBAiBC,IAAIC,KAAJ,CAAU,aAAIF,MAAJ,CAAW,CAAX,EAAciB,OAAxB,CAjBD;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA,OA7BL;AAoDN;;AACA;;;;;;;;;;;;;;AAgBA;AACAK,IAAAA,QAAQ;AAAA;AAAA;AAAA,8BAAE,kBAAO/B,MAAP,EAAeC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAsBC,gBAAAA,MAAtB,SAAsBA,MAAtB;AAAA;AAAA;AAAA,uBAEiBA,MAAM,CAACC,IAAP,CAAY6B,MAAZ,CACf;AAAEC,kBAAAA,IAAI,EAAEhC,IAAI,CAACgC;AAAb,iBADe,EAEf;AAAE5B,kBAAAA,KAAK,EACH;AAAES,oBAAAA,EAAE,EAAEb,IAAI,CAACa;AAAX;AADJ,iBAFe,CAFjB;;AAAA;AAEEM,gBAAAA,MAFF;AAAA;AAAA,uBASwBlB,MAAM,CAACC,IAAP,CAAYU,OAAZ,CAAoB;AAC1CR,kBAAAA,KAAK,EAAE;AACHS,oBAAAA,EAAE,EAAEb,IAAI,CAACa;AADN;AADmC,iBAApB,CATxB;;AAAA;AASEoB,gBAAAA,aATF;AAeF;AACAjD,gBAAAA,MAAM,CAACsC,OAAP,CAAejC,eAAf,EAAgC;AAAEkC,kBAAAA,SAAS,EAAE;AAAEZ,oBAAAA,IAAI,EAAEsB,aAAR;AAAwBT,oBAAAA,MAAM,EAAE/B;AAAhC;AAAb,iBAAhC;;AAhBE,sBAiBC0B,MAAM,IAAI,CAjBX;AAAA;AAAA;AAAA;;AAAA,kDAkBS,KAlBT;;AAAA;AAAA,kDAqBS,IArBT;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAyBFb,gBAAAA,OAAO,CAACC,GAAR,CAAY2B,GAAG,CAAC1B,MAAJ,CAAW,CAAX,EAAcC,IAA1B;AAzBE,sBA0BI,IAAIC,KAAJ,CAAUwB,GAAG,CAAC1B,MAAJ,CAAW,CAAX,EAAciB,OAAxB,CA1BJ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAtEF,GAzCA;AA8IVU,EAAAA,YAAY,EAAE;AACVZ,IAAAA,SAAS,EAAE;AACPa,MAAAA,SAAS,EAAE,qBAAM;AACb,eAAOpD,MAAM,CAACqD,aAAP,CAAqB,CAAChD,eAAD,CAArB,CAAP;AACH;AAHM,KADD;AAOVuC,IAAAA,SAAS,EAAE;AACPQ,MAAAA,SAAS,EAAE,qBAAM;AACb,eAAOpD,MAAM,CAACqD,aAAP,CAAqB,CAAC/C,eAAD,CAArB,CAAP;AACH;AAHM;AAPD,GA9IJ;AA4JVY,EAAAA,IAAI,EAAE;AACFoC,IAAAA,IAAI;AAAA;AAAA;AAAA,8BAAE,kBAAOvC,MAAP,EAAeC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuBC,gBAAAA,MAAvB,SAAuBA,MAAvB;AAAA;AAAA;AAAA,uBAEqBA,MAAM,CAACsC,IAAP,CAAY3B,OAAZ,CAAoB;AACnCR,kBAAAA,KAAK,EAAE;AACHS,oBAAAA,EAAE,EAAEd,MAAM,CAACM;AADR;AAD4B,iBAApB,CAFrB;;AAAA;AAEMc,gBAAAA,MAFN;AAAA,kDAOSA,MAPT;;AAAA;AAAA;AAAA;AAUEb,gBAAAA,OAAO,CAACC,GAAR,CAAY,aAAIC,MAAJ,CAAW,CAAX,EAAcC,IAA1B;AAVF,sBAWQ,IAAIC,KAAJ,CAAU,aAAIF,MAAJ,CAAW,CAAX,EAAciB,OAAxB,CAXR;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA;AADF;AA5JI,C",
      "sourceRoot": "/home/jcgp/Escritorio/apolloServer1/resolvers",
      "sourcesContent": [
        "import { RedisPubSub } from 'graphql-redis-subscriptions';\nimport Redis from 'ioredis';\n\nimport { combineResolvers } from 'graphql-resolvers';\nimport { isAuthenticated } from './auth_resolver.js';\n\nconst options = {\n    host: '127.0.0.1',\n    port: 6379\n}\n\nconst pubsub = new RedisPubSub({\n    publisher: new Redis(options),\n    subscriber: new Redis(options)\n});\n\n//subscription task\nconst SUB_UPDATE_TASK = 'SUB_UPDATE_TASK';\nconst SUB_DELETE_TASK = 'SUB_DELETE_TASK';\n\nconst ADD = 1;\nconst DELETE = 2;\nconst UPDATE = 3;\n\nexport default{\n    allowedTaskAction: {\n        CREATE: ADD,\n        ISDONE: UPDATE,\n    },\n\n    Query: {\n        //tasks(listId: ID!): [Task]\n        tasks: async (parent, args, {models}) => {\n            try{\n                return await models.Task.findAll({\n                    where: {\n                        listId: args.listId,\n                    },\n                });\n            }\n            catch(err){\n                console.log(err.errors[0].type)\n                throw new Error('Error al buscar todas las tareas');\n            }\n            \n        },\n\n        //task(id: ID!): Task\n        task: async (parent, args, {models}) => {\n            try{\n                return await models.Task.findOne({\n                    where: {\n                        id: args.id,\n                    },\n                });\n            }\n            catch(err){\n                console.log(err.errors[0].type)\n                throw new Error('Error al buscar una tarea');\n            }\n            \n        },\n    },\n\n\n    Mutation: {\n        //addTask(listId: ID!, text: String!): Task\n        addTask: combineResolvers(\n            isAuthenticated,\n            async (parent, args, {models}) => {\n                try{\n                    let result = await models.Task.create({\n                        listId: args.listId,\n                        text: args.text,\n                    });    \n        \n                    //publicamos la nueva tarea\n                    let datavalues = result.dataValues\n                    pubsub.publish(SUB_UPDATE_TASK, { updateSub: { \n                        task: datavalues,\n                        action: ADD\n                    }});\n        \n                    return result.dataValues\n                }\n                catch(err){\n                    console.log(err.errors[0].type)\n                    throw new Error('Error al aÃ±adir una tarea. ' + err.errors[0].message);\n                }\n            }\n        ),\n\n\n        //deleteTask(id: [ID!]): String\n        deleteTasks: async (parent, args, {models}) => {\n            try{\n                let result = await models.Task.destroy({\n                    where:{\n                        id: args.id,\n                    }\n                });\n\n                //publicamos la tarea borrada\n                pubsub.publish(SUB_DELETE_TASK, { deleteSub: { \n                    ids: args.id,\n                }});\n\n                return result\n            }\n            catch(err){\n                console.log(err.errors[0].type)\n                throw new Error(err.errors[0].message);\n            }\n            \n        },\n\n\n        //deleteMultipleTasks(id_array: [ID!]!): String\n        /*deleteMultipleTasks: async (parent, args, {models}) => {\n            try{\n                await models.Task.destroy({\n                    where:{\n                        id: args.id_array,\n                    }\n                });\n\n                pubsub.publish(SUB_TASK, {taskSub: { task: null , action: DELETE}});\n                return \"Se han borrado todas las tareas perfectamente\"\n            }\n            catch(err){\n                throw new Error(\"Error al borrar multiples tareas\");\n            }\n        },*/\n\n        //markDone(id: ID!, done: Boolean!): Boolean\n        markDone: async (parent, args, {models}) => {\n            try{\n                let result = await models.Task.update(\n                    { done: args.done }, \n                    { where:\n                        { id: args.id },\n                    }\n                );\n\n                let modified_task = await models.Task.findOne({\n                    where: {\n                        id: args.id,\n                    }\n                })\n\n                //publicamos la tarea modificada\n                pubsub.publish(SUB_UPDATE_TASK, { updateSub: { task: modified_task , action: UPDATE }});\n                if(result == 0){\n                    return false;\n                }\n                else{\n                    return true;\n                }\n            }\n            catch{\n                console.log(err.errors[0].type)\n                throw new Error(err.errors[0].message);\n            }\n        },\n    },\n\n    Subscription: {\n        updateSub: {\n            subscribe: () => { \n                return pubsub.asyncIterator([SUB_UPDATE_TASK]) \n            },\n        },\n\n        deleteSub: {\n            subscribe: () => {\n                return pubsub.asyncIterator([SUB_DELETE_TASK])\n            }\n        },\n    },\n\n    Task: {\n        list: async (parent, args, { models }) => {\n            try{\n                let result = await models.List.findOne({\n                    where: {\n                        id: parent.listId,\n                    }\n                })\n                return result;\n            }\n            catch(err){\n                console.log(err.errors[0].type)\n                throw new Error(err.errors[0].message);\n            }\n            \n        }\n    }\n};\n\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1553692951148
  },
  "{\"sourceRoot\":\"/home/jcgp/Escritorio/apolloServer1/models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/jcgp/Escritorio/apolloServer1\",\"filename\":\"/home/jcgp/Escritorio/apolloServer1/models/models.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/jcgp/Escritorio/apolloServer1\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/jcgp/Escritorio/apolloServer1/models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/jcgp/Escritorio/apolloServer1",
      "filename": "/home/jcgp/Escritorio/apolloServer1/models/models.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/jcgp/Escritorio/apolloServer1",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/jcgp/Escritorio/apolloServer1/models/models.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/home/jcgp/Escritorio/apolloServer1/models/models.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/jcgp/Escritorio/apolloServer1/models",
        "sourceFileName": "models.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.sequelize = void 0;\n\nvar _sequelize = _interopRequireDefault(require(\"sequelize\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar sequelize = new _sequelize.default( //database\n'tododb', //database user\n'postgres', //database password\n'testing', {\n  dialect: 'postgres',\n  port: 5432\n});\nexports.sequelize = sequelize;\nvar models = {\n  List: sequelize.import('./list_model.js'),\n  Task: sequelize.import('./task_model.js'),\n  User: sequelize.import('./user_model.js')\n};\nObject.keys(models).forEach(function (key) {\n  if ('associate' in models[key]) {\n    models[key].associate(models);\n  }\n});\nvar _default = models;\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1vZGVscy5qcyJdLCJuYW1lcyI6WyJzZXF1ZWxpemUiLCJTZXF1ZWxpemUiLCJkaWFsZWN0IiwicG9ydCIsIm1vZGVscyIsIkxpc3QiLCJpbXBvcnQiLCJUYXNrIiwiVXNlciIsIk9iamVjdCIsImtleXMiLCJmb3JFYWNoIiwia2V5IiwiYXNzb2NpYXRlIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQ0E7Ozs7QUFFQSxJQUFNQSxTQUFTLEdBQUcsSUFBSUMsa0JBQUosRUFDZDtBQUNBLFFBRmMsRUFJZDtBQUNBLFVBTGMsRUFPZDtBQUNBLFNBUmMsRUFVZDtBQUNJQyxFQUFBQSxPQUFPLEVBQUUsVUFEYjtBQUVJQyxFQUFBQSxJQUFJLEVBQUU7QUFGVixDQVZjLENBQWxCOztBQWlCQSxJQUFNQyxNQUFNLEdBQUc7QUFDWEMsRUFBQUEsSUFBSSxFQUFFTCxTQUFTLENBQUNNLE1BQVYsQ0FBaUIsaUJBQWpCLENBREs7QUFFWEMsRUFBQUEsSUFBSSxFQUFFUCxTQUFTLENBQUNNLE1BQVYsQ0FBaUIsaUJBQWpCLENBRks7QUFHWEUsRUFBQUEsSUFBSSxFQUFFUixTQUFTLENBQUNNLE1BQVYsQ0FBaUIsaUJBQWpCO0FBSEssQ0FBZjtBQU1BRyxNQUFNLENBQUNDLElBQVAsQ0FBWU4sTUFBWixFQUFvQk8sT0FBcEIsQ0FBNEIsVUFBQUMsR0FBRyxFQUFJO0FBQy9CLE1BQUksZUFBZVIsTUFBTSxDQUFDUSxHQUFELENBQXpCLEVBQWdDO0FBQzlCUixJQUFBQSxNQUFNLENBQUNRLEdBQUQsQ0FBTixDQUFZQyxTQUFaLENBQXNCVCxNQUF0QjtBQUNEO0FBQ0osQ0FKRDtlQVFlQSxNIiwic291cmNlUm9vdCI6Ii9ob21lL2pjZ3AvRXNjcml0b3Jpby9hcG9sbG9TZXJ2ZXIxL21vZGVscyIsInNvdXJjZXNDb250ZW50IjpbIlxuaW1wb3J0IFNlcXVlbGl6ZSBmcm9tICdzZXF1ZWxpemUnO1xuXG5jb25zdCBzZXF1ZWxpemUgPSBuZXcgU2VxdWVsaXplKFxuICAgIC8vZGF0YWJhc2VcbiAgICAndG9kb2RiJyxcblxuICAgIC8vZGF0YWJhc2UgdXNlclxuICAgICdwb3N0Z3JlcycsXG5cbiAgICAvL2RhdGFiYXNlIHBhc3N3b3JkXG4gICAgJ3Rlc3RpbmcnLFxuICBcbiAgICB7XG4gICAgICAgIGRpYWxlY3Q6ICdwb3N0Z3JlcycsXG4gICAgICAgIHBvcnQ6IDU0MzIsXG4gICAgfSxcbik7XG5cblxuY29uc3QgbW9kZWxzID0ge1xuICAgIExpc3Q6IHNlcXVlbGl6ZS5pbXBvcnQoJy4vbGlzdF9tb2RlbC5qcycpLFxuICAgIFRhc2s6IHNlcXVlbGl6ZS5pbXBvcnQoJy4vdGFza19tb2RlbC5qcycpLFxuICAgIFVzZXI6IHNlcXVlbGl6ZS5pbXBvcnQoJy4vdXNlcl9tb2RlbC5qcycpXG59O1xuICBcbk9iamVjdC5rZXlzKG1vZGVscykuZm9yRWFjaChrZXkgPT4ge1xuICAgIGlmICgnYXNzb2NpYXRlJyBpbiBtb2RlbHNba2V5XSkge1xuICAgICAgbW9kZWxzW2tleV0uYXNzb2NpYXRlKG1vZGVscyk7XG4gICAgfVxufSk7XG4gIFxuZXhwb3J0IHsgc2VxdWVsaXplIH07XG4gIFxuZXhwb3J0IGRlZmF1bHQgbW9kZWxzO1xuICAiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "models.js"
      ],
      "names": [
        "sequelize",
        "Sequelize",
        "dialect",
        "port",
        "models",
        "List",
        "import",
        "Task",
        "User",
        "Object",
        "keys",
        "forEach",
        "key",
        "associate"
      ],
      "mappings": ";;;;;;;AACA;;;;AAEA,IAAMA,SAAS,GAAG,IAAIC,kBAAJ,EACd;AACA,QAFc,EAId;AACA,UALc,EAOd;AACA,SARc,EAUd;AACIC,EAAAA,OAAO,EAAE,UADb;AAEIC,EAAAA,IAAI,EAAE;AAFV,CAVc,CAAlB;;AAiBA,IAAMC,MAAM,GAAG;AACXC,EAAAA,IAAI,EAAEL,SAAS,CAACM,MAAV,CAAiB,iBAAjB,CADK;AAEXC,EAAAA,IAAI,EAAEP,SAAS,CAACM,MAAV,CAAiB,iBAAjB,CAFK;AAGXE,EAAAA,IAAI,EAAER,SAAS,CAACM,MAAV,CAAiB,iBAAjB;AAHK,CAAf;AAMAG,MAAM,CAACC,IAAP,CAAYN,MAAZ,EAAoBO,OAApB,CAA4B,UAAAC,GAAG,EAAI;AAC/B,MAAI,eAAeR,MAAM,CAACQ,GAAD,CAAzB,EAAgC;AAC9BR,IAAAA,MAAM,CAACQ,GAAD,CAAN,CAAYC,SAAZ,CAAsBT,MAAtB;AACD;AACJ,CAJD;eAQeA,M",
      "sourceRoot": "/home/jcgp/Escritorio/apolloServer1/models",
      "sourcesContent": [
        "\nimport Sequelize from 'sequelize';\n\nconst sequelize = new Sequelize(\n    //database\n    'tododb',\n\n    //database user\n    'postgres',\n\n    //database password\n    'testing',\n  \n    {\n        dialect: 'postgres',\n        port: 5432,\n    },\n);\n\n\nconst models = {\n    List: sequelize.import('./list_model.js'),\n    Task: sequelize.import('./task_model.js'),\n    User: sequelize.import('./user_model.js')\n};\n  \nObject.keys(models).forEach(key => {\n    if ('associate' in models[key]) {\n      models[key].associate(models);\n    }\n});\n  \nexport { sequelize };\n  \nexport default models;\n  "
      ]
    },
    "sourceType": "script",
    "mtime": 1553610496969
  },
  "{\"sourceRoot\":\"/home/jcgp/Escritorio/apolloServer1/models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/jcgp/Escritorio/apolloServer1\",\"filename\":\"/home/jcgp/Escritorio/apolloServer1/models/user_model.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/jcgp/Escritorio/apolloServer1\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/jcgp/Escritorio/apolloServer1/models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/jcgp/Escritorio/apolloServer1",
      "filename": "/home/jcgp/Escritorio/apolloServer1/models/user_model.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/jcgp/Escritorio/apolloServer1",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/jcgp/Escritorio/apolloServer1/models/user_model.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/home/jcgp/Escritorio/apolloServer1/models/user_model.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/jcgp/Escritorio/apolloServer1/models",
        "sourceFileName": "user_model.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _bcrypt = _interopRequireDefault(require(\"bcrypt\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar SALT_ROUND = 10;\n\nvar user = function user(sequelize, DataTypes) {\n  var User = sequelize.define('user', {\n    username: {\n      type: DataTypes.STRING,\n      allowNull: false\n    },\n    email: {\n      type: DataTypes.STRING,\n      unique: true,\n      allowNull: false,\n      validate: {\n        notEmpty: true,\n        isEmail: true\n      }\n    },\n    password: {\n      type: DataTypes.STRING,\n      allowNull: false,\n      validate: {\n        notEmpty: true,\n        len: [3, 16]\n      }\n    }\n  });\n\n  User.associate = function (models) {\n    User.hasMany(models.Task, {\n      onDelete: 'SET NULL'\n    });\n    User.hasMany(models.List, {\n      onDelete: ''\n    });\n  };\n\n  User.beforeCreate(\n  /*#__PURE__*/\n  function () {\n    var _ref = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee(user) {\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _bcrypt.default.hash(user.password, SALT_ROUND);\n\n            case 2:\n              user.password = _context.sent;\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }());\n  return User;\n};\n\nvar _default = user;\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVzZXJfbW9kZWwuanMiXSwibmFtZXMiOlsiU0FMVF9ST1VORCIsInVzZXIiLCJzZXF1ZWxpemUiLCJEYXRhVHlwZXMiLCJVc2VyIiwiZGVmaW5lIiwidXNlcm5hbWUiLCJ0eXBlIiwiU1RSSU5HIiwiYWxsb3dOdWxsIiwiZW1haWwiLCJ1bmlxdWUiLCJ2YWxpZGF0ZSIsIm5vdEVtcHR5IiwiaXNFbWFpbCIsInBhc3N3b3JkIiwibGVuIiwiYXNzb2NpYXRlIiwibW9kZWxzIiwiaGFzTWFueSIsIlRhc2siLCJvbkRlbGV0ZSIsIkxpc3QiLCJiZWZvcmVDcmVhdGUiLCJiY3J5cHQiLCJoYXNoIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7Ozs7Ozs7O0FBRUEsSUFBTUEsVUFBVSxHQUFHLEVBQW5COztBQUVBLElBQU1DLElBQUksR0FBRyxTQUFQQSxJQUFPLENBQUNDLFNBQUQsRUFBWUMsU0FBWixFQUEwQjtBQUNuQyxNQUFNQyxJQUFJLEdBQUdGLFNBQVMsQ0FBQ0csTUFBVixDQUFpQixNQUFqQixFQUF5QjtBQUNsQ0MsSUFBQUEsUUFBUSxFQUFFO0FBQ05DLE1BQUFBLElBQUksRUFBRUosU0FBUyxDQUFDSyxNQURWO0FBRU5DLE1BQUFBLFNBQVMsRUFBRTtBQUZMLEtBRHdCO0FBTWxDQyxJQUFBQSxLQUFLLEVBQUU7QUFDSEgsTUFBQUEsSUFBSSxFQUFFSixTQUFTLENBQUNLLE1BRGI7QUFFSEcsTUFBQUEsTUFBTSxFQUFFLElBRkw7QUFHSEYsTUFBQUEsU0FBUyxFQUFFLEtBSFI7QUFJSEcsTUFBQUEsUUFBUSxFQUFFO0FBQ1ZDLFFBQUFBLFFBQVEsRUFBRSxJQURBO0FBRVZDLFFBQUFBLE9BQU8sRUFBRTtBQUZDO0FBSlAsS0FOMkI7QUFnQmxDQyxJQUFBQSxRQUFRLEVBQUU7QUFDTlIsTUFBQUEsSUFBSSxFQUFFSixTQUFTLENBQUNLLE1BRFY7QUFFTkMsTUFBQUEsU0FBUyxFQUFFLEtBRkw7QUFHTkcsTUFBQUEsUUFBUSxFQUFFO0FBQ1ZDLFFBQUFBLFFBQVEsRUFBRSxJQURBO0FBRVZHLFFBQUFBLEdBQUcsRUFBRSxDQUFDLENBQUQsRUFBSSxFQUFKO0FBRks7QUFISjtBQWhCd0IsR0FBekIsQ0FBYjs7QUEwQkFaLEVBQUFBLElBQUksQ0FBQ2EsU0FBTCxHQUFpQixVQUFBQyxNQUFNLEVBQUk7QUFDdkJkLElBQUFBLElBQUksQ0FBQ2UsT0FBTCxDQUFhRCxNQUFNLENBQUNFLElBQXBCLEVBQTBCO0FBQUVDLE1BQUFBLFFBQVEsRUFBRTtBQUFaLEtBQTFCO0FBQ0FqQixJQUFBQSxJQUFJLENBQUNlLE9BQUwsQ0FBYUQsTUFBTSxDQUFDSSxJQUFwQixFQUEwQjtBQUFFRCxNQUFBQSxRQUFRLEVBQUU7QUFBWixLQUExQjtBQUNILEdBSEQ7O0FBS0FqQixFQUFBQSxJQUFJLENBQUNtQixZQUFMO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSw0QkFBbUIsaUJBQU90QixJQUFQO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLHFCQUNPdUIsZ0JBQU9DLElBQVAsQ0FBWXhCLElBQUksQ0FBQ2MsUUFBakIsRUFBMkJmLFVBQTNCLENBRFA7O0FBQUE7QUFDZkMsY0FBQUEsSUFBSSxDQUFDYyxRQURVOztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLEtBQW5COztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBSUksU0FBT1gsSUFBUDtBQUNILENBckNMOztlQXVDZUgsSSIsInNvdXJjZVJvb3QiOiIvaG9tZS9qY2dwL0VzY3JpdG9yaW8vYXBvbGxvU2VydmVyMS9tb2RlbHMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgYmNyeXB0IGZyb20gJ2JjcnlwdCc7XG5cbmNvbnN0IFNBTFRfUk9VTkQgPSAxMDtcblxuY29uc3QgdXNlciA9IChzZXF1ZWxpemUsIERhdGFUeXBlcykgPT4ge1xuICAgIGNvbnN0IFVzZXIgPSBzZXF1ZWxpemUuZGVmaW5lKCd1c2VyJywge1xuICAgICAgICB1c2VybmFtZToge1xuICAgICAgICAgICAgdHlwZTogRGF0YVR5cGVzLlNUUklORyxcbiAgICAgICAgICAgIGFsbG93TnVsbDogZmFsc2UsXG4gICAgICAgIH0sXG5cbiAgICAgICAgZW1haWw6IHtcbiAgICAgICAgICAgIHR5cGU6IERhdGFUeXBlcy5TVFJJTkcsXG4gICAgICAgICAgICB1bmlxdWU6IHRydWUsXG4gICAgICAgICAgICBhbGxvd051bGw6IGZhbHNlLFxuICAgICAgICAgICAgdmFsaWRhdGU6IHtcbiAgICAgICAgICAgIG5vdEVtcHR5OiB0cnVlLFxuICAgICAgICAgICAgaXNFbWFpbDogdHJ1ZSxcbiAgICAgICAgICAgIH0sXG4gICAgICAgIH0sXG5cbiAgICAgICAgcGFzc3dvcmQ6IHtcbiAgICAgICAgICAgIHR5cGU6IERhdGFUeXBlcy5TVFJJTkcsXG4gICAgICAgICAgICBhbGxvd051bGw6IGZhbHNlLFxuICAgICAgICAgICAgdmFsaWRhdGU6IHtcbiAgICAgICAgICAgIG5vdEVtcHR5OiB0cnVlLFxuICAgICAgICAgICAgbGVuOiBbMywgMTZdLFxuICAgICAgICAgICAgfSxcbiAgICAgICAgfSxcbiAgICB9KTtcbiAgICBcbiAgICBVc2VyLmFzc29jaWF0ZSA9IG1vZGVscyA9PiB7XG4gICAgICAgIFVzZXIuaGFzTWFueShtb2RlbHMuVGFzaywgeyBvbkRlbGV0ZTogJ1NFVCBOVUxMJyB9KTtcbiAgICAgICAgVXNlci5oYXNNYW55KG1vZGVscy5MaXN0LCB7IG9uRGVsZXRlOiAnJyB9KTtcbiAgICB9O1xuXG4gICAgVXNlci5iZWZvcmVDcmVhdGUoIGFzeW5jICh1c2VyKSA9PiB7XG4gICAgICAgIHVzZXIucGFzc3dvcmQgPSBhd2FpdCBiY3J5cHQuaGFzaCh1c2VyLnBhc3N3b3JkLCBTQUxUX1JPVU5EKTtcbiAgICB9KVxuICAgIFxuICAgICAgICByZXR1cm4gVXNlcjtcbiAgICB9O1xuICAgIFxuZXhwb3J0IGRlZmF1bHQgdXNlcjtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "user_model.js"
      ],
      "names": [
        "SALT_ROUND",
        "user",
        "sequelize",
        "DataTypes",
        "User",
        "define",
        "username",
        "type",
        "STRING",
        "allowNull",
        "email",
        "unique",
        "validate",
        "notEmpty",
        "isEmail",
        "password",
        "len",
        "associate",
        "models",
        "hasMany",
        "Task",
        "onDelete",
        "List",
        "beforeCreate",
        "bcrypt",
        "hash"
      ],
      "mappings": ";;;;;;;AAAA;;;;;;;;AAEA,IAAMA,UAAU,GAAG,EAAnB;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO,CAACC,SAAD,EAAYC,SAAZ,EAA0B;AACnC,MAAMC,IAAI,GAAGF,SAAS,CAACG,MAAV,CAAiB,MAAjB,EAAyB;AAClCC,IAAAA,QAAQ,EAAE;AACNC,MAAAA,IAAI,EAAEJ,SAAS,CAACK,MADV;AAENC,MAAAA,SAAS,EAAE;AAFL,KADwB;AAMlCC,IAAAA,KAAK,EAAE;AACHH,MAAAA,IAAI,EAAEJ,SAAS,CAACK,MADb;AAEHG,MAAAA,MAAM,EAAE,IAFL;AAGHF,MAAAA,SAAS,EAAE,KAHR;AAIHG,MAAAA,QAAQ,EAAE;AACVC,QAAAA,QAAQ,EAAE,IADA;AAEVC,QAAAA,OAAO,EAAE;AAFC;AAJP,KAN2B;AAgBlCC,IAAAA,QAAQ,EAAE;AACNR,MAAAA,IAAI,EAAEJ,SAAS,CAACK,MADV;AAENC,MAAAA,SAAS,EAAE,KAFL;AAGNG,MAAAA,QAAQ,EAAE;AACVC,QAAAA,QAAQ,EAAE,IADA;AAEVG,QAAAA,GAAG,EAAE,CAAC,CAAD,EAAI,EAAJ;AAFK;AAHJ;AAhBwB,GAAzB,CAAb;;AA0BAZ,EAAAA,IAAI,CAACa,SAAL,GAAiB,UAAAC,MAAM,EAAI;AACvBd,IAAAA,IAAI,CAACe,OAAL,CAAaD,MAAM,CAACE,IAApB,EAA0B;AAAEC,MAAAA,QAAQ,EAAE;AAAZ,KAA1B;AACAjB,IAAAA,IAAI,CAACe,OAAL,CAAaD,MAAM,CAACI,IAApB,EAA0B;AAAED,MAAAA,QAAQ,EAAE;AAAZ,KAA1B;AACH,GAHD;;AAKAjB,EAAAA,IAAI,CAACmB,YAAL;AAAA;AAAA;AAAA;AAAA;AAAA,4BAAmB,iBAAOtB,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACOuB,gBAAOC,IAAP,CAAYxB,IAAI,CAACc,QAAjB,EAA2Bf,UAA3B,CADP;;AAAA;AACfC,cAAAA,IAAI,CAACc,QADU;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAnB;;AAAA;AAAA;AAAA;AAAA;AAII,SAAOX,IAAP;AACH,CArCL;;eAuCeH,I",
      "sourceRoot": "/home/jcgp/Escritorio/apolloServer1/models",
      "sourcesContent": [
        "import bcrypt from 'bcrypt';\n\nconst SALT_ROUND = 10;\n\nconst user = (sequelize, DataTypes) => {\n    const User = sequelize.define('user', {\n        username: {\n            type: DataTypes.STRING,\n            allowNull: false,\n        },\n\n        email: {\n            type: DataTypes.STRING,\n            unique: true,\n            allowNull: false,\n            validate: {\n            notEmpty: true,\n            isEmail: true,\n            },\n        },\n\n        password: {\n            type: DataTypes.STRING,\n            allowNull: false,\n            validate: {\n            notEmpty: true,\n            len: [3, 16],\n            },\n        },\n    });\n    \n    User.associate = models => {\n        User.hasMany(models.Task, { onDelete: 'SET NULL' });\n        User.hasMany(models.List, { onDelete: '' });\n    };\n\n    User.beforeCreate( async (user) => {\n        user.password = await bcrypt.hash(user.password, SALT_ROUND);\n    })\n    \n        return User;\n    };\n    \nexport default user;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1553697625607
  },
  "{\"sourceRoot\":\"/home/jcgp/Escritorio/apolloServer1/models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/jcgp/Escritorio/apolloServer1\",\"filename\":\"/home/jcgp/Escritorio/apolloServer1/models/task_model.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/jcgp/Escritorio/apolloServer1\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/jcgp/Escritorio/apolloServer1/models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/jcgp/Escritorio/apolloServer1",
      "filename": "/home/jcgp/Escritorio/apolloServer1/models/task_model.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/jcgp/Escritorio/apolloServer1",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/jcgp/Escritorio/apolloServer1/models/task_model.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/home/jcgp/Escritorio/apolloServer1/models/task_model.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/jcgp/Escritorio/apolloServer1/models",
        "sourceFileName": "task_model.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar task = function task(sequelize, DataTypes) {\n  var Task = sequelize.define('task', {\n    text: {\n      type: DataTypes.STRING,\n      allowNull: false,\n      validate: {\n        notEmpty: {\n          args: true,\n          msg: 'No puede aÃ±adirse una tarea vacÃ­a'\n        }\n      }\n    },\n    done: {\n      type: DataTypes.BOOLEAN,\n      allowNull: false,\n      defaultValue: false\n    }\n  });\n\n  Task.associate = function (models) {\n    Task.belongsTo(models.List, {\n      onDelete: 'CASCADE'\n    });\n    Task.belongsTo(models.User, {\n      onDelete: 'SET NULL'\n    });\n  };\n\n  return Task;\n};\n\nvar _default = task;\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRhc2tfbW9kZWwuanMiXSwibmFtZXMiOlsidGFzayIsInNlcXVlbGl6ZSIsIkRhdGFUeXBlcyIsIlRhc2siLCJkZWZpbmUiLCJ0ZXh0IiwidHlwZSIsIlNUUklORyIsImFsbG93TnVsbCIsInZhbGlkYXRlIiwibm90RW1wdHkiLCJhcmdzIiwibXNnIiwiZG9uZSIsIkJPT0xFQU4iLCJkZWZhdWx0VmFsdWUiLCJhc3NvY2lhdGUiLCJtb2RlbHMiLCJiZWxvbmdzVG8iLCJMaXN0Iiwib25EZWxldGUiLCJVc2VyIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQ0EsSUFBTUEsSUFBSSxHQUFHLFNBQVBBLElBQU8sQ0FBQ0MsU0FBRCxFQUFZQyxTQUFaLEVBQTBCO0FBQ25DLE1BQU1DLElBQUksR0FBR0YsU0FBUyxDQUFDRyxNQUFWLENBQWlCLE1BQWpCLEVBQXlCO0FBQ3BDQyxJQUFBQSxJQUFJLEVBQUU7QUFDSkMsTUFBQUEsSUFBSSxFQUFFSixTQUFTLENBQUNLLE1BRFo7QUFFSkMsTUFBQUEsU0FBUyxFQUFFLEtBRlA7QUFHSkMsTUFBQUEsUUFBUSxFQUFDO0FBQ1BDLFFBQUFBLFFBQVEsRUFBRTtBQUNSQyxVQUFBQSxJQUFJLEVBQUUsSUFERTtBQUVSQyxVQUFBQSxHQUFHLEVBQUU7QUFGRztBQURIO0FBSEwsS0FEOEI7QUFZcENDLElBQUFBLElBQUksRUFBQztBQUNIUCxNQUFBQSxJQUFJLEVBQUVKLFNBQVMsQ0FBQ1ksT0FEYjtBQUVITixNQUFBQSxTQUFTLEVBQUUsS0FGUjtBQUdITyxNQUFBQSxZQUFZLEVBQUU7QUFIWDtBQVorQixHQUF6QixDQUFiOztBQW1CQVosRUFBQUEsSUFBSSxDQUFDYSxTQUFMLEdBQWlCLFVBQUFDLE1BQU0sRUFBSTtBQUN6QmQsSUFBQUEsSUFBSSxDQUFDZSxTQUFMLENBQWVELE1BQU0sQ0FBQ0UsSUFBdEIsRUFBNEI7QUFBQ0MsTUFBQUEsUUFBUSxFQUFFO0FBQVgsS0FBNUI7QUFDQWpCLElBQUFBLElBQUksQ0FBQ2UsU0FBTCxDQUFlRCxNQUFNLENBQUNJLElBQXRCLEVBQTRCO0FBQUNELE1BQUFBLFFBQVEsRUFBRTtBQUFYLEtBQTVCO0FBQ0QsR0FIRDs7QUFNQSxTQUFPakIsSUFBUDtBQUNELENBM0JIOztlQTZCaUJILEkiLCJzb3VyY2VSb290IjoiL2hvbWUvamNncC9Fc2NyaXRvcmlvL2Fwb2xsb1NlcnZlcjEvbW9kZWxzIiwic291cmNlc0NvbnRlbnQiOlsiXG5jb25zdCB0YXNrID0gKHNlcXVlbGl6ZSwgRGF0YVR5cGVzKSA9PiB7XG4gICAgY29uc3QgVGFzayA9IHNlcXVlbGl6ZS5kZWZpbmUoJ3Rhc2snLCB7XG4gICAgICB0ZXh0OiB7XG4gICAgICAgIHR5cGU6IERhdGFUeXBlcy5TVFJJTkcsXG4gICAgICAgIGFsbG93TnVsbDogZmFsc2UsXG4gICAgICAgIHZhbGlkYXRlOntcbiAgICAgICAgICBub3RFbXB0eToge1xuICAgICAgICAgICAgYXJnczogdHJ1ZSxcbiAgICAgICAgICAgIG1zZzogJ05vIHB1ZWRlIGHDsWFkaXJzZSB1bmEgdGFyZWEgdmFjw61hJ1xuICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICAgIH0sXG5cbiAgICAgIGRvbmU6e1xuICAgICAgICB0eXBlOiBEYXRhVHlwZXMuQk9PTEVBTixcbiAgICAgICAgYWxsb3dOdWxsOiBmYWxzZSxcbiAgICAgICAgZGVmYXVsdFZhbHVlOiBmYWxzZSxcbiAgICAgIH0sXG4gICAgfSk7XG4gIFxuICAgIFRhc2suYXNzb2NpYXRlID0gbW9kZWxzID0+IHtcbiAgICAgIFRhc2suYmVsb25nc1RvKG1vZGVscy5MaXN0LCB7b25EZWxldGU6ICdDQVNDQURFJ30pO1xuICAgICAgVGFzay5iZWxvbmdzVG8obW9kZWxzLlVzZXIsIHtvbkRlbGV0ZTogJ1NFVCBOVUxMJ30pO1xuICAgIH07XG5cbiAgXG4gICAgcmV0dXJuIFRhc2s7XG4gIH07XG4gIFxuICBleHBvcnQgZGVmYXVsdCB0YXNrO1xuXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "task_model.js"
      ],
      "names": [
        "task",
        "sequelize",
        "DataTypes",
        "Task",
        "define",
        "text",
        "type",
        "STRING",
        "allowNull",
        "validate",
        "notEmpty",
        "args",
        "msg",
        "done",
        "BOOLEAN",
        "defaultValue",
        "associate",
        "models",
        "belongsTo",
        "List",
        "onDelete",
        "User"
      ],
      "mappings": ";;;;;;;AACA,IAAMA,IAAI,GAAG,SAAPA,IAAO,CAACC,SAAD,EAAYC,SAAZ,EAA0B;AACnC,MAAMC,IAAI,GAAGF,SAAS,CAACG,MAAV,CAAiB,MAAjB,EAAyB;AACpCC,IAAAA,IAAI,EAAE;AACJC,MAAAA,IAAI,EAAEJ,SAAS,CAACK,MADZ;AAEJC,MAAAA,SAAS,EAAE,KAFP;AAGJC,MAAAA,QAAQ,EAAC;AACPC,QAAAA,QAAQ,EAAE;AACRC,UAAAA,IAAI,EAAE,IADE;AAERC,UAAAA,GAAG,EAAE;AAFG;AADH;AAHL,KAD8B;AAYpCC,IAAAA,IAAI,EAAC;AACHP,MAAAA,IAAI,EAAEJ,SAAS,CAACY,OADb;AAEHN,MAAAA,SAAS,EAAE,KAFR;AAGHO,MAAAA,YAAY,EAAE;AAHX;AAZ+B,GAAzB,CAAb;;AAmBAZ,EAAAA,IAAI,CAACa,SAAL,GAAiB,UAAAC,MAAM,EAAI;AACzBd,IAAAA,IAAI,CAACe,SAAL,CAAeD,MAAM,CAACE,IAAtB,EAA4B;AAACC,MAAAA,QAAQ,EAAE;AAAX,KAA5B;AACAjB,IAAAA,IAAI,CAACe,SAAL,CAAeD,MAAM,CAACI,IAAtB,EAA4B;AAACD,MAAAA,QAAQ,EAAE;AAAX,KAA5B;AACD,GAHD;;AAMA,SAAOjB,IAAP;AACD,CA3BH;;eA6BiBH,I",
      "sourceRoot": "/home/jcgp/Escritorio/apolloServer1/models",
      "sourcesContent": [
        "\nconst task = (sequelize, DataTypes) => {\n    const Task = sequelize.define('task', {\n      text: {\n        type: DataTypes.STRING,\n        allowNull: false,\n        validate:{\n          notEmpty: {\n            args: true,\n            msg: 'No puede aÃ±adirse una tarea vacÃ­a'\n          }\n        },\n      },\n\n      done:{\n        type: DataTypes.BOOLEAN,\n        allowNull: false,\n        defaultValue: false,\n      },\n    });\n  \n    Task.associate = models => {\n      Task.belongsTo(models.List, {onDelete: 'CASCADE'});\n      Task.belongsTo(models.User, {onDelete: 'SET NULL'});\n    };\n\n  \n    return Task;\n  };\n  \n  export default task;\n\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1553697617351
  },
  "{\"sourceRoot\":\"/home/jcgp/Escritorio/apolloServer1/resolvers\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/jcgp/Escritorio/apolloServer1\",\"filename\":\"/home/jcgp/Escritorio/apolloServer1/resolvers/list_resolver.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/jcgp/Escritorio/apolloServer1\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/jcgp/Escritorio/apolloServer1/resolvers",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/jcgp/Escritorio/apolloServer1",
      "filename": "/home/jcgp/Escritorio/apolloServer1/resolvers/list_resolver.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/jcgp/Escritorio/apolloServer1",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/jcgp/Escritorio/apolloServer1/resolvers/list_resolver.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/home/jcgp/Escritorio/apolloServer1/resolvers/list_resolver.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/jcgp/Escritorio/apolloServer1/resolvers",
        "sourceFileName": "list_resolver.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _graphqlRedisSubscriptions = require(\"graphql-redis-subscriptions\");\n\nvar _ioredis = _interopRequireDefault(require(\"ioredis\"));\n\nvar _graphqlResolvers = require(\"graphql-resolvers\");\n\nvar _auth_resolver = require(\"./auth_resolver.js\");\n\nvar _sequelize = _interopRequireDefault(require(\"sequelize\"));\n\nvar _apolloServer = require(\"apollo-server\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar options = {\n  host: '127.0.0.1',\n  port: 6379\n};\nvar pubsub = new _graphqlRedisSubscriptions.RedisPubSub({\n  publisher: new _ioredis.default(options),\n  subscriber: new _ioredis.default(options)\n}); //subscription list\n\nvar SUB_LIST = 'SUB_LIST';\nvar ADD = 1;\nvar DELETE = 2;\nvar Op = _sequelize.default.Op;\nvar _default = {\n  allowedListAction: {\n    CREATE: ADD,\n    DESTROY: DELETE\n  },\n  Query: {\n    //lists: [List]  => return all lists\n    lists: function () {\n      var _lists = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee(parent, args, _ref) {\n        var models, auth, result;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                models = _ref.models, auth = _ref.auth;\n                _context.prev = 1;\n                result = [];\n\n                if (!auth) {\n                  _context.next = 9;\n                  break;\n                }\n\n                _context.next = 6;\n                return models.List.findAll({\n                  where: _defineProperty({}, Op.or, [{\n                    public: true\n                  }, {\n                    userId: auth.id\n                  }])\n                });\n\n              case 6:\n                result = _context.sent;\n                _context.next = 12;\n                break;\n\n              case 9:\n                _context.next = 11;\n                return models.List.findAll({\n                  where: {\n                    public: true\n                  }\n                });\n\n              case 11:\n                result = _context.sent;\n\n              case 12:\n                return _context.abrupt(\"return\", result);\n\n              case 15:\n                _context.prev = 15;\n                _context.t0 = _context[\"catch\"](1);\n                throw new Error(\"Error al listar todas las listas\" + _context.t0.message);\n\n              case 18:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[1, 15]]);\n      }));\n\n      function lists(_x, _x2, _x3) {\n        return _lists.apply(this, arguments);\n      }\n\n      return lists;\n    }(),\n    //list(id: ID!): List  => return the data of a specific list\n    list: function () {\n      var _list = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee2(parent, args, _ref2) {\n        var models;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                models = _ref2.models;\n                _context2.prev = 1;\n                _context2.next = 4;\n                return models.List.findOne({\n                  where: {\n                    id: args.id\n                  }\n                });\n\n              case 4:\n                return _context2.abrupt(\"return\", _context2.sent);\n\n              case 7:\n                _context2.prev = 7;\n                _context2.t0 = _context2[\"catch\"](1);\n                throw new Error(\"Error al listar una lista concreto\");\n\n              case 10:\n                ;\n\n              case 11:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, null, [[1, 7]]);\n      }));\n\n      function list(_x4, _x5, _x6) {\n        return _list.apply(this, arguments);\n      }\n\n      return list;\n    }()\n  },\n  Mutation: {\n    //addList(name: String!, public: Boolean!): List!\n    addList: (0, _graphqlResolvers.combineResolvers)(_auth_resolver.isAuthenticated,\n    /*#__PURE__*/\n    function () {\n      var _ref4 = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee3(parent, args, _ref3) {\n        var models, auth, _ref5, dataValues, rest;\n\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                models = _ref3.models, auth = _ref3.auth;\n                _context3.prev = 1;\n                _context3.next = 4;\n                return models.List.create({\n                  name: args.name,\n                  public: args.public,\n                  userId: auth.id\n                });\n\n              case 4:\n                _ref5 = _context3.sent;\n                dataValues = _ref5.dataValues;\n                rest = _objectWithoutProperties(_ref5, [\"dataValues\"]);\n                pubsub.publish(SUB_LIST, {\n                  listSub: {\n                    list: dataValues,\n                    action: ADD\n                  }\n                });\n                return _context3.abrupt(\"return\", dataValues);\n\n              case 11:\n                _context3.prev = 11;\n                _context3.t0 = _context3[\"catch\"](1);\n                throw new Error(\"Error al crear una lista\");\n\n              case 14:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, null, [[1, 11]]);\n      }));\n\n      return function (_x7, _x8, _x9) {\n        return _ref4.apply(this, arguments);\n      };\n    }()),\n    //deleteList(id: ID!): String!\n    deleteList: (0, _graphqlResolvers.combineResolvers)(_auth_resolver.isOwner,\n    /*#__PURE__*/\n    function () {\n      var _ref7 = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee4(parent, args, _ref6) {\n        var models, auth;\n        return regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                models = _ref6.models, auth = _ref6.auth;\n                _context4.prev = 1;\n                _context4.next = 4;\n                return models.List.destroy({\n                  where: {\n                    id: args.id\n                  }\n                });\n\n              case 4:\n                pubsub.publish(SUB_LIST, {\n                  listSub: {\n                    list: {\n                      id: args.id,\n                      name: \"\",\n                      userId: auth.id,\n                      public: false\n                    },\n                    action: DELETE\n                  }\n                });\n                return _context4.abrupt(\"return\", \"The List has been destroyed successfuly\");\n\n              case 8:\n                _context4.prev = 8;\n                _context4.t0 = _context4[\"catch\"](1);\n                throw new Error(\"Error al borrar la lista\");\n\n              case 11:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, null, [[1, 8]]);\n      }));\n\n      return function (_x10, _x11, _x12) {\n        return _ref7.apply(this, arguments);\n      };\n    }())\n  },\n  Subscription: {\n    listSub: {\n      subscribe: (0, _apolloServer.withFilter)(function () {\n        return pubsub.asyncIterator([SUB_LIST]);\n      }, function (payload, args, _ref8) {\n        var auth = _ref8.auth;\n\n        if (payload.listSub.list.userId == auth.id || payload.listSub.list.public == true) {\n          return true;\n        } else {\n          return false;\n        }\n      })\n    }\n  },\n  List: {\n    tasks: function () {\n      var _tasks = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee5(parent, arg, _ref9) {\n        var models, result;\n        return regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                models = _ref9.models;\n                _context5.prev = 1;\n                _context5.next = 4;\n                return models.Task.findAll({\n                  where: {\n                    listId: parent.id\n                  }\n                });\n\n              case 4:\n                result = _context5.sent;\n                return _context5.abrupt(\"return\", result);\n\n              case 8:\n                _context5.prev = 8;\n                _context5.t0 = _context5[\"catch\"](1);\n                throw new Error(\"No se han podido cargar las tareas de la lista\");\n\n              case 11:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, null, [[1, 8]]);\n      }));\n\n      function tasks(_x13, _x14, _x15) {\n        return _tasks.apply(this, arguments);\n      }\n\n      return tasks;\n    }()\n  }\n};\n/*\nexport default {    \n    Query: {\n        todo: async () => {\n            //return new Promise((resolve, reject) => {\n            //client.query('SELECT * FROM task').then((result) => resolve(result.rows))\n            //})\n    \n            const result = await client.query('select * from task');\n            console.log(result)\n            return result.rows\n        },\n    },\n    \n    Mutation: {\n        addTask: async (parent, arg) => {\n            console.log(arg)\n            const result = await client.query(`update task set tasks = array_cat(tasks, '{${arg.task}}') where id=${arg.id}`)\n            console.log(result)\n            //return result\n            return \"cachi\"\n        },\n    },\n    \n    Todo: {\n        tareas: (todo) => {\n            console.log(todo.tasks)\n            return todo.tasks\n        }\n    },\n    \n};*/\n\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "list_resolver.js"
      ],
      "names": [
        "options",
        "host",
        "port",
        "pubsub",
        "RedisPubSub",
        "publisher",
        "Redis",
        "subscriber",
        "SUB_LIST",
        "ADD",
        "DELETE",
        "Op",
        "Sequelize",
        "allowedListAction",
        "CREATE",
        "DESTROY",
        "Query",
        "lists",
        "parent",
        "args",
        "models",
        "auth",
        "result",
        "List",
        "findAll",
        "where",
        "or",
        "public",
        "userId",
        "id",
        "Error",
        "message",
        "list",
        "findOne",
        "Mutation",
        "addList",
        "isAuthenticated",
        "create",
        "name",
        "dataValues",
        "rest",
        "publish",
        "listSub",
        "action",
        "deleteList",
        "isOwner",
        "destroy",
        "Subscription",
        "subscribe",
        "asyncIterator",
        "payload",
        "tasks",
        "arg",
        "Task",
        "listId"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AAEA;;AACA;;AAkBA;;AACA;;;;;;;;;;;;;;AAjBA,IAAMA,OAAO,GAAG;AACZC,EAAAA,IAAI,EAAE,WADM;AAEZC,EAAAA,IAAI,EAAE;AAFM,CAAhB;AAKA,IAAMC,MAAM,GAAG,IAAIC,sCAAJ,CAAgB;AAC3BC,EAAAA,SAAS,EAAE,IAAIC,gBAAJ,CAAUN,OAAV,CADgB;AAE3BO,EAAAA,UAAU,EAAE,IAAID,gBAAJ,CAAUN,OAAV;AAFe,CAAhB,CAAf,C,CAKA;;AACA,IAAMQ,QAAQ,GAAG,UAAjB;AAEA,IAAMC,GAAG,GAAG,CAAZ;AACA,IAAMC,MAAM,GAAG,CAAf;AAIA,IAAMC,EAAE,GAAGC,mBAAUD,EAArB;eAEc;AACVE,EAAAA,iBAAiB,EAAE;AACfC,IAAAA,MAAM,EAAEL,GADO;AAEfM,IAAAA,OAAO,EAAEL;AAFM,GADT;AAMVM,EAAAA,KAAK,EAAE;AACH;AACAC,IAAAA,KAAK;AAAA;AAAA;AAAA,8BAAE,iBAAOC,MAAP,EAAeC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuBC,gBAAAA,MAAvB,QAAuBA,MAAvB,EAA+BC,IAA/B,QAA+BA,IAA/B;AAAA;AAEKC,gBAAAA,MAFL,GAEc,EAFd;;AAAA,qBAGID,IAHJ;AAAA;AAAA;AAAA;;AAAA;AAAA,uBAIoBD,MAAM,CAACG,IAAP,CAAYC,OAAZ,CAAoB;AAC/BC,kBAAAA,KAAK,sBACAd,EAAE,CAACe,EADH,EACQ,CAAC;AAACC,oBAAAA,MAAM,EAAE;AAAT,mBAAD,EAAiB;AAACC,oBAAAA,MAAM,EAAEP,IAAI,CAACQ;AAAd,mBAAjB,CADR;AAD0B,iBAApB,CAJpB;;AAAA;AAIKP,gBAAAA,MAJL;AAAA;AAAA;;AAAA;AAAA;AAAA,uBAWqBF,MAAM,CAACG,IAAP,CAAYC,OAAZ,CAAoB;AAC/BC,kBAAAA,KAAK,EAAE;AACHE,oBAAAA,MAAM,EAAE;AADL;AADwB,iBAApB,CAXrB;;AAAA;AAWML,gBAAAA,MAXN;;AAAA;AAAA,iDAiBQA,MAjBR;;AAAA;AAAA;AAAA;AAAA,sBAoBO,IAAIQ,KAAJ,CAAU,qCAAqC,YAAIC,OAAnD,CApBP;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA,OAFF;AA2BH;AACAC,IAAAA,IAAI;AAAA;AAAA;AAAA,8BAAE,kBAAOd,MAAP,EAAeC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuBC,gBAAAA,MAAvB,SAAuBA,MAAvB;AAAA;AAAA;AAAA,uBAEeA,MAAM,CAACG,IAAP,CAAYU,OAAZ,CAAoB;AAC7BR,kBAAAA,KAAK,EAAE;AACHI,oBAAAA,EAAE,EAAEV,IAAI,CAACU;AADN;AADsB,iBAApB,CAFf;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA,sBASQ,IAAIC,KAAJ,CAAU,oCAAV,CATR;;AAAA;AAWF;;AAXE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA;AA5BD,GANG;AAiDVI,EAAAA,QAAQ,EAAE;AACN;AACAC,IAAAA,OAAO,EAAE,wCACLC,8BADK;AAAA;AAAA;AAAA;AAAA;AAAA,8BAEL,kBAAOlB,MAAP,EAAeC,IAAf;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAuBC,gBAAAA,MAAvB,SAAuBA,MAAvB,EAA+BC,IAA/B,SAA+BA,IAA/B;AAAA;AAAA;AAAA,uBAE0CD,MAAM,CAACG,IAAP,CAAYc,MAAZ,CAAmB;AACjDC,kBAAAA,IAAI,EAAEnB,IAAI,CAACmB,IADsC;AAEjDX,kBAAAA,MAAM,EAAER,IAAI,CAACQ,MAFoC;AAGjDC,kBAAAA,MAAM,EAAEP,IAAI,CAACQ;AAHoC,iBAAnB,CAF1C;;AAAA;AAAA;AAEaU,gBAAAA,UAFb,SAEaA,UAFb;AAE4BC,gBAAAA,IAF5B;AAQQrC,gBAAAA,MAAM,CAACsC,OAAP,CAAejC,QAAf,EAAyB;AAAEkC,kBAAAA,OAAO,EAAE;AAACV,oBAAAA,IAAI,EAAEO,UAAP;AAAmBI,oBAAAA,MAAM,EAAElC;AAA3B;AAAX,iBAAzB;AARR,kDASe8B,UATf;;AAAA;AAAA;AAAA;AAAA,sBAYc,IAAIT,KAAJ,CAAU,0BAAV,CAZd;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAFK;;AAAA;AAAA;AAAA;AAAA,QAFH;AAqBN;AACAc,IAAAA,UAAU,EAAE,wCACRC,sBADQ;AAAA;AAAA;AAAA;AAAA;AAAA,8BAER,kBAAO3B,MAAP,EAAeC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuBC,gBAAAA,MAAvB,SAAuBA,MAAvB,EAA+BC,IAA/B,SAA+BA,IAA/B;AAAA;AAAA;AAAA,uBAGcD,MAAM,CAACG,IAAP,CAAYuB,OAAZ,CAAoB;AACtBrB,kBAAAA,KAAK,EAAE;AACHI,oBAAAA,EAAE,EAAEV,IAAI,CAACU;AADN;AADe,iBAApB,CAHd;;AAAA;AAUQ1B,gBAAAA,MAAM,CAACsC,OAAP,CAAejC,QAAf,EAAyB;AAAEkC,kBAAAA,OAAO,EAAE;AAACV,oBAAAA,IAAI,EAAE;AAACH,sBAAAA,EAAE,EAAEV,IAAI,CAACU,EAAV;AAAcS,sBAAAA,IAAI,EAAE,EAApB;AAAwBV,sBAAAA,MAAM,EAAEP,IAAI,CAACQ,EAArC;AAAyCF,sBAAAA,MAAM,EAAE;AAAjD,qBAAP;AAAiEgB,oBAAAA,MAAM,EAAEjC;AAAzE;AAAX,iBAAzB;AAVR,kDAYe,yCAZf;;AAAA;AAAA;AAAA;AAAA,sBAec,IAAIoB,KAAJ,CAAU,0BAAV,CAfd;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAFQ;;AAAA;AAAA;AAAA;AAAA;AAtBN,GAjDA;AAgGViB,EAAAA,YAAY,EAAE;AACVL,IAAAA,OAAO,EAAE;AACLM,MAAAA,SAAS,EAAE,8BACP,YAAM;AACF,eAAO7C,MAAM,CAAC8C,aAAP,CAAqB,CAACzC,QAAD,CAArB,CAAP;AACH,OAHM,EAKP,UAAC0C,OAAD,EAAU/B,IAAV,SAA6B;AAAA,YAAXE,IAAW,SAAXA,IAAW;;AACzB,YAAI6B,OAAO,CAACR,OAAR,CAAgBV,IAAhB,CAAqBJ,MAArB,IAA+BP,IAAI,CAACQ,EAArC,IAA6CqB,OAAO,CAACR,OAAR,CAAgBV,IAAhB,CAAqBL,MAArB,IAA+B,IAA/E,EAAqF;AACjF,iBAAO,IAAP;AACH,SAFD,MAGI;AACA,iBAAO,KAAP;AACH;AAEJ,OAbM;AADN;AADC,GAhGJ;AAoHVJ,EAAAA,IAAI,EAAE;AACF4B,IAAAA,KAAK;AAAA;AAAA;AAAA,8BAAE,kBAAOjC,MAAP,EAAekC,GAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAqBhC,gBAAAA,MAArB,SAAqBA,MAArB;AAAA;AAAA;AAAA,uBAEoBA,MAAM,CAACiC,IAAP,CAAY7B,OAAZ,CAAoB;AACnCC,kBAAAA,KAAK,EAAE;AACH6B,oBAAAA,MAAM,EAAEpC,MAAM,CAACW;AADZ;AAD4B,iBAApB,CAFpB;;AAAA;AAEKP,gBAAAA,MAFL;AAAA,kDAOQA,MAPR;;AAAA;AAAA;AAAA;AAAA,sBAUO,IAAIQ,KAAJ,CAAU,gDAAV,CAVP;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA;AADH;AApHI,C;AA2Id",
      "sourceRoot": "/home/jcgp/Escritorio/apolloServer1/resolvers",
      "sourcesContent": [
        "import { RedisPubSub } from 'graphql-redis-subscriptions';\nimport Redis from 'ioredis';\n\nimport { combineResolvers } from 'graphql-resolvers';\nimport { isOwner, isAuthenticated } from './auth_resolver.js';\n\nconst options = {\n    host: '127.0.0.1',\n    port: 6379\n}\n\nconst pubsub = new RedisPubSub({\n    publisher: new Redis(options),\n    subscriber: new Redis(options)\n});\n\n//subscription list\nconst SUB_LIST = 'SUB_LIST';\n\nconst ADD = 1;\nconst DELETE = 2;\n\nimport Sequelize from 'sequelize';\nimport { withFilter } from 'apollo-server';\nconst Op = Sequelize.Op;\n\nexport default{\n    allowedListAction: {\n        CREATE: ADD,\n        DESTROY: DELETE,\n    },\n\n    Query: {\n        //lists: [List]  => return all lists\n        lists: async (parent, args, { models, auth }) => {\n            try{\n                let result = [];\n                if(auth){\n                    result = await models.List.findAll({\n                        where: {\n                            [Op.or]: [{public: true}, {userId: auth.id}],\n                        }\n                    });\n                }\n                else{\n                     result = await models.List.findAll({\n                         where: {\n                             public: true,\n                         }\n                     });\n                }\n                return result\n            }\n            catch(err){\n                throw new Error(\"Error al listar todas las listas\" + err.message)\n            }\n            \n        },\n\n        //list(id: ID!): List  => return the data of a specific list\n        list: async (parent, args, { models }) => {\n            try{\n                return await models.List.findOne({\n                    where: {\n                        id: args.id,\n                    },\n                });\n            }\n            catch(err){\n                throw new Error(\"Error al listar una lista concreto\");\n            }\n            ;\n        },\n    },\n\n    Mutation: {\n        //addList(name: String!, public: Boolean!): List!\n        addList: combineResolvers(\n            isAuthenticated,\n            async (parent, args, { models, auth }) => {\n                try{\n                    let {dataValues, ...rest} = await models.List.create({\n                        name: args.name,\n                        public: args.public,\n                        userId: auth.id,\n                    });\n                    \n                    pubsub.publish(SUB_LIST, { listSub: {list: dataValues, action: ADD}})\n                    return dataValues\n                }\n                catch(err){\n                    throw new Error(\"Error al crear una lista\");\n                }            \n            },\n        ),\n\n        //deleteList(id: ID!): String!\n        deleteList: combineResolvers(\n            isOwner,\n            async (parent, args, { models, auth }) => {\n                try{\n                    \n                    await models.List.destroy({\n                        where: {\n                            id: args.id,\n                        },\n                    });\n                    \n\n                    pubsub.publish(SUB_LIST, { listSub: {list: {id: args.id, name: \"\", userId: auth.id, public: false }, action: DELETE}});\n\n                    return \"The List has been destroyed successfuly\";\n                }\n                catch(err){\n                    throw new Error(\"Error al borrar la lista\");\n                }\n                \n            },\n        )\n        \n    },\n\n    Subscription: {\n        listSub: {\n            subscribe: withFilter(\n                () => { \n                    return pubsub.asyncIterator([SUB_LIST]); \n                },\n\n                (payload, args, { auth }) => {\n                    if((payload.listSub.list.userId == auth.id) || (payload.listSub.list.public == true)){\n                        return true\n                    }\n                    else{\n                        return false\n                    }\n                    \n                }\n            )\n        }\n    },\n\n    List: {\n        tasks: async (parent, arg, {models}) => {\n            try{\n                let result = await models.Task.findAll({\n                    where: {\n                        listId: parent.id,\n                    }\n                })\n                return result\n            }\n            catch(err){\n                throw new Error(\"No se han podido cargar las tareas de la lista\")\n            }\n            \n        }\n    }\n};\n\n\n\n\n\n\n/*\nexport default {    \n    Query: {\n        todo: async () => {\n            //return new Promise((resolve, reject) => {\n            //client.query('SELECT * FROM task').then((result) => resolve(result.rows))\n            //})\n    \n            const result = await client.query('select * from task');\n            console.log(result)\n            return result.rows\n        },\n    },\n    \n    Mutation: {\n        addTask: async (parent, arg) => {\n            console.log(arg)\n            const result = await client.query(`update task set tasks = array_cat(tasks, '{${arg.task}}') where id=${arg.id}`)\n            console.log(result)\n            //return result\n            return \"cachi\"\n        },\n    },\n    \n    Todo: {\n        tareas: (todo) => {\n            console.log(todo.tasks)\n            return todo.tasks\n        }\n    },\n    \n};*/"
      ]
    },
    "sourceType": "script",
    "mtime": 1553780181613
  },
  "{\"sourceRoot\":\"/home/jcgp/Escritorio/apolloServer1/schemas\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/jcgp/Escritorio/apolloServer1\",\"filename\":\"/home/jcgp/Escritorio/apolloServer1/schemas/list_schema.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/jcgp/Escritorio/apolloServer1\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/jcgp/Escritorio/apolloServer1/schemas",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/jcgp/Escritorio/apolloServer1",
      "filename": "/home/jcgp/Escritorio/apolloServer1/schemas/list_schema.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/jcgp/Escritorio/apolloServer1",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/jcgp/Escritorio/apolloServer1/schemas/list_schema.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/home/jcgp/Escritorio/apolloServer1/schemas/list_schema.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/jcgp/Escritorio/apolloServer1/schemas",
        "sourceFileName": "list_schema.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _apolloServerExpress = require(\"apollo-server-express\");\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    # Comments in GraphQL are defined with the hash (#) symbol.\\n\\n    type List {\\n        id: ID!\\n        name: String!\\n        tasks: [Task!]\\n        userId: ID!\\n        public: Boolean!\\n    }\\n\\n    # The \\\"Query\\\" type is the root of all GraphQL queries.\\n    extend type Query {\\n        lists: [List]\\n        list(id: ID!): List\\n    }\\n\\n    extend type Mutation {\\n        addList(name: String!, public: Boolean!): List!\\n        deleteList(id: ID!): String!\\n    }\\n\\n    enum allowedListAction {\\n        CREATE\\n        DESTROY\\n    }\\n\\n    type ListResponse {\\n        list: List\\n        action: allowedListAction\\n    }\\n\\n    extend type Subscription{\\n        listSub: ListResponse\\n    }\\n\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }\n\nvar _default = (0, _apolloServerExpress.gql)(_templateObject());\n\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpc3Rfc2NoZW1hLmpzIl0sIm5hbWVzIjpbImdxbCJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOzs7Ozs7Ozs7Ozs7OzttQkFFZUEsd0IiLCJzb3VyY2VSb290IjoiL2hvbWUvamNncC9Fc2NyaXRvcmlvL2Fwb2xsb1NlcnZlcjEvc2NoZW1hcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGdxbCB9IGZyb20gJ2Fwb2xsby1zZXJ2ZXItZXhwcmVzcydcblxuZXhwb3J0IGRlZmF1bHQgZ3FsYFxuICAgICMgQ29tbWVudHMgaW4gR3JhcGhRTCBhcmUgZGVmaW5lZCB3aXRoIHRoZSBoYXNoICgjKSBzeW1ib2wuXG5cbiAgICB0eXBlIExpc3Qge1xuICAgICAgICBpZDogSUQhXG4gICAgICAgIG5hbWU6IFN0cmluZyFcbiAgICAgICAgdGFza3M6IFtUYXNrIV1cbiAgICAgICAgdXNlcklkOiBJRCFcbiAgICAgICAgcHVibGljOiBCb29sZWFuIVxuICAgIH1cblxuICAgICMgVGhlIFwiUXVlcnlcIiB0eXBlIGlzIHRoZSByb290IG9mIGFsbCBHcmFwaFFMIHF1ZXJpZXMuXG4gICAgZXh0ZW5kIHR5cGUgUXVlcnkge1xuICAgICAgICBsaXN0czogW0xpc3RdXG4gICAgICAgIGxpc3QoaWQ6IElEISk6IExpc3RcbiAgICB9XG5cbiAgICBleHRlbmQgdHlwZSBNdXRhdGlvbiB7XG4gICAgICAgIGFkZExpc3QobmFtZTogU3RyaW5nISwgcHVibGljOiBCb29sZWFuISk6IExpc3QhXG4gICAgICAgIGRlbGV0ZUxpc3QoaWQ6IElEISk6IFN0cmluZyFcbiAgICB9XG5cbiAgICBlbnVtIGFsbG93ZWRMaXN0QWN0aW9uIHtcbiAgICAgICAgQ1JFQVRFXG4gICAgICAgIERFU1RST1lcbiAgICB9XG5cbiAgICB0eXBlIExpc3RSZXNwb25zZSB7XG4gICAgICAgIGxpc3Q6IExpc3RcbiAgICAgICAgYWN0aW9uOiBhbGxvd2VkTGlzdEFjdGlvblxuICAgIH1cblxuICAgIGV4dGVuZCB0eXBlIFN1YnNjcmlwdGlvbntcbiAgICAgICAgbGlzdFN1YjogTGlzdFJlc3BvbnNlXG4gICAgfVxuXG5gOyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "list_schema.js"
      ],
      "names": [
        "gql"
      ],
      "mappings": ";;;;;;;AAAA;;;;;;;;;;;;;;mBAEeA,wB",
      "sourceRoot": "/home/jcgp/Escritorio/apolloServer1/schemas",
      "sourcesContent": [
        "import { gql } from 'apollo-server-express'\n\nexport default gql`\n    # Comments in GraphQL are defined with the hash (#) symbol.\n\n    type List {\n        id: ID!\n        name: String!\n        tasks: [Task!]\n        userId: ID!\n        public: Boolean!\n    }\n\n    # The \"Query\" type is the root of all GraphQL queries.\n    extend type Query {\n        lists: [List]\n        list(id: ID!): List\n    }\n\n    extend type Mutation {\n        addList(name: String!, public: Boolean!): List!\n        deleteList(id: ID!): String!\n    }\n\n    enum allowedListAction {\n        CREATE\n        DESTROY\n    }\n\n    type ListResponse {\n        list: List\n        action: allowedListAction\n    }\n\n    extend type Subscription{\n        listSub: ListResponse\n    }\n\n`;"
      ]
    },
    "sourceType": "script",
    "mtime": 1553761143789
  },
  "{\"sourceRoot\":\"/home/jcgp/Escritorio/apolloServer1/models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/jcgp/Escritorio/apolloServer1\",\"filename\":\"/home/jcgp/Escritorio/apolloServer1/models/list_model.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/jcgp/Escritorio/apolloServer1\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/jcgp/Escritorio/apolloServer1/models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/jcgp/Escritorio/apolloServer1",
      "filename": "/home/jcgp/Escritorio/apolloServer1/models/list_model.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/jcgp/Escritorio/apolloServer1",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/jcgp/Escritorio/apolloServer1/models/list_model.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/home/jcgp/Escritorio/apolloServer1/models/list_model.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/jcgp/Escritorio/apolloServer1/models",
        "sourceFileName": "list_model.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar list = function list(sequelize, DataTypes) {\n  var List = sequelize.define('list', {\n    name: {\n      type: DataTypes.STRING,\n      allowNull: false\n    },\n    public: {\n      type: DataTypes.BOOLEAN,\n      allowNull: false\n    }\n  });\n\n  List.associate = function (models) {\n    List.hasMany(models.Task, {\n      onDelete: 'CASCADE'\n    });\n    List.belongsTo(models.User, {\n      onDelete: 'SET NULL'\n    });\n  };\n\n  return List;\n};\n\nvar _default = list;\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpc3RfbW9kZWwuanMiXSwibmFtZXMiOlsibGlzdCIsInNlcXVlbGl6ZSIsIkRhdGFUeXBlcyIsIkxpc3QiLCJkZWZpbmUiLCJuYW1lIiwidHlwZSIsIlNUUklORyIsImFsbG93TnVsbCIsInB1YmxpYyIsIkJPT0xFQU4iLCJhc3NvY2lhdGUiLCJtb2RlbHMiLCJoYXNNYW55IiwiVGFzayIsIm9uRGVsZXRlIiwiYmVsb25nc1RvIiwiVXNlciJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUNBLElBQU1BLElBQUksR0FBRyxTQUFQQSxJQUFPLENBQUNDLFNBQUQsRUFBWUMsU0FBWixFQUEwQjtBQUNuQyxNQUFNQyxJQUFJLEdBQUdGLFNBQVMsQ0FBQ0csTUFBVixDQUFpQixNQUFqQixFQUF5QjtBQUNwQ0MsSUFBQUEsSUFBSSxFQUFFO0FBQ0pDLE1BQUFBLElBQUksRUFBRUosU0FBUyxDQUFDSyxNQURaO0FBRUpDLE1BQUFBLFNBQVMsRUFBRTtBQUZQLEtBRDhCO0FBS3BDQyxJQUFBQSxNQUFNLEVBQUU7QUFDTkgsTUFBQUEsSUFBSSxFQUFFSixTQUFTLENBQUNRLE9BRFY7QUFFTkYsTUFBQUEsU0FBUyxFQUFDO0FBRko7QUFMNEIsR0FBekIsQ0FBYjs7QUFXQUwsRUFBQUEsSUFBSSxDQUFDUSxTQUFMLEdBQWlCLFVBQUFDLE1BQU0sRUFBSTtBQUN6QlQsSUFBQUEsSUFBSSxDQUFDVSxPQUFMLENBQWFELE1BQU0sQ0FBQ0UsSUFBcEIsRUFBMEI7QUFBRUMsTUFBQUEsUUFBUSxFQUFFO0FBQVosS0FBMUI7QUFDQVosSUFBQUEsSUFBSSxDQUFDYSxTQUFMLENBQWVKLE1BQU0sQ0FBQ0ssSUFBdEIsRUFBNEI7QUFBRUYsTUFBQUEsUUFBUSxFQUFFO0FBQVosS0FBNUI7QUFDRCxHQUhEOztBQUtGLFNBQU9aLElBQVA7QUFDRCxDQWxCRDs7ZUFvQmVILEkiLCJzb3VyY2VSb290IjoiL2hvbWUvamNncC9Fc2NyaXRvcmlvL2Fwb2xsb1NlcnZlcjEvbW9kZWxzIiwic291cmNlc0NvbnRlbnQiOlsiXG5jb25zdCBsaXN0ID0gKHNlcXVlbGl6ZSwgRGF0YVR5cGVzKSA9PiB7XG4gICAgY29uc3QgTGlzdCA9IHNlcXVlbGl6ZS5kZWZpbmUoJ2xpc3QnLCB7XG4gICAgICBuYW1lOiB7XG4gICAgICAgIHR5cGU6IERhdGFUeXBlcy5TVFJJTkcsXG4gICAgICAgIGFsbG93TnVsbDogZmFsc2UsXG4gICAgICB9LFxuICAgICAgcHVibGljOiB7XG4gICAgICAgIHR5cGU6IERhdGFUeXBlcy5CT09MRUFOLFxuICAgICAgICBhbGxvd051bGw6ZmFsc2UsXG4gICAgICB9XG4gICAgfSk7XG4gIFxuICAgIExpc3QuYXNzb2NpYXRlID0gbW9kZWxzID0+IHtcbiAgICAgIExpc3QuaGFzTWFueShtb2RlbHMuVGFzaywgeyBvbkRlbGV0ZTogJ0NBU0NBREUnIH0pO1xuICAgICAgTGlzdC5iZWxvbmdzVG8obW9kZWxzLlVzZXIsIHsgb25EZWxldGU6ICdTRVQgTlVMTCd9KVxuICAgIH07XG4gIFxuICByZXR1cm4gTGlzdDtcbn07XG4gIFxuZXhwb3J0IGRlZmF1bHQgbGlzdDtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "list_model.js"
      ],
      "names": [
        "list",
        "sequelize",
        "DataTypes",
        "List",
        "define",
        "name",
        "type",
        "STRING",
        "allowNull",
        "public",
        "BOOLEAN",
        "associate",
        "models",
        "hasMany",
        "Task",
        "onDelete",
        "belongsTo",
        "User"
      ],
      "mappings": ";;;;;;;AACA,IAAMA,IAAI,GAAG,SAAPA,IAAO,CAACC,SAAD,EAAYC,SAAZ,EAA0B;AACnC,MAAMC,IAAI,GAAGF,SAAS,CAACG,MAAV,CAAiB,MAAjB,EAAyB;AACpCC,IAAAA,IAAI,EAAE;AACJC,MAAAA,IAAI,EAAEJ,SAAS,CAACK,MADZ;AAEJC,MAAAA,SAAS,EAAE;AAFP,KAD8B;AAKpCC,IAAAA,MAAM,EAAE;AACNH,MAAAA,IAAI,EAAEJ,SAAS,CAACQ,OADV;AAENF,MAAAA,SAAS,EAAC;AAFJ;AAL4B,GAAzB,CAAb;;AAWAL,EAAAA,IAAI,CAACQ,SAAL,GAAiB,UAAAC,MAAM,EAAI;AACzBT,IAAAA,IAAI,CAACU,OAAL,CAAaD,MAAM,CAACE,IAApB,EAA0B;AAAEC,MAAAA,QAAQ,EAAE;AAAZ,KAA1B;AACAZ,IAAAA,IAAI,CAACa,SAAL,CAAeJ,MAAM,CAACK,IAAtB,EAA4B;AAAEF,MAAAA,QAAQ,EAAE;AAAZ,KAA5B;AACD,GAHD;;AAKF,SAAOZ,IAAP;AACD,CAlBD;;eAoBeH,I",
      "sourceRoot": "/home/jcgp/Escritorio/apolloServer1/models",
      "sourcesContent": [
        "\nconst list = (sequelize, DataTypes) => {\n    const List = sequelize.define('list', {\n      name: {\n        type: DataTypes.STRING,\n        allowNull: false,\n      },\n      public: {\n        type: DataTypes.BOOLEAN,\n        allowNull:false,\n      }\n    });\n  \n    List.associate = models => {\n      List.hasMany(models.Task, { onDelete: 'CASCADE' });\n      List.belongsTo(models.User, { onDelete: 'SET NULL'})\n    };\n  \n  return List;\n};\n  \nexport default list;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1553761053422
  },
  "{\"sourceRoot\":\"/home/jcgp/Escritorio/apolloServer1/resolvers\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/jcgp/Escritorio/apolloServer1\",\"filename\":\"/home/jcgp/Escritorio/apolloServer1/resolvers/auth_resolver.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/jcgp/Escritorio/apolloServer1\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/jcgp/Escritorio/apolloServer1/resolvers",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/jcgp/Escritorio/apolloServer1",
      "filename": "/home/jcgp/Escritorio/apolloServer1/resolvers/auth_resolver.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/jcgp/Escritorio/apolloServer1",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/jcgp/Escritorio/apolloServer1/resolvers/auth_resolver.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/home/jcgp/Escritorio/apolloServer1/resolvers/auth_resolver.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/jcgp/Escritorio/apolloServer1/resolvers",
        "sourceFileName": "auth_resolver.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.isOwner = exports.isAuthenticated = void 0;\n\nvar _apolloServer = require(\"apollo-server\");\n\nvar _graphqlResolvers = require(\"graphql-resolvers\");\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar isAuthenticated = function isAuthenticated(parent, args, _ref) {\n  var auth = _ref.auth;\n\n  if (auth) {\n    _graphqlResolvers.skip;\n  } else {\n    throw new _apolloServer.ForbiddenError('Usuario no identificado');\n  }\n};\n\nexports.isAuthenticated = isAuthenticated;\n\nvar isOwner =\n/*#__PURE__*/\nfunction () {\n  var _ref3 = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee(parent, args, _ref2) {\n    var models, auth, result;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            models = _ref2.models, auth = _ref2.auth;\n\n            if (!auth) {\n              _context.next = 12;\n              break;\n            }\n\n            _context.next = 4;\n            return models.List.findOne({\n              where: {\n                id: args.id\n              }\n            });\n\n          case 4:\n            result = _context.sent;\n\n            if (!(result.userId == auth.id)) {\n              _context.next = 9;\n              break;\n            }\n\n            _graphqlResolvers.skip;\n            _context.next = 10;\n            break;\n\n          case 9:\n            throw new _apolloServer.ForbiddenError('Usuario no valido, no es usted el dueÃ±o de la lista');\n\n          case 10:\n            _context.next = 13;\n            break;\n\n          case 12:\n            throw new _apolloServer.ForbiddenError('Usuario no identificado');\n\n          case 13:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function isOwner(_x, _x2, _x3) {\n    return _ref3.apply(this, arguments);\n  };\n}();\n\nexports.isOwner = isOwner;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImF1dGhfcmVzb2x2ZXIuanMiXSwibmFtZXMiOlsiaXNBdXRoZW50aWNhdGVkIiwicGFyZW50IiwiYXJncyIsImF1dGgiLCJza2lwIiwiRm9yYmlkZGVuRXJyb3IiLCJpc093bmVyIiwibW9kZWxzIiwiTGlzdCIsImZpbmRPbmUiLCJ3aGVyZSIsImlkIiwicmVzdWx0IiwidXNlcklkIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBQ0E7Ozs7OztBQUVPLElBQU1BLGVBQWUsR0FBRyxTQUFsQkEsZUFBa0IsQ0FBQ0MsTUFBRCxFQUFTQyxJQUFULFFBQTBCO0FBQUEsTUFBVkMsSUFBVSxRQUFWQSxJQUFVOztBQUNyRCxNQUFHQSxJQUFILEVBQVE7QUFDSkM7QUFDSCxHQUZELE1BR0k7QUFDQSxVQUFNLElBQUlDLDRCQUFKLENBQW1CLHlCQUFuQixDQUFOO0FBQ0g7QUFDSixDQVBNOzs7O0FBU0EsSUFBTUMsT0FBTztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsMEJBQUcsaUJBQU9MLE1BQVAsRUFBZUMsSUFBZjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBc0JLLFlBQUFBLE1BQXRCLFNBQXNCQSxNQUF0QixFQUE4QkosSUFBOUIsU0FBOEJBLElBQTlCOztBQUFBLGlCQUNoQkEsSUFEZ0I7QUFBQTtBQUFBO0FBQUE7O0FBQUE7QUFBQSxtQkFFTUksTUFBTSxDQUFDQyxJQUFQLENBQVlDLE9BQVosQ0FBb0I7QUFDckNDLGNBQUFBLEtBQUssRUFBQztBQUNGQyxnQkFBQUEsRUFBRSxFQUFFVCxJQUFJLENBQUNTO0FBRFA7QUFEK0IsYUFBcEIsQ0FGTjs7QUFBQTtBQUVUQyxZQUFBQSxNQUZTOztBQUFBLGtCQVFaQSxNQUFNLENBQUNDLE1BQVAsSUFBaUJWLElBQUksQ0FBQ1EsRUFSVjtBQUFBO0FBQUE7QUFBQTs7QUFTWFA7QUFUVztBQUFBOztBQUFBO0FBQUEsa0JBWUwsSUFBSUMsNEJBQUosQ0FBbUIscURBQW5CLENBWks7O0FBQUE7QUFBQTtBQUFBOztBQUFBO0FBQUEsa0JBZ0JULElBQUlBLDRCQUFKLENBQW1CLHlCQUFuQixDQWhCUzs7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxHQUFIOztBQUFBLGtCQUFQQyxPQUFPO0FBQUE7QUFBQTtBQUFBLEdBQWIiLCJzb3VyY2VSb290IjoiL2hvbWUvamNncC9Fc2NyaXRvcmlvL2Fwb2xsb1NlcnZlcjEvcmVzb2x2ZXJzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRm9yYmlkZGVuRXJyb3IgfSBmcm9tICdhcG9sbG8tc2VydmVyJztcbmltcG9ydCB7IHNraXAgfSBmcm9tICdncmFwaHFsLXJlc29sdmVycyc7XG5cbmV4cG9ydCBjb25zdCBpc0F1dGhlbnRpY2F0ZWQgPSAocGFyZW50LCBhcmdzLCB7YXV0aH0pID0+IHtcbiAgICBpZihhdXRoKXtcbiAgICAgICAgc2tpcFxuICAgIH1cbiAgICBlbHNle1xuICAgICAgICB0aHJvdyBuZXcgRm9yYmlkZGVuRXJyb3IoJ1VzdWFyaW8gbm8gaWRlbnRpZmljYWRvJylcbiAgICB9XG59O1xuXG5leHBvcnQgY29uc3QgaXNPd25lciA9IGFzeW5jIChwYXJlbnQsIGFyZ3MsIHttb2RlbHMsIGF1dGh9KSA9PiB7XG4gICAgaWYoYXV0aCl7XG4gICAgICAgIGNvbnN0IHJlc3VsdCA9IGF3YWl0IG1vZGVscy5MaXN0LmZpbmRPbmUoe1xuICAgICAgICAgICAgd2hlcmU6e1xuICAgICAgICAgICAgICAgIGlkOiBhcmdzLmlkLFxuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICBcbiAgICAgICAgaWYocmVzdWx0LnVzZXJJZCA9PSBhdXRoLmlkKXtcbiAgICAgICAgICAgIHNraXBcbiAgICAgICAgfVxuICAgICAgICBlbHNle1xuICAgICAgICAgICAgdGhyb3cgbmV3IEZvcmJpZGRlbkVycm9yKCdVc3VhcmlvIG5vIHZhbGlkbywgbm8gZXMgdXN0ZWQgZWwgZHVlw7FvIGRlIGxhIGxpc3RhJylcbiAgICAgICAgfVxuICAgIH1cbiAgICBlbHNle1xuICAgICAgICB0aHJvdyBuZXcgRm9yYmlkZGVuRXJyb3IoJ1VzdWFyaW8gbm8gaWRlbnRpZmljYWRvJylcbiAgICB9XG4gICAgXG59XG5cbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "auth_resolver.js"
      ],
      "names": [
        "isAuthenticated",
        "parent",
        "args",
        "auth",
        "skip",
        "ForbiddenError",
        "isOwner",
        "models",
        "List",
        "findOne",
        "where",
        "id",
        "result",
        "userId"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;;;;;AAEO,IAAMA,eAAe,GAAG,SAAlBA,eAAkB,CAACC,MAAD,EAASC,IAAT,QAA0B;AAAA,MAAVC,IAAU,QAAVA,IAAU;;AACrD,MAAGA,IAAH,EAAQ;AACJC;AACH,GAFD,MAGI;AACA,UAAM,IAAIC,4BAAJ,CAAmB,yBAAnB,CAAN;AACH;AACJ,CAPM;;;;AASA,IAAMC,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAG,iBAAOL,MAAP,EAAeC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAsBK,YAAAA,MAAtB,SAAsBA,MAAtB,EAA8BJ,IAA9B,SAA8BA,IAA9B;;AAAA,iBAChBA,IADgB;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAEMI,MAAM,CAACC,IAAP,CAAYC,OAAZ,CAAoB;AACrCC,cAAAA,KAAK,EAAC;AACFC,gBAAAA,EAAE,EAAET,IAAI,CAACS;AADP;AAD+B,aAApB,CAFN;;AAAA;AAETC,YAAAA,MAFS;;AAAA,kBAQZA,MAAM,CAACC,MAAP,IAAiBV,IAAI,CAACQ,EARV;AAAA;AAAA;AAAA;;AASXP;AATW;AAAA;;AAAA;AAAA,kBAYL,IAAIC,4BAAJ,CAAmB,qDAAnB,CAZK;;AAAA;AAAA;AAAA;;AAAA;AAAA,kBAgBT,IAAIA,4BAAJ,CAAmB,yBAAnB,CAhBS;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAPC,OAAO;AAAA;AAAA;AAAA,GAAb",
      "sourceRoot": "/home/jcgp/Escritorio/apolloServer1/resolvers",
      "sourcesContent": [
        "import { ForbiddenError } from 'apollo-server';\nimport { skip } from 'graphql-resolvers';\n\nexport const isAuthenticated = (parent, args, {auth}) => {\n    if(auth){\n        skip\n    }\n    else{\n        throw new ForbiddenError('Usuario no identificado')\n    }\n};\n\nexport const isOwner = async (parent, args, {models, auth}) => {\n    if(auth){\n        const result = await models.List.findOne({\n            where:{\n                id: args.id,\n            }\n        });\n    \n        if(result.userId == auth.id){\n            skip\n        }\n        else{\n            throw new ForbiddenError('Usuario no valido, no es usted el dueÃ±o de la lista')\n        }\n    }\n    else{\n        throw new ForbiddenError('Usuario no identificado')\n    }\n    \n}\n\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1553698620996
  }
}